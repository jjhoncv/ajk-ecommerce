
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model attribute_option_images
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type attribute_option_images = $Result.DefaultSelection<Prisma.$attribute_option_imagesPayload>
/**
 * Model attribute_options
 * 
 */
export type attribute_options = $Result.DefaultSelection<Prisma.$attribute_optionsPayload>
/**
 * Model attributes
 * 
 */
export type attributes = $Result.DefaultSelection<Prisma.$attributesPayload>
/**
 * Model banner
 * 
 */
export type banner = $Result.DefaultSelection<Prisma.$bannerPayload>
/**
 * Model brands
 * 
 */
export type brands = $Result.DefaultSelection<Prisma.$brandsPayload>
/**
 * Model categories
 * 
 */
export type categories = $Result.DefaultSelection<Prisma.$categoriesPayload>
/**
 * Model customers
 * 
 */
export type customers = $Result.DefaultSelection<Prisma.$customersPayload>
/**
 * Model customers_addresses
 * 
 */
export type customers_addresses = $Result.DefaultSelection<Prisma.$customers_addressesPayload>
/**
 * Model permissions
 * 
 */
export type permissions = $Result.DefaultSelection<Prisma.$permissionsPayload>
/**
 * Model product_categories
 * 
 */
export type product_categories = $Result.DefaultSelection<Prisma.$product_categoriesPayload>
/**
 * Model product_variants
 * 
 */
export type product_variants = $Result.DefaultSelection<Prisma.$product_variantsPayload>
/**
 * Model products
 * 
 */
export type products = $Result.DefaultSelection<Prisma.$productsPayload>
/**
 * Model promotion_variants
 * 
 */
export type promotion_variants = $Result.DefaultSelection<Prisma.$promotion_variantsPayload>
/**
 * Model promotions
 * 
 */
export type promotions = $Result.DefaultSelection<Prisma.$promotionsPayload>
/**
 * Model rating_images
 * 
 */
export type rating_images = $Result.DefaultSelection<Prisma.$rating_imagesPayload>
/**
 * Model roles
 * 
 */
export type roles = $Result.DefaultSelection<Prisma.$rolesPayload>
/**
 * Model roles_sections
 * 
 */
export type roles_sections = $Result.DefaultSelection<Prisma.$roles_sectionsPayload>
/**
 * Model sections
 * 
 */
export type sections = $Result.DefaultSelection<Prisma.$sectionsPayload>
/**
 * Model services
 * 
 */
export type services = $Result.DefaultSelection<Prisma.$servicesPayload>
/**
 * Model services_images
 * 
 */
export type services_images = $Result.DefaultSelection<Prisma.$services_imagesPayload>
/**
 * Model users
 * 
 */
export type users = $Result.DefaultSelection<Prisma.$usersPayload>
/**
 * Model variant_attribute_options
 * 
 */
export type variant_attribute_options = $Result.DefaultSelection<Prisma.$variant_attribute_optionsPayload>
/**
 * Model variant_images
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type variant_images = $Result.DefaultSelection<Prisma.$variant_imagesPayload>
/**
 * Model variant_ratings
 * 
 */
export type variant_ratings = $Result.DefaultSelection<Prisma.$variant_ratingsPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const attribute_option_images_image_type: {
  front: 'front',
  back: 'back',
  left: 'left',
  right: 'right',
  top: 'top',
  bottom: 'bottom',
  detail: 'detail',
  lifestyle: 'lifestyle',
  packaging: 'packaging'
};

export type attribute_option_images_image_type = (typeof attribute_option_images_image_type)[keyof typeof attribute_option_images_image_type]


export const attributes_display_type: {
  radio: 'radio',
  pills: 'pills',
  select: 'select',
  color: 'color',
  custom: 'custom'
};

export type attributes_display_type = (typeof attributes_display_type)[keyof typeof attributes_display_type]


export const variant_images_image_type: {
  front: 'front',
  back: 'back',
  left: 'left',
  right: 'right',
  top: 'top',
  bottom: 'bottom',
  detail: 'detail',
  lifestyle: 'lifestyle',
  packaging: 'packaging'
};

export type variant_images_image_type = (typeof variant_images_image_type)[keyof typeof variant_images_image_type]


export const promotions_discount_type: {
  percentage: 'percentage',
  fixed_amount: 'fixed_amount'
};

export type promotions_discount_type = (typeof promotions_discount_type)[keyof typeof promotions_discount_type]

}

export type attribute_option_images_image_type = $Enums.attribute_option_images_image_type

export const attribute_option_images_image_type: typeof $Enums.attribute_option_images_image_type

export type attributes_display_type = $Enums.attributes_display_type

export const attributes_display_type: typeof $Enums.attributes_display_type

export type variant_images_image_type = $Enums.variant_images_image_type

export const variant_images_image_type: typeof $Enums.variant_images_image_type

export type promotions_discount_type = $Enums.promotions_discount_type

export const promotions_discount_type: typeof $Enums.promotions_discount_type

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Attribute_option_images
 * const attribute_option_images = await prisma.attribute_option_images.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Attribute_option_images
   * const attribute_option_images = await prisma.attribute_option_images.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.attribute_option_images`: Exposes CRUD operations for the **attribute_option_images** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Attribute_option_images
    * const attribute_option_images = await prisma.attribute_option_images.findMany()
    * ```
    */
  get attribute_option_images(): Prisma.attribute_option_imagesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.attribute_options`: Exposes CRUD operations for the **attribute_options** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Attribute_options
    * const attribute_options = await prisma.attribute_options.findMany()
    * ```
    */
  get attribute_options(): Prisma.attribute_optionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.attributes`: Exposes CRUD operations for the **attributes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Attributes
    * const attributes = await prisma.attributes.findMany()
    * ```
    */
  get attributes(): Prisma.attributesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.banner`: Exposes CRUD operations for the **banner** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Banners
    * const banners = await prisma.banner.findMany()
    * ```
    */
  get banner(): Prisma.bannerDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.brands`: Exposes CRUD operations for the **brands** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Brands
    * const brands = await prisma.brands.findMany()
    * ```
    */
  get brands(): Prisma.brandsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.categories`: Exposes CRUD operations for the **categories** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categories
    * const categories = await prisma.categories.findMany()
    * ```
    */
  get categories(): Prisma.categoriesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.customers`: Exposes CRUD operations for the **customers** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Customers
    * const customers = await prisma.customers.findMany()
    * ```
    */
  get customers(): Prisma.customersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.customers_addresses`: Exposes CRUD operations for the **customers_addresses** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Customers_addresses
    * const customers_addresses = await prisma.customers_addresses.findMany()
    * ```
    */
  get customers_addresses(): Prisma.customers_addressesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.permissions`: Exposes CRUD operations for the **permissions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Permissions
    * const permissions = await prisma.permissions.findMany()
    * ```
    */
  get permissions(): Prisma.permissionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.product_categories`: Exposes CRUD operations for the **product_categories** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Product_categories
    * const product_categories = await prisma.product_categories.findMany()
    * ```
    */
  get product_categories(): Prisma.product_categoriesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.product_variants`: Exposes CRUD operations for the **product_variants** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Product_variants
    * const product_variants = await prisma.product_variants.findMany()
    * ```
    */
  get product_variants(): Prisma.product_variantsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.products`: Exposes CRUD operations for the **products** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Products
    * const products = await prisma.products.findMany()
    * ```
    */
  get products(): Prisma.productsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.promotion_variants`: Exposes CRUD operations for the **promotion_variants** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Promotion_variants
    * const promotion_variants = await prisma.promotion_variants.findMany()
    * ```
    */
  get promotion_variants(): Prisma.promotion_variantsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.promotions`: Exposes CRUD operations for the **promotions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Promotions
    * const promotions = await prisma.promotions.findMany()
    * ```
    */
  get promotions(): Prisma.promotionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.rating_images`: Exposes CRUD operations for the **rating_images** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Rating_images
    * const rating_images = await prisma.rating_images.findMany()
    * ```
    */
  get rating_images(): Prisma.rating_imagesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.roles`: Exposes CRUD operations for the **roles** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Roles
    * const roles = await prisma.roles.findMany()
    * ```
    */
  get roles(): Prisma.rolesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.roles_sections`: Exposes CRUD operations for the **roles_sections** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Roles_sections
    * const roles_sections = await prisma.roles_sections.findMany()
    * ```
    */
  get roles_sections(): Prisma.roles_sectionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sections`: Exposes CRUD operations for the **sections** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sections
    * const sections = await prisma.sections.findMany()
    * ```
    */
  get sections(): Prisma.sectionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.services`: Exposes CRUD operations for the **services** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Services
    * const services = await prisma.services.findMany()
    * ```
    */
  get services(): Prisma.servicesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.services_images`: Exposes CRUD operations for the **services_images** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Services_images
    * const services_images = await prisma.services_images.findMany()
    * ```
    */
  get services_images(): Prisma.services_imagesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.users`: Exposes CRUD operations for the **users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.usersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.variant_attribute_options`: Exposes CRUD operations for the **variant_attribute_options** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Variant_attribute_options
    * const variant_attribute_options = await prisma.variant_attribute_options.findMany()
    * ```
    */
  get variant_attribute_options(): Prisma.variant_attribute_optionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.variant_images`: Exposes CRUD operations for the **variant_images** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Variant_images
    * const variant_images = await prisma.variant_images.findMany()
    * ```
    */
  get variant_images(): Prisma.variant_imagesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.variant_ratings`: Exposes CRUD operations for the **variant_ratings** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Variant_ratings
    * const variant_ratings = await prisma.variant_ratings.findMany()
    * ```
    */
  get variant_ratings(): Prisma.variant_ratingsDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.9.0
   * Query Engine version: 81e4af48011447c3cc503a190e86995b66d2a28e
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    attribute_option_images: 'attribute_option_images',
    attribute_options: 'attribute_options',
    attributes: 'attributes',
    banner: 'banner',
    brands: 'brands',
    categories: 'categories',
    customers: 'customers',
    customers_addresses: 'customers_addresses',
    permissions: 'permissions',
    product_categories: 'product_categories',
    product_variants: 'product_variants',
    products: 'products',
    promotion_variants: 'promotion_variants',
    promotions: 'promotions',
    rating_images: 'rating_images',
    roles: 'roles',
    roles_sections: 'roles_sections',
    sections: 'sections',
    services: 'services',
    services_images: 'services_images',
    users: 'users',
    variant_attribute_options: 'variant_attribute_options',
    variant_images: 'variant_images',
    variant_ratings: 'variant_ratings'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "attribute_option_images" | "attribute_options" | "attributes" | "banner" | "brands" | "categories" | "customers" | "customers_addresses" | "permissions" | "product_categories" | "product_variants" | "products" | "promotion_variants" | "promotions" | "rating_images" | "roles" | "roles_sections" | "sections" | "services" | "services_images" | "users" | "variant_attribute_options" | "variant_images" | "variant_ratings"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      attribute_option_images: {
        payload: Prisma.$attribute_option_imagesPayload<ExtArgs>
        fields: Prisma.attribute_option_imagesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.attribute_option_imagesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attribute_option_imagesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.attribute_option_imagesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attribute_option_imagesPayload>
          }
          findFirst: {
            args: Prisma.attribute_option_imagesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attribute_option_imagesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.attribute_option_imagesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attribute_option_imagesPayload>
          }
          findMany: {
            args: Prisma.attribute_option_imagesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attribute_option_imagesPayload>[]
          }
          create: {
            args: Prisma.attribute_option_imagesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attribute_option_imagesPayload>
          }
          createMany: {
            args: Prisma.attribute_option_imagesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.attribute_option_imagesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attribute_option_imagesPayload>
          }
          update: {
            args: Prisma.attribute_option_imagesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attribute_option_imagesPayload>
          }
          deleteMany: {
            args: Prisma.attribute_option_imagesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.attribute_option_imagesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.attribute_option_imagesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attribute_option_imagesPayload>
          }
          aggregate: {
            args: Prisma.Attribute_option_imagesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAttribute_option_images>
          }
          groupBy: {
            args: Prisma.attribute_option_imagesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Attribute_option_imagesGroupByOutputType>[]
          }
          count: {
            args: Prisma.attribute_option_imagesCountArgs<ExtArgs>
            result: $Utils.Optional<Attribute_option_imagesCountAggregateOutputType> | number
          }
        }
      }
      attribute_options: {
        payload: Prisma.$attribute_optionsPayload<ExtArgs>
        fields: Prisma.attribute_optionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.attribute_optionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attribute_optionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.attribute_optionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attribute_optionsPayload>
          }
          findFirst: {
            args: Prisma.attribute_optionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attribute_optionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.attribute_optionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attribute_optionsPayload>
          }
          findMany: {
            args: Prisma.attribute_optionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attribute_optionsPayload>[]
          }
          create: {
            args: Prisma.attribute_optionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attribute_optionsPayload>
          }
          createMany: {
            args: Prisma.attribute_optionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.attribute_optionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attribute_optionsPayload>
          }
          update: {
            args: Prisma.attribute_optionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attribute_optionsPayload>
          }
          deleteMany: {
            args: Prisma.attribute_optionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.attribute_optionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.attribute_optionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attribute_optionsPayload>
          }
          aggregate: {
            args: Prisma.Attribute_optionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAttribute_options>
          }
          groupBy: {
            args: Prisma.attribute_optionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Attribute_optionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.attribute_optionsCountArgs<ExtArgs>
            result: $Utils.Optional<Attribute_optionsCountAggregateOutputType> | number
          }
        }
      }
      attributes: {
        payload: Prisma.$attributesPayload<ExtArgs>
        fields: Prisma.attributesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.attributesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attributesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.attributesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attributesPayload>
          }
          findFirst: {
            args: Prisma.attributesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attributesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.attributesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attributesPayload>
          }
          findMany: {
            args: Prisma.attributesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attributesPayload>[]
          }
          create: {
            args: Prisma.attributesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attributesPayload>
          }
          createMany: {
            args: Prisma.attributesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.attributesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attributesPayload>
          }
          update: {
            args: Prisma.attributesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attributesPayload>
          }
          deleteMany: {
            args: Prisma.attributesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.attributesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.attributesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$attributesPayload>
          }
          aggregate: {
            args: Prisma.AttributesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAttributes>
          }
          groupBy: {
            args: Prisma.attributesGroupByArgs<ExtArgs>
            result: $Utils.Optional<AttributesGroupByOutputType>[]
          }
          count: {
            args: Prisma.attributesCountArgs<ExtArgs>
            result: $Utils.Optional<AttributesCountAggregateOutputType> | number
          }
        }
      }
      banner: {
        payload: Prisma.$bannerPayload<ExtArgs>
        fields: Prisma.bannerFieldRefs
        operations: {
          findUnique: {
            args: Prisma.bannerFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bannerPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.bannerFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bannerPayload>
          }
          findFirst: {
            args: Prisma.bannerFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bannerPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.bannerFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bannerPayload>
          }
          findMany: {
            args: Prisma.bannerFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bannerPayload>[]
          }
          create: {
            args: Prisma.bannerCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bannerPayload>
          }
          createMany: {
            args: Prisma.bannerCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.bannerDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bannerPayload>
          }
          update: {
            args: Prisma.bannerUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bannerPayload>
          }
          deleteMany: {
            args: Prisma.bannerDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.bannerUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.bannerUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bannerPayload>
          }
          aggregate: {
            args: Prisma.BannerAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBanner>
          }
          groupBy: {
            args: Prisma.bannerGroupByArgs<ExtArgs>
            result: $Utils.Optional<BannerGroupByOutputType>[]
          }
          count: {
            args: Prisma.bannerCountArgs<ExtArgs>
            result: $Utils.Optional<BannerCountAggregateOutputType> | number
          }
        }
      }
      brands: {
        payload: Prisma.$brandsPayload<ExtArgs>
        fields: Prisma.brandsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.brandsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$brandsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.brandsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$brandsPayload>
          }
          findFirst: {
            args: Prisma.brandsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$brandsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.brandsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$brandsPayload>
          }
          findMany: {
            args: Prisma.brandsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$brandsPayload>[]
          }
          create: {
            args: Prisma.brandsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$brandsPayload>
          }
          createMany: {
            args: Prisma.brandsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.brandsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$brandsPayload>
          }
          update: {
            args: Prisma.brandsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$brandsPayload>
          }
          deleteMany: {
            args: Prisma.brandsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.brandsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.brandsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$brandsPayload>
          }
          aggregate: {
            args: Prisma.BrandsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBrands>
          }
          groupBy: {
            args: Prisma.brandsGroupByArgs<ExtArgs>
            result: $Utils.Optional<BrandsGroupByOutputType>[]
          }
          count: {
            args: Prisma.brandsCountArgs<ExtArgs>
            result: $Utils.Optional<BrandsCountAggregateOutputType> | number
          }
        }
      }
      categories: {
        payload: Prisma.$categoriesPayload<ExtArgs>
        fields: Prisma.categoriesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.categoriesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.categoriesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload>
          }
          findFirst: {
            args: Prisma.categoriesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.categoriesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload>
          }
          findMany: {
            args: Prisma.categoriesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload>[]
          }
          create: {
            args: Prisma.categoriesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload>
          }
          createMany: {
            args: Prisma.categoriesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.categoriesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload>
          }
          update: {
            args: Prisma.categoriesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload>
          }
          deleteMany: {
            args: Prisma.categoriesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.categoriesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.categoriesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload>
          }
          aggregate: {
            args: Prisma.CategoriesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategories>
          }
          groupBy: {
            args: Prisma.categoriesGroupByArgs<ExtArgs>
            result: $Utils.Optional<CategoriesGroupByOutputType>[]
          }
          count: {
            args: Prisma.categoriesCountArgs<ExtArgs>
            result: $Utils.Optional<CategoriesCountAggregateOutputType> | number
          }
        }
      }
      customers: {
        payload: Prisma.$customersPayload<ExtArgs>
        fields: Prisma.customersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.customersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.customersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customersPayload>
          }
          findFirst: {
            args: Prisma.customersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.customersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customersPayload>
          }
          findMany: {
            args: Prisma.customersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customersPayload>[]
          }
          create: {
            args: Prisma.customersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customersPayload>
          }
          createMany: {
            args: Prisma.customersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.customersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customersPayload>
          }
          update: {
            args: Prisma.customersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customersPayload>
          }
          deleteMany: {
            args: Prisma.customersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.customersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.customersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customersPayload>
          }
          aggregate: {
            args: Prisma.CustomersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCustomers>
          }
          groupBy: {
            args: Prisma.customersGroupByArgs<ExtArgs>
            result: $Utils.Optional<CustomersGroupByOutputType>[]
          }
          count: {
            args: Prisma.customersCountArgs<ExtArgs>
            result: $Utils.Optional<CustomersCountAggregateOutputType> | number
          }
        }
      }
      customers_addresses: {
        payload: Prisma.$customers_addressesPayload<ExtArgs>
        fields: Prisma.customers_addressesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.customers_addressesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customers_addressesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.customers_addressesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customers_addressesPayload>
          }
          findFirst: {
            args: Prisma.customers_addressesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customers_addressesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.customers_addressesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customers_addressesPayload>
          }
          findMany: {
            args: Prisma.customers_addressesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customers_addressesPayload>[]
          }
          create: {
            args: Prisma.customers_addressesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customers_addressesPayload>
          }
          createMany: {
            args: Prisma.customers_addressesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.customers_addressesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customers_addressesPayload>
          }
          update: {
            args: Prisma.customers_addressesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customers_addressesPayload>
          }
          deleteMany: {
            args: Prisma.customers_addressesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.customers_addressesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.customers_addressesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$customers_addressesPayload>
          }
          aggregate: {
            args: Prisma.Customers_addressesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCustomers_addresses>
          }
          groupBy: {
            args: Prisma.customers_addressesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Customers_addressesGroupByOutputType>[]
          }
          count: {
            args: Prisma.customers_addressesCountArgs<ExtArgs>
            result: $Utils.Optional<Customers_addressesCountAggregateOutputType> | number
          }
        }
      }
      permissions: {
        payload: Prisma.$permissionsPayload<ExtArgs>
        fields: Prisma.permissionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.permissionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.permissionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionsPayload>
          }
          findFirst: {
            args: Prisma.permissionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.permissionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionsPayload>
          }
          findMany: {
            args: Prisma.permissionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionsPayload>[]
          }
          create: {
            args: Prisma.permissionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionsPayload>
          }
          createMany: {
            args: Prisma.permissionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.permissionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionsPayload>
          }
          update: {
            args: Prisma.permissionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionsPayload>
          }
          deleteMany: {
            args: Prisma.permissionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.permissionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.permissionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$permissionsPayload>
          }
          aggregate: {
            args: Prisma.PermissionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePermissions>
          }
          groupBy: {
            args: Prisma.permissionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<PermissionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.permissionsCountArgs<ExtArgs>
            result: $Utils.Optional<PermissionsCountAggregateOutputType> | number
          }
        }
      }
      product_categories: {
        payload: Prisma.$product_categoriesPayload<ExtArgs>
        fields: Prisma.product_categoriesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.product_categoriesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_categoriesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.product_categoriesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_categoriesPayload>
          }
          findFirst: {
            args: Prisma.product_categoriesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_categoriesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.product_categoriesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_categoriesPayload>
          }
          findMany: {
            args: Prisma.product_categoriesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_categoriesPayload>[]
          }
          create: {
            args: Prisma.product_categoriesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_categoriesPayload>
          }
          createMany: {
            args: Prisma.product_categoriesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.product_categoriesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_categoriesPayload>
          }
          update: {
            args: Prisma.product_categoriesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_categoriesPayload>
          }
          deleteMany: {
            args: Prisma.product_categoriesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.product_categoriesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.product_categoriesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_categoriesPayload>
          }
          aggregate: {
            args: Prisma.Product_categoriesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProduct_categories>
          }
          groupBy: {
            args: Prisma.product_categoriesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Product_categoriesGroupByOutputType>[]
          }
          count: {
            args: Prisma.product_categoriesCountArgs<ExtArgs>
            result: $Utils.Optional<Product_categoriesCountAggregateOutputType> | number
          }
        }
      }
      product_variants: {
        payload: Prisma.$product_variantsPayload<ExtArgs>
        fields: Prisma.product_variantsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.product_variantsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_variantsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.product_variantsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_variantsPayload>
          }
          findFirst: {
            args: Prisma.product_variantsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_variantsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.product_variantsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_variantsPayload>
          }
          findMany: {
            args: Prisma.product_variantsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_variantsPayload>[]
          }
          create: {
            args: Prisma.product_variantsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_variantsPayload>
          }
          createMany: {
            args: Prisma.product_variantsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.product_variantsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_variantsPayload>
          }
          update: {
            args: Prisma.product_variantsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_variantsPayload>
          }
          deleteMany: {
            args: Prisma.product_variantsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.product_variantsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.product_variantsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_variantsPayload>
          }
          aggregate: {
            args: Prisma.Product_variantsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProduct_variants>
          }
          groupBy: {
            args: Prisma.product_variantsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Product_variantsGroupByOutputType>[]
          }
          count: {
            args: Prisma.product_variantsCountArgs<ExtArgs>
            result: $Utils.Optional<Product_variantsCountAggregateOutputType> | number
          }
        }
      }
      products: {
        payload: Prisma.$productsPayload<ExtArgs>
        fields: Prisma.productsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.productsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.productsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>
          }
          findFirst: {
            args: Prisma.productsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.productsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>
          }
          findMany: {
            args: Prisma.productsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>[]
          }
          create: {
            args: Prisma.productsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>
          }
          createMany: {
            args: Prisma.productsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.productsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>
          }
          update: {
            args: Prisma.productsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>
          }
          deleteMany: {
            args: Prisma.productsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.productsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.productsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>
          }
          aggregate: {
            args: Prisma.ProductsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProducts>
          }
          groupBy: {
            args: Prisma.productsGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductsGroupByOutputType>[]
          }
          count: {
            args: Prisma.productsCountArgs<ExtArgs>
            result: $Utils.Optional<ProductsCountAggregateOutputType> | number
          }
        }
      }
      promotion_variants: {
        payload: Prisma.$promotion_variantsPayload<ExtArgs>
        fields: Prisma.promotion_variantsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.promotion_variantsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promotion_variantsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.promotion_variantsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promotion_variantsPayload>
          }
          findFirst: {
            args: Prisma.promotion_variantsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promotion_variantsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.promotion_variantsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promotion_variantsPayload>
          }
          findMany: {
            args: Prisma.promotion_variantsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promotion_variantsPayload>[]
          }
          create: {
            args: Prisma.promotion_variantsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promotion_variantsPayload>
          }
          createMany: {
            args: Prisma.promotion_variantsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.promotion_variantsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promotion_variantsPayload>
          }
          update: {
            args: Prisma.promotion_variantsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promotion_variantsPayload>
          }
          deleteMany: {
            args: Prisma.promotion_variantsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.promotion_variantsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.promotion_variantsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promotion_variantsPayload>
          }
          aggregate: {
            args: Prisma.Promotion_variantsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePromotion_variants>
          }
          groupBy: {
            args: Prisma.promotion_variantsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Promotion_variantsGroupByOutputType>[]
          }
          count: {
            args: Prisma.promotion_variantsCountArgs<ExtArgs>
            result: $Utils.Optional<Promotion_variantsCountAggregateOutputType> | number
          }
        }
      }
      promotions: {
        payload: Prisma.$promotionsPayload<ExtArgs>
        fields: Prisma.promotionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.promotionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promotionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.promotionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promotionsPayload>
          }
          findFirst: {
            args: Prisma.promotionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promotionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.promotionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promotionsPayload>
          }
          findMany: {
            args: Prisma.promotionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promotionsPayload>[]
          }
          create: {
            args: Prisma.promotionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promotionsPayload>
          }
          createMany: {
            args: Prisma.promotionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.promotionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promotionsPayload>
          }
          update: {
            args: Prisma.promotionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promotionsPayload>
          }
          deleteMany: {
            args: Prisma.promotionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.promotionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.promotionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$promotionsPayload>
          }
          aggregate: {
            args: Prisma.PromotionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePromotions>
          }
          groupBy: {
            args: Prisma.promotionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<PromotionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.promotionsCountArgs<ExtArgs>
            result: $Utils.Optional<PromotionsCountAggregateOutputType> | number
          }
        }
      }
      rating_images: {
        payload: Prisma.$rating_imagesPayload<ExtArgs>
        fields: Prisma.rating_imagesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.rating_imagesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rating_imagesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.rating_imagesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rating_imagesPayload>
          }
          findFirst: {
            args: Prisma.rating_imagesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rating_imagesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.rating_imagesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rating_imagesPayload>
          }
          findMany: {
            args: Prisma.rating_imagesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rating_imagesPayload>[]
          }
          create: {
            args: Prisma.rating_imagesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rating_imagesPayload>
          }
          createMany: {
            args: Prisma.rating_imagesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.rating_imagesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rating_imagesPayload>
          }
          update: {
            args: Prisma.rating_imagesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rating_imagesPayload>
          }
          deleteMany: {
            args: Prisma.rating_imagesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.rating_imagesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.rating_imagesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rating_imagesPayload>
          }
          aggregate: {
            args: Prisma.Rating_imagesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRating_images>
          }
          groupBy: {
            args: Prisma.rating_imagesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Rating_imagesGroupByOutputType>[]
          }
          count: {
            args: Prisma.rating_imagesCountArgs<ExtArgs>
            result: $Utils.Optional<Rating_imagesCountAggregateOutputType> | number
          }
        }
      }
      roles: {
        payload: Prisma.$rolesPayload<ExtArgs>
        fields: Prisma.rolesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.rolesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.rolesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          findFirst: {
            args: Prisma.rolesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.rolesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          findMany: {
            args: Prisma.rolesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>[]
          }
          create: {
            args: Prisma.rolesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          createMany: {
            args: Prisma.rolesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.rolesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          update: {
            args: Prisma.rolesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          deleteMany: {
            args: Prisma.rolesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.rolesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.rolesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$rolesPayload>
          }
          aggregate: {
            args: Prisma.RolesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRoles>
          }
          groupBy: {
            args: Prisma.rolesGroupByArgs<ExtArgs>
            result: $Utils.Optional<RolesGroupByOutputType>[]
          }
          count: {
            args: Prisma.rolesCountArgs<ExtArgs>
            result: $Utils.Optional<RolesCountAggregateOutputType> | number
          }
        }
      }
      roles_sections: {
        payload: Prisma.$roles_sectionsPayload<ExtArgs>
        fields: Prisma.roles_sectionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.roles_sectionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$roles_sectionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.roles_sectionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$roles_sectionsPayload>
          }
          findFirst: {
            args: Prisma.roles_sectionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$roles_sectionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.roles_sectionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$roles_sectionsPayload>
          }
          findMany: {
            args: Prisma.roles_sectionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$roles_sectionsPayload>[]
          }
          create: {
            args: Prisma.roles_sectionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$roles_sectionsPayload>
          }
          createMany: {
            args: Prisma.roles_sectionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.roles_sectionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$roles_sectionsPayload>
          }
          update: {
            args: Prisma.roles_sectionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$roles_sectionsPayload>
          }
          deleteMany: {
            args: Prisma.roles_sectionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.roles_sectionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.roles_sectionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$roles_sectionsPayload>
          }
          aggregate: {
            args: Prisma.Roles_sectionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRoles_sections>
          }
          groupBy: {
            args: Prisma.roles_sectionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Roles_sectionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.roles_sectionsCountArgs<ExtArgs>
            result: $Utils.Optional<Roles_sectionsCountAggregateOutputType> | number
          }
        }
      }
      sections: {
        payload: Prisma.$sectionsPayload<ExtArgs>
        fields: Prisma.sectionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sectionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sectionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sectionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sectionsPayload>
          }
          findFirst: {
            args: Prisma.sectionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sectionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sectionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sectionsPayload>
          }
          findMany: {
            args: Prisma.sectionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sectionsPayload>[]
          }
          create: {
            args: Prisma.sectionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sectionsPayload>
          }
          createMany: {
            args: Prisma.sectionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.sectionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sectionsPayload>
          }
          update: {
            args: Prisma.sectionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sectionsPayload>
          }
          deleteMany: {
            args: Prisma.sectionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sectionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.sectionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sectionsPayload>
          }
          aggregate: {
            args: Prisma.SectionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSections>
          }
          groupBy: {
            args: Prisma.sectionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<SectionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.sectionsCountArgs<ExtArgs>
            result: $Utils.Optional<SectionsCountAggregateOutputType> | number
          }
        }
      }
      services: {
        payload: Prisma.$servicesPayload<ExtArgs>
        fields: Prisma.servicesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.servicesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$servicesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.servicesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$servicesPayload>
          }
          findFirst: {
            args: Prisma.servicesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$servicesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.servicesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$servicesPayload>
          }
          findMany: {
            args: Prisma.servicesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$servicesPayload>[]
          }
          create: {
            args: Prisma.servicesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$servicesPayload>
          }
          createMany: {
            args: Prisma.servicesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.servicesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$servicesPayload>
          }
          update: {
            args: Prisma.servicesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$servicesPayload>
          }
          deleteMany: {
            args: Prisma.servicesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.servicesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.servicesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$servicesPayload>
          }
          aggregate: {
            args: Prisma.ServicesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateServices>
          }
          groupBy: {
            args: Prisma.servicesGroupByArgs<ExtArgs>
            result: $Utils.Optional<ServicesGroupByOutputType>[]
          }
          count: {
            args: Prisma.servicesCountArgs<ExtArgs>
            result: $Utils.Optional<ServicesCountAggregateOutputType> | number
          }
        }
      }
      services_images: {
        payload: Prisma.$services_imagesPayload<ExtArgs>
        fields: Prisma.services_imagesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.services_imagesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$services_imagesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.services_imagesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$services_imagesPayload>
          }
          findFirst: {
            args: Prisma.services_imagesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$services_imagesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.services_imagesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$services_imagesPayload>
          }
          findMany: {
            args: Prisma.services_imagesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$services_imagesPayload>[]
          }
          create: {
            args: Prisma.services_imagesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$services_imagesPayload>
          }
          createMany: {
            args: Prisma.services_imagesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.services_imagesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$services_imagesPayload>
          }
          update: {
            args: Prisma.services_imagesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$services_imagesPayload>
          }
          deleteMany: {
            args: Prisma.services_imagesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.services_imagesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.services_imagesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$services_imagesPayload>
          }
          aggregate: {
            args: Prisma.Services_imagesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateServices_images>
          }
          groupBy: {
            args: Prisma.services_imagesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Services_imagesGroupByOutputType>[]
          }
          count: {
            args: Prisma.services_imagesCountArgs<ExtArgs>
            result: $Utils.Optional<Services_imagesCountAggregateOutputType> | number
          }
        }
      }
      users: {
        payload: Prisma.$usersPayload<ExtArgs>
        fields: Prisma.usersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findFirst: {
            args: Prisma.usersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findMany: {
            args: Prisma.usersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          create: {
            args: Prisma.usersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          createMany: {
            args: Prisma.usersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.usersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          update: {
            args: Prisma.usersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          deleteMany: {
            args: Prisma.usersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.usersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.usersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          aggregate: {
            args: Prisma.UsersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsers>
          }
          groupBy: {
            args: Prisma.usersGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsersGroupByOutputType>[]
          }
          count: {
            args: Prisma.usersCountArgs<ExtArgs>
            result: $Utils.Optional<UsersCountAggregateOutputType> | number
          }
        }
      }
      variant_attribute_options: {
        payload: Prisma.$variant_attribute_optionsPayload<ExtArgs>
        fields: Prisma.variant_attribute_optionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.variant_attribute_optionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$variant_attribute_optionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.variant_attribute_optionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$variant_attribute_optionsPayload>
          }
          findFirst: {
            args: Prisma.variant_attribute_optionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$variant_attribute_optionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.variant_attribute_optionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$variant_attribute_optionsPayload>
          }
          findMany: {
            args: Prisma.variant_attribute_optionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$variant_attribute_optionsPayload>[]
          }
          create: {
            args: Prisma.variant_attribute_optionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$variant_attribute_optionsPayload>
          }
          createMany: {
            args: Prisma.variant_attribute_optionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.variant_attribute_optionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$variant_attribute_optionsPayload>
          }
          update: {
            args: Prisma.variant_attribute_optionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$variant_attribute_optionsPayload>
          }
          deleteMany: {
            args: Prisma.variant_attribute_optionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.variant_attribute_optionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.variant_attribute_optionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$variant_attribute_optionsPayload>
          }
          aggregate: {
            args: Prisma.Variant_attribute_optionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVariant_attribute_options>
          }
          groupBy: {
            args: Prisma.variant_attribute_optionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Variant_attribute_optionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.variant_attribute_optionsCountArgs<ExtArgs>
            result: $Utils.Optional<Variant_attribute_optionsCountAggregateOutputType> | number
          }
        }
      }
      variant_images: {
        payload: Prisma.$variant_imagesPayload<ExtArgs>
        fields: Prisma.variant_imagesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.variant_imagesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$variant_imagesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.variant_imagesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$variant_imagesPayload>
          }
          findFirst: {
            args: Prisma.variant_imagesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$variant_imagesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.variant_imagesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$variant_imagesPayload>
          }
          findMany: {
            args: Prisma.variant_imagesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$variant_imagesPayload>[]
          }
          create: {
            args: Prisma.variant_imagesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$variant_imagesPayload>
          }
          createMany: {
            args: Prisma.variant_imagesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.variant_imagesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$variant_imagesPayload>
          }
          update: {
            args: Prisma.variant_imagesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$variant_imagesPayload>
          }
          deleteMany: {
            args: Prisma.variant_imagesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.variant_imagesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.variant_imagesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$variant_imagesPayload>
          }
          aggregate: {
            args: Prisma.Variant_imagesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVariant_images>
          }
          groupBy: {
            args: Prisma.variant_imagesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Variant_imagesGroupByOutputType>[]
          }
          count: {
            args: Prisma.variant_imagesCountArgs<ExtArgs>
            result: $Utils.Optional<Variant_imagesCountAggregateOutputType> | number
          }
        }
      }
      variant_ratings: {
        payload: Prisma.$variant_ratingsPayload<ExtArgs>
        fields: Prisma.variant_ratingsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.variant_ratingsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$variant_ratingsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.variant_ratingsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$variant_ratingsPayload>
          }
          findFirst: {
            args: Prisma.variant_ratingsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$variant_ratingsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.variant_ratingsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$variant_ratingsPayload>
          }
          findMany: {
            args: Prisma.variant_ratingsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$variant_ratingsPayload>[]
          }
          create: {
            args: Prisma.variant_ratingsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$variant_ratingsPayload>
          }
          createMany: {
            args: Prisma.variant_ratingsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.variant_ratingsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$variant_ratingsPayload>
          }
          update: {
            args: Prisma.variant_ratingsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$variant_ratingsPayload>
          }
          deleteMany: {
            args: Prisma.variant_ratingsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.variant_ratingsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.variant_ratingsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$variant_ratingsPayload>
          }
          aggregate: {
            args: Prisma.Variant_ratingsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVariant_ratings>
          }
          groupBy: {
            args: Prisma.variant_ratingsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Variant_ratingsGroupByOutputType>[]
          }
          count: {
            args: Prisma.variant_ratingsCountArgs<ExtArgs>
            result: $Utils.Optional<Variant_ratingsCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    attribute_option_images?: attribute_option_imagesOmit
    attribute_options?: attribute_optionsOmit
    attributes?: attributesOmit
    banner?: bannerOmit
    brands?: brandsOmit
    categories?: categoriesOmit
    customers?: customersOmit
    customers_addresses?: customers_addressesOmit
    permissions?: permissionsOmit
    product_categories?: product_categoriesOmit
    product_variants?: product_variantsOmit
    products?: productsOmit
    promotion_variants?: promotion_variantsOmit
    promotions?: promotionsOmit
    rating_images?: rating_imagesOmit
    roles?: rolesOmit
    roles_sections?: roles_sectionsOmit
    sections?: sectionsOmit
    services?: servicesOmit
    services_images?: services_imagesOmit
    users?: usersOmit
    variant_attribute_options?: variant_attribute_optionsOmit
    variant_images?: variant_imagesOmit
    variant_ratings?: variant_ratingsOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type Attribute_optionsCountOutputType
   */

  export type Attribute_optionsCountOutputType = {
    attribute_option_images: number
    variant_attribute_options: number
  }

  export type Attribute_optionsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    attribute_option_images?: boolean | Attribute_optionsCountOutputTypeCountAttribute_option_imagesArgs
    variant_attribute_options?: boolean | Attribute_optionsCountOutputTypeCountVariant_attribute_optionsArgs
  }

  // Custom InputTypes
  /**
   * Attribute_optionsCountOutputType without action
   */
  export type Attribute_optionsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Attribute_optionsCountOutputType
     */
    select?: Attribute_optionsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Attribute_optionsCountOutputType without action
   */
  export type Attribute_optionsCountOutputTypeCountAttribute_option_imagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: attribute_option_imagesWhereInput
  }

  /**
   * Attribute_optionsCountOutputType without action
   */
  export type Attribute_optionsCountOutputTypeCountVariant_attribute_optionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: variant_attribute_optionsWhereInput
  }


  /**
   * Count Type BrandsCountOutputType
   */

  export type BrandsCountOutputType = {
    products: number
  }

  export type BrandsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | BrandsCountOutputTypeCountProductsArgs
  }

  // Custom InputTypes
  /**
   * BrandsCountOutputType without action
   */
  export type BrandsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BrandsCountOutputType
     */
    select?: BrandsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * BrandsCountOutputType without action
   */
  export type BrandsCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: productsWhereInput
  }


  /**
   * Count Type CustomersCountOutputType
   */

  export type CustomersCountOutputType = {
    customers_addresses: number
    variant_ratings: number
  }

  export type CustomersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customers_addresses?: boolean | CustomersCountOutputTypeCountCustomers_addressesArgs
    variant_ratings?: boolean | CustomersCountOutputTypeCountVariant_ratingsArgs
  }

  // Custom InputTypes
  /**
   * CustomersCountOutputType without action
   */
  export type CustomersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomersCountOutputType
     */
    select?: CustomersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CustomersCountOutputType without action
   */
  export type CustomersCountOutputTypeCountCustomers_addressesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: customers_addressesWhereInput
  }

  /**
   * CustomersCountOutputType without action
   */
  export type CustomersCountOutputTypeCountVariant_ratingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: variant_ratingsWhereInput
  }


  /**
   * Count Type Product_variantsCountOutputType
   */

  export type Product_variantsCountOutputType = {
    promotion_variants: number
    variant_attribute_options: number
    variant_images: number
    variant_ratings: number
  }

  export type Product_variantsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotion_variants?: boolean | Product_variantsCountOutputTypeCountPromotion_variantsArgs
    variant_attribute_options?: boolean | Product_variantsCountOutputTypeCountVariant_attribute_optionsArgs
    variant_images?: boolean | Product_variantsCountOutputTypeCountVariant_imagesArgs
    variant_ratings?: boolean | Product_variantsCountOutputTypeCountVariant_ratingsArgs
  }

  // Custom InputTypes
  /**
   * Product_variantsCountOutputType without action
   */
  export type Product_variantsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product_variantsCountOutputType
     */
    select?: Product_variantsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Product_variantsCountOutputType without action
   */
  export type Product_variantsCountOutputTypeCountPromotion_variantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: promotion_variantsWhereInput
  }

  /**
   * Product_variantsCountOutputType without action
   */
  export type Product_variantsCountOutputTypeCountVariant_attribute_optionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: variant_attribute_optionsWhereInput
  }

  /**
   * Product_variantsCountOutputType without action
   */
  export type Product_variantsCountOutputTypeCountVariant_imagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: variant_imagesWhereInput
  }

  /**
   * Product_variantsCountOutputType without action
   */
  export type Product_variantsCountOutputTypeCountVariant_ratingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: variant_ratingsWhereInput
  }


  /**
   * Count Type ProductsCountOutputType
   */

  export type ProductsCountOutputType = {
    product_variants: number
  }

  export type ProductsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product_variants?: boolean | ProductsCountOutputTypeCountProduct_variantsArgs
  }

  // Custom InputTypes
  /**
   * ProductsCountOutputType without action
   */
  export type ProductsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductsCountOutputType
     */
    select?: ProductsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductsCountOutputType without action
   */
  export type ProductsCountOutputTypeCountProduct_variantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: product_variantsWhereInput
  }


  /**
   * Count Type PromotionsCountOutputType
   */

  export type PromotionsCountOutputType = {
    promotion_variants: number
  }

  export type PromotionsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotion_variants?: boolean | PromotionsCountOutputTypeCountPromotion_variantsArgs
  }

  // Custom InputTypes
  /**
   * PromotionsCountOutputType without action
   */
  export type PromotionsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PromotionsCountOutputType
     */
    select?: PromotionsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PromotionsCountOutputType without action
   */
  export type PromotionsCountOutputTypeCountPromotion_variantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: promotion_variantsWhereInput
  }


  /**
   * Count Type RolesCountOutputType
   */

  export type RolesCountOutputType = {
    roles_sections: number
    users: number
  }

  export type RolesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    roles_sections?: boolean | RolesCountOutputTypeCountRoles_sectionsArgs
    users?: boolean | RolesCountOutputTypeCountUsersArgs
  }

  // Custom InputTypes
  /**
   * RolesCountOutputType without action
   */
  export type RolesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RolesCountOutputType
     */
    select?: RolesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RolesCountOutputType without action
   */
  export type RolesCountOutputTypeCountRoles_sectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: roles_sectionsWhereInput
  }

  /**
   * RolesCountOutputType without action
   */
  export type RolesCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usersWhereInput
  }


  /**
   * Count Type SectionsCountOutputType
   */

  export type SectionsCountOutputType = {
    roles_sections: number
  }

  export type SectionsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    roles_sections?: boolean | SectionsCountOutputTypeCountRoles_sectionsArgs
  }

  // Custom InputTypes
  /**
   * SectionsCountOutputType without action
   */
  export type SectionsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SectionsCountOutputType
     */
    select?: SectionsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SectionsCountOutputType without action
   */
  export type SectionsCountOutputTypeCountRoles_sectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: roles_sectionsWhereInput
  }


  /**
   * Count Type ServicesCountOutputType
   */

  export type ServicesCountOutputType = {
    services_images: number
  }

  export type ServicesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    services_images?: boolean | ServicesCountOutputTypeCountServices_imagesArgs
  }

  // Custom InputTypes
  /**
   * ServicesCountOutputType without action
   */
  export type ServicesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ServicesCountOutputType
     */
    select?: ServicesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ServicesCountOutputType without action
   */
  export type ServicesCountOutputTypeCountServices_imagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: services_imagesWhereInput
  }


  /**
   * Count Type Variant_ratingsCountOutputType
   */

  export type Variant_ratingsCountOutputType = {
    rating_images: number
  }

  export type Variant_ratingsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rating_images?: boolean | Variant_ratingsCountOutputTypeCountRating_imagesArgs
  }

  // Custom InputTypes
  /**
   * Variant_ratingsCountOutputType without action
   */
  export type Variant_ratingsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Variant_ratingsCountOutputType
     */
    select?: Variant_ratingsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Variant_ratingsCountOutputType without action
   */
  export type Variant_ratingsCountOutputTypeCountRating_imagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: rating_imagesWhereInput
  }


  /**
   * Models
   */

  /**
   * Model attribute_option_images
   */

  export type AggregateAttribute_option_images = {
    _count: Attribute_option_imagesCountAggregateOutputType | null
    _avg: Attribute_option_imagesAvgAggregateOutputType | null
    _sum: Attribute_option_imagesSumAggregateOutputType | null
    _min: Attribute_option_imagesMinAggregateOutputType | null
    _max: Attribute_option_imagesMaxAggregateOutputType | null
  }

  export type Attribute_option_imagesAvgAggregateOutputType = {
    id: number | null
    attribute_option_id: number | null
    display_order: number | null
  }

  export type Attribute_option_imagesSumAggregateOutputType = {
    id: number | null
    attribute_option_id: number | null
    display_order: number | null
  }

  export type Attribute_option_imagesMinAggregateOutputType = {
    id: number | null
    attribute_option_id: number | null
    image_type: $Enums.attribute_option_images_image_type | null
    display_order: number | null
    image_url_thumb: string | null
    image_url_normal: string | null
    image_url_zoom: string | null
    alt_text: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Attribute_option_imagesMaxAggregateOutputType = {
    id: number | null
    attribute_option_id: number | null
    image_type: $Enums.attribute_option_images_image_type | null
    display_order: number | null
    image_url_thumb: string | null
    image_url_normal: string | null
    image_url_zoom: string | null
    alt_text: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Attribute_option_imagesCountAggregateOutputType = {
    id: number
    attribute_option_id: number
    image_type: number
    display_order: number
    image_url_thumb: number
    image_url_normal: number
    image_url_zoom: number
    alt_text: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Attribute_option_imagesAvgAggregateInputType = {
    id?: true
    attribute_option_id?: true
    display_order?: true
  }

  export type Attribute_option_imagesSumAggregateInputType = {
    id?: true
    attribute_option_id?: true
    display_order?: true
  }

  export type Attribute_option_imagesMinAggregateInputType = {
    id?: true
    attribute_option_id?: true
    image_type?: true
    display_order?: true
    image_url_thumb?: true
    image_url_normal?: true
    image_url_zoom?: true
    alt_text?: true
    created_at?: true
    updated_at?: true
  }

  export type Attribute_option_imagesMaxAggregateInputType = {
    id?: true
    attribute_option_id?: true
    image_type?: true
    display_order?: true
    image_url_thumb?: true
    image_url_normal?: true
    image_url_zoom?: true
    alt_text?: true
    created_at?: true
    updated_at?: true
  }

  export type Attribute_option_imagesCountAggregateInputType = {
    id?: true
    attribute_option_id?: true
    image_type?: true
    display_order?: true
    image_url_thumb?: true
    image_url_normal?: true
    image_url_zoom?: true
    alt_text?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Attribute_option_imagesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which attribute_option_images to aggregate.
     */
    where?: attribute_option_imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of attribute_option_images to fetch.
     */
    orderBy?: attribute_option_imagesOrderByWithRelationInput | attribute_option_imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: attribute_option_imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` attribute_option_images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` attribute_option_images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned attribute_option_images
    **/
    _count?: true | Attribute_option_imagesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Attribute_option_imagesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Attribute_option_imagesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Attribute_option_imagesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Attribute_option_imagesMaxAggregateInputType
  }

  export type GetAttribute_option_imagesAggregateType<T extends Attribute_option_imagesAggregateArgs> = {
        [P in keyof T & keyof AggregateAttribute_option_images]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAttribute_option_images[P]>
      : GetScalarType<T[P], AggregateAttribute_option_images[P]>
  }




  export type attribute_option_imagesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: attribute_option_imagesWhereInput
    orderBy?: attribute_option_imagesOrderByWithAggregationInput | attribute_option_imagesOrderByWithAggregationInput[]
    by: Attribute_option_imagesScalarFieldEnum[] | Attribute_option_imagesScalarFieldEnum
    having?: attribute_option_imagesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Attribute_option_imagesCountAggregateInputType | true
    _avg?: Attribute_option_imagesAvgAggregateInputType
    _sum?: Attribute_option_imagesSumAggregateInputType
    _min?: Attribute_option_imagesMinAggregateInputType
    _max?: Attribute_option_imagesMaxAggregateInputType
  }

  export type Attribute_option_imagesGroupByOutputType = {
    id: number
    attribute_option_id: number
    image_type: $Enums.attribute_option_images_image_type
    display_order: number | null
    image_url_thumb: string
    image_url_normal: string | null
    image_url_zoom: string | null
    alt_text: string | null
    created_at: Date
    updated_at: Date
    _count: Attribute_option_imagesCountAggregateOutputType | null
    _avg: Attribute_option_imagesAvgAggregateOutputType | null
    _sum: Attribute_option_imagesSumAggregateOutputType | null
    _min: Attribute_option_imagesMinAggregateOutputType | null
    _max: Attribute_option_imagesMaxAggregateOutputType | null
  }

  type GetAttribute_option_imagesGroupByPayload<T extends attribute_option_imagesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Attribute_option_imagesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Attribute_option_imagesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Attribute_option_imagesGroupByOutputType[P]>
            : GetScalarType<T[P], Attribute_option_imagesGroupByOutputType[P]>
        }
      >
    >


  export type attribute_option_imagesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    attribute_option_id?: boolean
    image_type?: boolean
    display_order?: boolean
    image_url_thumb?: boolean
    image_url_normal?: boolean
    image_url_zoom?: boolean
    alt_text?: boolean
    created_at?: boolean
    updated_at?: boolean
    attribute_options?: boolean | attribute_optionsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["attribute_option_images"]>



  export type attribute_option_imagesSelectScalar = {
    id?: boolean
    attribute_option_id?: boolean
    image_type?: boolean
    display_order?: boolean
    image_url_thumb?: boolean
    image_url_normal?: boolean
    image_url_zoom?: boolean
    alt_text?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type attribute_option_imagesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "attribute_option_id" | "image_type" | "display_order" | "image_url_thumb" | "image_url_normal" | "image_url_zoom" | "alt_text" | "created_at" | "updated_at", ExtArgs["result"]["attribute_option_images"]>
  export type attribute_option_imagesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    attribute_options?: boolean | attribute_optionsDefaultArgs<ExtArgs>
  }

  export type $attribute_option_imagesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "attribute_option_images"
    objects: {
      attribute_options: Prisma.$attribute_optionsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      attribute_option_id: number
      image_type: $Enums.attribute_option_images_image_type
      display_order: number | null
      image_url_thumb: string
      image_url_normal: string | null
      image_url_zoom: string | null
      alt_text: string | null
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["attribute_option_images"]>
    composites: {}
  }

  type attribute_option_imagesGetPayload<S extends boolean | null | undefined | attribute_option_imagesDefaultArgs> = $Result.GetResult<Prisma.$attribute_option_imagesPayload, S>

  type attribute_option_imagesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<attribute_option_imagesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Attribute_option_imagesCountAggregateInputType | true
    }

  export interface attribute_option_imagesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['attribute_option_images'], meta: { name: 'attribute_option_images' } }
    /**
     * Find zero or one Attribute_option_images that matches the filter.
     * @param {attribute_option_imagesFindUniqueArgs} args - Arguments to find a Attribute_option_images
     * @example
     * // Get one Attribute_option_images
     * const attribute_option_images = await prisma.attribute_option_images.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends attribute_option_imagesFindUniqueArgs>(args: SelectSubset<T, attribute_option_imagesFindUniqueArgs<ExtArgs>>): Prisma__attribute_option_imagesClient<$Result.GetResult<Prisma.$attribute_option_imagesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Attribute_option_images that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {attribute_option_imagesFindUniqueOrThrowArgs} args - Arguments to find a Attribute_option_images
     * @example
     * // Get one Attribute_option_images
     * const attribute_option_images = await prisma.attribute_option_images.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends attribute_option_imagesFindUniqueOrThrowArgs>(args: SelectSubset<T, attribute_option_imagesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__attribute_option_imagesClient<$Result.GetResult<Prisma.$attribute_option_imagesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Attribute_option_images that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attribute_option_imagesFindFirstArgs} args - Arguments to find a Attribute_option_images
     * @example
     * // Get one Attribute_option_images
     * const attribute_option_images = await prisma.attribute_option_images.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends attribute_option_imagesFindFirstArgs>(args?: SelectSubset<T, attribute_option_imagesFindFirstArgs<ExtArgs>>): Prisma__attribute_option_imagesClient<$Result.GetResult<Prisma.$attribute_option_imagesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Attribute_option_images that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attribute_option_imagesFindFirstOrThrowArgs} args - Arguments to find a Attribute_option_images
     * @example
     * // Get one Attribute_option_images
     * const attribute_option_images = await prisma.attribute_option_images.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends attribute_option_imagesFindFirstOrThrowArgs>(args?: SelectSubset<T, attribute_option_imagesFindFirstOrThrowArgs<ExtArgs>>): Prisma__attribute_option_imagesClient<$Result.GetResult<Prisma.$attribute_option_imagesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Attribute_option_images that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attribute_option_imagesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Attribute_option_images
     * const attribute_option_images = await prisma.attribute_option_images.findMany()
     * 
     * // Get first 10 Attribute_option_images
     * const attribute_option_images = await prisma.attribute_option_images.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const attribute_option_imagesWithIdOnly = await prisma.attribute_option_images.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends attribute_option_imagesFindManyArgs>(args?: SelectSubset<T, attribute_option_imagesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$attribute_option_imagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Attribute_option_images.
     * @param {attribute_option_imagesCreateArgs} args - Arguments to create a Attribute_option_images.
     * @example
     * // Create one Attribute_option_images
     * const Attribute_option_images = await prisma.attribute_option_images.create({
     *   data: {
     *     // ... data to create a Attribute_option_images
     *   }
     * })
     * 
     */
    create<T extends attribute_option_imagesCreateArgs>(args: SelectSubset<T, attribute_option_imagesCreateArgs<ExtArgs>>): Prisma__attribute_option_imagesClient<$Result.GetResult<Prisma.$attribute_option_imagesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Attribute_option_images.
     * @param {attribute_option_imagesCreateManyArgs} args - Arguments to create many Attribute_option_images.
     * @example
     * // Create many Attribute_option_images
     * const attribute_option_images = await prisma.attribute_option_images.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends attribute_option_imagesCreateManyArgs>(args?: SelectSubset<T, attribute_option_imagesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Attribute_option_images.
     * @param {attribute_option_imagesDeleteArgs} args - Arguments to delete one Attribute_option_images.
     * @example
     * // Delete one Attribute_option_images
     * const Attribute_option_images = await prisma.attribute_option_images.delete({
     *   where: {
     *     // ... filter to delete one Attribute_option_images
     *   }
     * })
     * 
     */
    delete<T extends attribute_option_imagesDeleteArgs>(args: SelectSubset<T, attribute_option_imagesDeleteArgs<ExtArgs>>): Prisma__attribute_option_imagesClient<$Result.GetResult<Prisma.$attribute_option_imagesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Attribute_option_images.
     * @param {attribute_option_imagesUpdateArgs} args - Arguments to update one Attribute_option_images.
     * @example
     * // Update one Attribute_option_images
     * const attribute_option_images = await prisma.attribute_option_images.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends attribute_option_imagesUpdateArgs>(args: SelectSubset<T, attribute_option_imagesUpdateArgs<ExtArgs>>): Prisma__attribute_option_imagesClient<$Result.GetResult<Prisma.$attribute_option_imagesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Attribute_option_images.
     * @param {attribute_option_imagesDeleteManyArgs} args - Arguments to filter Attribute_option_images to delete.
     * @example
     * // Delete a few Attribute_option_images
     * const { count } = await prisma.attribute_option_images.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends attribute_option_imagesDeleteManyArgs>(args?: SelectSubset<T, attribute_option_imagesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Attribute_option_images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attribute_option_imagesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Attribute_option_images
     * const attribute_option_images = await prisma.attribute_option_images.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends attribute_option_imagesUpdateManyArgs>(args: SelectSubset<T, attribute_option_imagesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Attribute_option_images.
     * @param {attribute_option_imagesUpsertArgs} args - Arguments to update or create a Attribute_option_images.
     * @example
     * // Update or create a Attribute_option_images
     * const attribute_option_images = await prisma.attribute_option_images.upsert({
     *   create: {
     *     // ... data to create a Attribute_option_images
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Attribute_option_images we want to update
     *   }
     * })
     */
    upsert<T extends attribute_option_imagesUpsertArgs>(args: SelectSubset<T, attribute_option_imagesUpsertArgs<ExtArgs>>): Prisma__attribute_option_imagesClient<$Result.GetResult<Prisma.$attribute_option_imagesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Attribute_option_images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attribute_option_imagesCountArgs} args - Arguments to filter Attribute_option_images to count.
     * @example
     * // Count the number of Attribute_option_images
     * const count = await prisma.attribute_option_images.count({
     *   where: {
     *     // ... the filter for the Attribute_option_images we want to count
     *   }
     * })
    **/
    count<T extends attribute_option_imagesCountArgs>(
      args?: Subset<T, attribute_option_imagesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Attribute_option_imagesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Attribute_option_images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Attribute_option_imagesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Attribute_option_imagesAggregateArgs>(args: Subset<T, Attribute_option_imagesAggregateArgs>): Prisma.PrismaPromise<GetAttribute_option_imagesAggregateType<T>>

    /**
     * Group by Attribute_option_images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attribute_option_imagesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends attribute_option_imagesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: attribute_option_imagesGroupByArgs['orderBy'] }
        : { orderBy?: attribute_option_imagesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, attribute_option_imagesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAttribute_option_imagesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the attribute_option_images model
   */
  readonly fields: attribute_option_imagesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for attribute_option_images.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__attribute_option_imagesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    attribute_options<T extends attribute_optionsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, attribute_optionsDefaultArgs<ExtArgs>>): Prisma__attribute_optionsClient<$Result.GetResult<Prisma.$attribute_optionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the attribute_option_images model
   */
  interface attribute_option_imagesFieldRefs {
    readonly id: FieldRef<"attribute_option_images", 'Int'>
    readonly attribute_option_id: FieldRef<"attribute_option_images", 'Int'>
    readonly image_type: FieldRef<"attribute_option_images", 'attribute_option_images_image_type'>
    readonly display_order: FieldRef<"attribute_option_images", 'Int'>
    readonly image_url_thumb: FieldRef<"attribute_option_images", 'String'>
    readonly image_url_normal: FieldRef<"attribute_option_images", 'String'>
    readonly image_url_zoom: FieldRef<"attribute_option_images", 'String'>
    readonly alt_text: FieldRef<"attribute_option_images", 'String'>
    readonly created_at: FieldRef<"attribute_option_images", 'DateTime'>
    readonly updated_at: FieldRef<"attribute_option_images", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * attribute_option_images findUnique
   */
  export type attribute_option_imagesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attribute_option_images
     */
    select?: attribute_option_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attribute_option_images
     */
    omit?: attribute_option_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attribute_option_imagesInclude<ExtArgs> | null
    /**
     * Filter, which attribute_option_images to fetch.
     */
    where: attribute_option_imagesWhereUniqueInput
  }

  /**
   * attribute_option_images findUniqueOrThrow
   */
  export type attribute_option_imagesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attribute_option_images
     */
    select?: attribute_option_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attribute_option_images
     */
    omit?: attribute_option_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attribute_option_imagesInclude<ExtArgs> | null
    /**
     * Filter, which attribute_option_images to fetch.
     */
    where: attribute_option_imagesWhereUniqueInput
  }

  /**
   * attribute_option_images findFirst
   */
  export type attribute_option_imagesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attribute_option_images
     */
    select?: attribute_option_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attribute_option_images
     */
    omit?: attribute_option_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attribute_option_imagesInclude<ExtArgs> | null
    /**
     * Filter, which attribute_option_images to fetch.
     */
    where?: attribute_option_imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of attribute_option_images to fetch.
     */
    orderBy?: attribute_option_imagesOrderByWithRelationInput | attribute_option_imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for attribute_option_images.
     */
    cursor?: attribute_option_imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` attribute_option_images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` attribute_option_images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of attribute_option_images.
     */
    distinct?: Attribute_option_imagesScalarFieldEnum | Attribute_option_imagesScalarFieldEnum[]
  }

  /**
   * attribute_option_images findFirstOrThrow
   */
  export type attribute_option_imagesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attribute_option_images
     */
    select?: attribute_option_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attribute_option_images
     */
    omit?: attribute_option_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attribute_option_imagesInclude<ExtArgs> | null
    /**
     * Filter, which attribute_option_images to fetch.
     */
    where?: attribute_option_imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of attribute_option_images to fetch.
     */
    orderBy?: attribute_option_imagesOrderByWithRelationInput | attribute_option_imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for attribute_option_images.
     */
    cursor?: attribute_option_imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` attribute_option_images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` attribute_option_images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of attribute_option_images.
     */
    distinct?: Attribute_option_imagesScalarFieldEnum | Attribute_option_imagesScalarFieldEnum[]
  }

  /**
   * attribute_option_images findMany
   */
  export type attribute_option_imagesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attribute_option_images
     */
    select?: attribute_option_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attribute_option_images
     */
    omit?: attribute_option_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attribute_option_imagesInclude<ExtArgs> | null
    /**
     * Filter, which attribute_option_images to fetch.
     */
    where?: attribute_option_imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of attribute_option_images to fetch.
     */
    orderBy?: attribute_option_imagesOrderByWithRelationInput | attribute_option_imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing attribute_option_images.
     */
    cursor?: attribute_option_imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` attribute_option_images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` attribute_option_images.
     */
    skip?: number
    distinct?: Attribute_option_imagesScalarFieldEnum | Attribute_option_imagesScalarFieldEnum[]
  }

  /**
   * attribute_option_images create
   */
  export type attribute_option_imagesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attribute_option_images
     */
    select?: attribute_option_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attribute_option_images
     */
    omit?: attribute_option_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attribute_option_imagesInclude<ExtArgs> | null
    /**
     * The data needed to create a attribute_option_images.
     */
    data: XOR<attribute_option_imagesCreateInput, attribute_option_imagesUncheckedCreateInput>
  }

  /**
   * attribute_option_images createMany
   */
  export type attribute_option_imagesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many attribute_option_images.
     */
    data: attribute_option_imagesCreateManyInput | attribute_option_imagesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * attribute_option_images update
   */
  export type attribute_option_imagesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attribute_option_images
     */
    select?: attribute_option_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attribute_option_images
     */
    omit?: attribute_option_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attribute_option_imagesInclude<ExtArgs> | null
    /**
     * The data needed to update a attribute_option_images.
     */
    data: XOR<attribute_option_imagesUpdateInput, attribute_option_imagesUncheckedUpdateInput>
    /**
     * Choose, which attribute_option_images to update.
     */
    where: attribute_option_imagesWhereUniqueInput
  }

  /**
   * attribute_option_images updateMany
   */
  export type attribute_option_imagesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update attribute_option_images.
     */
    data: XOR<attribute_option_imagesUpdateManyMutationInput, attribute_option_imagesUncheckedUpdateManyInput>
    /**
     * Filter which attribute_option_images to update
     */
    where?: attribute_option_imagesWhereInput
    /**
     * Limit how many attribute_option_images to update.
     */
    limit?: number
  }

  /**
   * attribute_option_images upsert
   */
  export type attribute_option_imagesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attribute_option_images
     */
    select?: attribute_option_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attribute_option_images
     */
    omit?: attribute_option_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attribute_option_imagesInclude<ExtArgs> | null
    /**
     * The filter to search for the attribute_option_images to update in case it exists.
     */
    where: attribute_option_imagesWhereUniqueInput
    /**
     * In case the attribute_option_images found by the `where` argument doesn't exist, create a new attribute_option_images with this data.
     */
    create: XOR<attribute_option_imagesCreateInput, attribute_option_imagesUncheckedCreateInput>
    /**
     * In case the attribute_option_images was found with the provided `where` argument, update it with this data.
     */
    update: XOR<attribute_option_imagesUpdateInput, attribute_option_imagesUncheckedUpdateInput>
  }

  /**
   * attribute_option_images delete
   */
  export type attribute_option_imagesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attribute_option_images
     */
    select?: attribute_option_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attribute_option_images
     */
    omit?: attribute_option_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attribute_option_imagesInclude<ExtArgs> | null
    /**
     * Filter which attribute_option_images to delete.
     */
    where: attribute_option_imagesWhereUniqueInput
  }

  /**
   * attribute_option_images deleteMany
   */
  export type attribute_option_imagesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which attribute_option_images to delete
     */
    where?: attribute_option_imagesWhereInput
    /**
     * Limit how many attribute_option_images to delete.
     */
    limit?: number
  }

  /**
   * attribute_option_images without action
   */
  export type attribute_option_imagesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attribute_option_images
     */
    select?: attribute_option_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attribute_option_images
     */
    omit?: attribute_option_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attribute_option_imagesInclude<ExtArgs> | null
  }


  /**
   * Model attribute_options
   */

  export type AggregateAttribute_options = {
    _count: Attribute_optionsCountAggregateOutputType | null
    _avg: Attribute_optionsAvgAggregateOutputType | null
    _sum: Attribute_optionsSumAggregateOutputType | null
    _min: Attribute_optionsMinAggregateOutputType | null
    _max: Attribute_optionsMaxAggregateOutputType | null
  }

  export type Attribute_optionsAvgAggregateOutputType = {
    id: number | null
    attribute_id: number | null
    additional_cost: number | null
  }

  export type Attribute_optionsSumAggregateOutputType = {
    id: number | null
    attribute_id: number | null
    additional_cost: number | null
  }

  export type Attribute_optionsMinAggregateOutputType = {
    id: number | null
    attribute_id: number | null
    value: string | null
    additional_cost: number | null
  }

  export type Attribute_optionsMaxAggregateOutputType = {
    id: number | null
    attribute_id: number | null
    value: string | null
    additional_cost: number | null
  }

  export type Attribute_optionsCountAggregateOutputType = {
    id: number
    attribute_id: number
    value: number
    additional_cost: number
    _all: number
  }


  export type Attribute_optionsAvgAggregateInputType = {
    id?: true
    attribute_id?: true
    additional_cost?: true
  }

  export type Attribute_optionsSumAggregateInputType = {
    id?: true
    attribute_id?: true
    additional_cost?: true
  }

  export type Attribute_optionsMinAggregateInputType = {
    id?: true
    attribute_id?: true
    value?: true
    additional_cost?: true
  }

  export type Attribute_optionsMaxAggregateInputType = {
    id?: true
    attribute_id?: true
    value?: true
    additional_cost?: true
  }

  export type Attribute_optionsCountAggregateInputType = {
    id?: true
    attribute_id?: true
    value?: true
    additional_cost?: true
    _all?: true
  }

  export type Attribute_optionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which attribute_options to aggregate.
     */
    where?: attribute_optionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of attribute_options to fetch.
     */
    orderBy?: attribute_optionsOrderByWithRelationInput | attribute_optionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: attribute_optionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` attribute_options from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` attribute_options.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned attribute_options
    **/
    _count?: true | Attribute_optionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Attribute_optionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Attribute_optionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Attribute_optionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Attribute_optionsMaxAggregateInputType
  }

  export type GetAttribute_optionsAggregateType<T extends Attribute_optionsAggregateArgs> = {
        [P in keyof T & keyof AggregateAttribute_options]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAttribute_options[P]>
      : GetScalarType<T[P], AggregateAttribute_options[P]>
  }




  export type attribute_optionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: attribute_optionsWhereInput
    orderBy?: attribute_optionsOrderByWithAggregationInput | attribute_optionsOrderByWithAggregationInput[]
    by: Attribute_optionsScalarFieldEnum[] | Attribute_optionsScalarFieldEnum
    having?: attribute_optionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Attribute_optionsCountAggregateInputType | true
    _avg?: Attribute_optionsAvgAggregateInputType
    _sum?: Attribute_optionsSumAggregateInputType
    _min?: Attribute_optionsMinAggregateInputType
    _max?: Attribute_optionsMaxAggregateInputType
  }

  export type Attribute_optionsGroupByOutputType = {
    id: number
    attribute_id: number
    value: string
    additional_cost: number | null
    _count: Attribute_optionsCountAggregateOutputType | null
    _avg: Attribute_optionsAvgAggregateOutputType | null
    _sum: Attribute_optionsSumAggregateOutputType | null
    _min: Attribute_optionsMinAggregateOutputType | null
    _max: Attribute_optionsMaxAggregateOutputType | null
  }

  type GetAttribute_optionsGroupByPayload<T extends attribute_optionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Attribute_optionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Attribute_optionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Attribute_optionsGroupByOutputType[P]>
            : GetScalarType<T[P], Attribute_optionsGroupByOutputType[P]>
        }
      >
    >


  export type attribute_optionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    attribute_id?: boolean
    value?: boolean
    additional_cost?: boolean
    attribute_option_images?: boolean | attribute_options$attribute_option_imagesArgs<ExtArgs>
    variant_attribute_options?: boolean | attribute_options$variant_attribute_optionsArgs<ExtArgs>
    _count?: boolean | Attribute_optionsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["attribute_options"]>



  export type attribute_optionsSelectScalar = {
    id?: boolean
    attribute_id?: boolean
    value?: boolean
    additional_cost?: boolean
  }

  export type attribute_optionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "attribute_id" | "value" | "additional_cost", ExtArgs["result"]["attribute_options"]>
  export type attribute_optionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    attribute_option_images?: boolean | attribute_options$attribute_option_imagesArgs<ExtArgs>
    variant_attribute_options?: boolean | attribute_options$variant_attribute_optionsArgs<ExtArgs>
    _count?: boolean | Attribute_optionsCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $attribute_optionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "attribute_options"
    objects: {
      attribute_option_images: Prisma.$attribute_option_imagesPayload<ExtArgs>[]
      variant_attribute_options: Prisma.$variant_attribute_optionsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      attribute_id: number
      value: string
      additional_cost: number | null
    }, ExtArgs["result"]["attribute_options"]>
    composites: {}
  }

  type attribute_optionsGetPayload<S extends boolean | null | undefined | attribute_optionsDefaultArgs> = $Result.GetResult<Prisma.$attribute_optionsPayload, S>

  type attribute_optionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<attribute_optionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Attribute_optionsCountAggregateInputType | true
    }

  export interface attribute_optionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['attribute_options'], meta: { name: 'attribute_options' } }
    /**
     * Find zero or one Attribute_options that matches the filter.
     * @param {attribute_optionsFindUniqueArgs} args - Arguments to find a Attribute_options
     * @example
     * // Get one Attribute_options
     * const attribute_options = await prisma.attribute_options.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends attribute_optionsFindUniqueArgs>(args: SelectSubset<T, attribute_optionsFindUniqueArgs<ExtArgs>>): Prisma__attribute_optionsClient<$Result.GetResult<Prisma.$attribute_optionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Attribute_options that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {attribute_optionsFindUniqueOrThrowArgs} args - Arguments to find a Attribute_options
     * @example
     * // Get one Attribute_options
     * const attribute_options = await prisma.attribute_options.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends attribute_optionsFindUniqueOrThrowArgs>(args: SelectSubset<T, attribute_optionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__attribute_optionsClient<$Result.GetResult<Prisma.$attribute_optionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Attribute_options that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attribute_optionsFindFirstArgs} args - Arguments to find a Attribute_options
     * @example
     * // Get one Attribute_options
     * const attribute_options = await prisma.attribute_options.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends attribute_optionsFindFirstArgs>(args?: SelectSubset<T, attribute_optionsFindFirstArgs<ExtArgs>>): Prisma__attribute_optionsClient<$Result.GetResult<Prisma.$attribute_optionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Attribute_options that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attribute_optionsFindFirstOrThrowArgs} args - Arguments to find a Attribute_options
     * @example
     * // Get one Attribute_options
     * const attribute_options = await prisma.attribute_options.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends attribute_optionsFindFirstOrThrowArgs>(args?: SelectSubset<T, attribute_optionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__attribute_optionsClient<$Result.GetResult<Prisma.$attribute_optionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Attribute_options that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attribute_optionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Attribute_options
     * const attribute_options = await prisma.attribute_options.findMany()
     * 
     * // Get first 10 Attribute_options
     * const attribute_options = await prisma.attribute_options.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const attribute_optionsWithIdOnly = await prisma.attribute_options.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends attribute_optionsFindManyArgs>(args?: SelectSubset<T, attribute_optionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$attribute_optionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Attribute_options.
     * @param {attribute_optionsCreateArgs} args - Arguments to create a Attribute_options.
     * @example
     * // Create one Attribute_options
     * const Attribute_options = await prisma.attribute_options.create({
     *   data: {
     *     // ... data to create a Attribute_options
     *   }
     * })
     * 
     */
    create<T extends attribute_optionsCreateArgs>(args: SelectSubset<T, attribute_optionsCreateArgs<ExtArgs>>): Prisma__attribute_optionsClient<$Result.GetResult<Prisma.$attribute_optionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Attribute_options.
     * @param {attribute_optionsCreateManyArgs} args - Arguments to create many Attribute_options.
     * @example
     * // Create many Attribute_options
     * const attribute_options = await prisma.attribute_options.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends attribute_optionsCreateManyArgs>(args?: SelectSubset<T, attribute_optionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Attribute_options.
     * @param {attribute_optionsDeleteArgs} args - Arguments to delete one Attribute_options.
     * @example
     * // Delete one Attribute_options
     * const Attribute_options = await prisma.attribute_options.delete({
     *   where: {
     *     // ... filter to delete one Attribute_options
     *   }
     * })
     * 
     */
    delete<T extends attribute_optionsDeleteArgs>(args: SelectSubset<T, attribute_optionsDeleteArgs<ExtArgs>>): Prisma__attribute_optionsClient<$Result.GetResult<Prisma.$attribute_optionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Attribute_options.
     * @param {attribute_optionsUpdateArgs} args - Arguments to update one Attribute_options.
     * @example
     * // Update one Attribute_options
     * const attribute_options = await prisma.attribute_options.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends attribute_optionsUpdateArgs>(args: SelectSubset<T, attribute_optionsUpdateArgs<ExtArgs>>): Prisma__attribute_optionsClient<$Result.GetResult<Prisma.$attribute_optionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Attribute_options.
     * @param {attribute_optionsDeleteManyArgs} args - Arguments to filter Attribute_options to delete.
     * @example
     * // Delete a few Attribute_options
     * const { count } = await prisma.attribute_options.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends attribute_optionsDeleteManyArgs>(args?: SelectSubset<T, attribute_optionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Attribute_options.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attribute_optionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Attribute_options
     * const attribute_options = await prisma.attribute_options.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends attribute_optionsUpdateManyArgs>(args: SelectSubset<T, attribute_optionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Attribute_options.
     * @param {attribute_optionsUpsertArgs} args - Arguments to update or create a Attribute_options.
     * @example
     * // Update or create a Attribute_options
     * const attribute_options = await prisma.attribute_options.upsert({
     *   create: {
     *     // ... data to create a Attribute_options
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Attribute_options we want to update
     *   }
     * })
     */
    upsert<T extends attribute_optionsUpsertArgs>(args: SelectSubset<T, attribute_optionsUpsertArgs<ExtArgs>>): Prisma__attribute_optionsClient<$Result.GetResult<Prisma.$attribute_optionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Attribute_options.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attribute_optionsCountArgs} args - Arguments to filter Attribute_options to count.
     * @example
     * // Count the number of Attribute_options
     * const count = await prisma.attribute_options.count({
     *   where: {
     *     // ... the filter for the Attribute_options we want to count
     *   }
     * })
    **/
    count<T extends attribute_optionsCountArgs>(
      args?: Subset<T, attribute_optionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Attribute_optionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Attribute_options.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Attribute_optionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Attribute_optionsAggregateArgs>(args: Subset<T, Attribute_optionsAggregateArgs>): Prisma.PrismaPromise<GetAttribute_optionsAggregateType<T>>

    /**
     * Group by Attribute_options.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attribute_optionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends attribute_optionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: attribute_optionsGroupByArgs['orderBy'] }
        : { orderBy?: attribute_optionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, attribute_optionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAttribute_optionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the attribute_options model
   */
  readonly fields: attribute_optionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for attribute_options.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__attribute_optionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    attribute_option_images<T extends attribute_options$attribute_option_imagesArgs<ExtArgs> = {}>(args?: Subset<T, attribute_options$attribute_option_imagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$attribute_option_imagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    variant_attribute_options<T extends attribute_options$variant_attribute_optionsArgs<ExtArgs> = {}>(args?: Subset<T, attribute_options$variant_attribute_optionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$variant_attribute_optionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the attribute_options model
   */
  interface attribute_optionsFieldRefs {
    readonly id: FieldRef<"attribute_options", 'Int'>
    readonly attribute_id: FieldRef<"attribute_options", 'Int'>
    readonly value: FieldRef<"attribute_options", 'String'>
    readonly additional_cost: FieldRef<"attribute_options", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * attribute_options findUnique
   */
  export type attribute_optionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attribute_options
     */
    select?: attribute_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attribute_options
     */
    omit?: attribute_optionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attribute_optionsInclude<ExtArgs> | null
    /**
     * Filter, which attribute_options to fetch.
     */
    where: attribute_optionsWhereUniqueInput
  }

  /**
   * attribute_options findUniqueOrThrow
   */
  export type attribute_optionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attribute_options
     */
    select?: attribute_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attribute_options
     */
    omit?: attribute_optionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attribute_optionsInclude<ExtArgs> | null
    /**
     * Filter, which attribute_options to fetch.
     */
    where: attribute_optionsWhereUniqueInput
  }

  /**
   * attribute_options findFirst
   */
  export type attribute_optionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attribute_options
     */
    select?: attribute_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attribute_options
     */
    omit?: attribute_optionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attribute_optionsInclude<ExtArgs> | null
    /**
     * Filter, which attribute_options to fetch.
     */
    where?: attribute_optionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of attribute_options to fetch.
     */
    orderBy?: attribute_optionsOrderByWithRelationInput | attribute_optionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for attribute_options.
     */
    cursor?: attribute_optionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` attribute_options from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` attribute_options.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of attribute_options.
     */
    distinct?: Attribute_optionsScalarFieldEnum | Attribute_optionsScalarFieldEnum[]
  }

  /**
   * attribute_options findFirstOrThrow
   */
  export type attribute_optionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attribute_options
     */
    select?: attribute_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attribute_options
     */
    omit?: attribute_optionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attribute_optionsInclude<ExtArgs> | null
    /**
     * Filter, which attribute_options to fetch.
     */
    where?: attribute_optionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of attribute_options to fetch.
     */
    orderBy?: attribute_optionsOrderByWithRelationInput | attribute_optionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for attribute_options.
     */
    cursor?: attribute_optionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` attribute_options from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` attribute_options.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of attribute_options.
     */
    distinct?: Attribute_optionsScalarFieldEnum | Attribute_optionsScalarFieldEnum[]
  }

  /**
   * attribute_options findMany
   */
  export type attribute_optionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attribute_options
     */
    select?: attribute_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attribute_options
     */
    omit?: attribute_optionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attribute_optionsInclude<ExtArgs> | null
    /**
     * Filter, which attribute_options to fetch.
     */
    where?: attribute_optionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of attribute_options to fetch.
     */
    orderBy?: attribute_optionsOrderByWithRelationInput | attribute_optionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing attribute_options.
     */
    cursor?: attribute_optionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` attribute_options from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` attribute_options.
     */
    skip?: number
    distinct?: Attribute_optionsScalarFieldEnum | Attribute_optionsScalarFieldEnum[]
  }

  /**
   * attribute_options create
   */
  export type attribute_optionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attribute_options
     */
    select?: attribute_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attribute_options
     */
    omit?: attribute_optionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attribute_optionsInclude<ExtArgs> | null
    /**
     * The data needed to create a attribute_options.
     */
    data: XOR<attribute_optionsCreateInput, attribute_optionsUncheckedCreateInput>
  }

  /**
   * attribute_options createMany
   */
  export type attribute_optionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many attribute_options.
     */
    data: attribute_optionsCreateManyInput | attribute_optionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * attribute_options update
   */
  export type attribute_optionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attribute_options
     */
    select?: attribute_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attribute_options
     */
    omit?: attribute_optionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attribute_optionsInclude<ExtArgs> | null
    /**
     * The data needed to update a attribute_options.
     */
    data: XOR<attribute_optionsUpdateInput, attribute_optionsUncheckedUpdateInput>
    /**
     * Choose, which attribute_options to update.
     */
    where: attribute_optionsWhereUniqueInput
  }

  /**
   * attribute_options updateMany
   */
  export type attribute_optionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update attribute_options.
     */
    data: XOR<attribute_optionsUpdateManyMutationInput, attribute_optionsUncheckedUpdateManyInput>
    /**
     * Filter which attribute_options to update
     */
    where?: attribute_optionsWhereInput
    /**
     * Limit how many attribute_options to update.
     */
    limit?: number
  }

  /**
   * attribute_options upsert
   */
  export type attribute_optionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attribute_options
     */
    select?: attribute_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attribute_options
     */
    omit?: attribute_optionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attribute_optionsInclude<ExtArgs> | null
    /**
     * The filter to search for the attribute_options to update in case it exists.
     */
    where: attribute_optionsWhereUniqueInput
    /**
     * In case the attribute_options found by the `where` argument doesn't exist, create a new attribute_options with this data.
     */
    create: XOR<attribute_optionsCreateInput, attribute_optionsUncheckedCreateInput>
    /**
     * In case the attribute_options was found with the provided `where` argument, update it with this data.
     */
    update: XOR<attribute_optionsUpdateInput, attribute_optionsUncheckedUpdateInput>
  }

  /**
   * attribute_options delete
   */
  export type attribute_optionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attribute_options
     */
    select?: attribute_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attribute_options
     */
    omit?: attribute_optionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attribute_optionsInclude<ExtArgs> | null
    /**
     * Filter which attribute_options to delete.
     */
    where: attribute_optionsWhereUniqueInput
  }

  /**
   * attribute_options deleteMany
   */
  export type attribute_optionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which attribute_options to delete
     */
    where?: attribute_optionsWhereInput
    /**
     * Limit how many attribute_options to delete.
     */
    limit?: number
  }

  /**
   * attribute_options.attribute_option_images
   */
  export type attribute_options$attribute_option_imagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attribute_option_images
     */
    select?: attribute_option_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attribute_option_images
     */
    omit?: attribute_option_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attribute_option_imagesInclude<ExtArgs> | null
    where?: attribute_option_imagesWhereInput
    orderBy?: attribute_option_imagesOrderByWithRelationInput | attribute_option_imagesOrderByWithRelationInput[]
    cursor?: attribute_option_imagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Attribute_option_imagesScalarFieldEnum | Attribute_option_imagesScalarFieldEnum[]
  }

  /**
   * attribute_options.variant_attribute_options
   */
  export type attribute_options$variant_attribute_optionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_attribute_options
     */
    select?: variant_attribute_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_attribute_options
     */
    omit?: variant_attribute_optionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_attribute_optionsInclude<ExtArgs> | null
    where?: variant_attribute_optionsWhereInput
    orderBy?: variant_attribute_optionsOrderByWithRelationInput | variant_attribute_optionsOrderByWithRelationInput[]
    cursor?: variant_attribute_optionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Variant_attribute_optionsScalarFieldEnum | Variant_attribute_optionsScalarFieldEnum[]
  }

  /**
   * attribute_options without action
   */
  export type attribute_optionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attribute_options
     */
    select?: attribute_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attribute_options
     */
    omit?: attribute_optionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: attribute_optionsInclude<ExtArgs> | null
  }


  /**
   * Model attributes
   */

  export type AggregateAttributes = {
    _count: AttributesCountAggregateOutputType | null
    _avg: AttributesAvgAggregateOutputType | null
    _sum: AttributesSumAggregateOutputType | null
    _min: AttributesMinAggregateOutputType | null
    _max: AttributesMaxAggregateOutputType | null
  }

  export type AttributesAvgAggregateOutputType = {
    id: number | null
  }

  export type AttributesSumAggregateOutputType = {
    id: number | null
  }

  export type AttributesMinAggregateOutputType = {
    id: number | null
    name: string | null
    display_type: $Enums.attributes_display_type | null
  }

  export type AttributesMaxAggregateOutputType = {
    id: number | null
    name: string | null
    display_type: $Enums.attributes_display_type | null
  }

  export type AttributesCountAggregateOutputType = {
    id: number
    name: number
    display_type: number
    _all: number
  }


  export type AttributesAvgAggregateInputType = {
    id?: true
  }

  export type AttributesSumAggregateInputType = {
    id?: true
  }

  export type AttributesMinAggregateInputType = {
    id?: true
    name?: true
    display_type?: true
  }

  export type AttributesMaxAggregateInputType = {
    id?: true
    name?: true
    display_type?: true
  }

  export type AttributesCountAggregateInputType = {
    id?: true
    name?: true
    display_type?: true
    _all?: true
  }

  export type AttributesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which attributes to aggregate.
     */
    where?: attributesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of attributes to fetch.
     */
    orderBy?: attributesOrderByWithRelationInput | attributesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: attributesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` attributes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` attributes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned attributes
    **/
    _count?: true | AttributesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AttributesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AttributesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AttributesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AttributesMaxAggregateInputType
  }

  export type GetAttributesAggregateType<T extends AttributesAggregateArgs> = {
        [P in keyof T & keyof AggregateAttributes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAttributes[P]>
      : GetScalarType<T[P], AggregateAttributes[P]>
  }




  export type attributesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: attributesWhereInput
    orderBy?: attributesOrderByWithAggregationInput | attributesOrderByWithAggregationInput[]
    by: AttributesScalarFieldEnum[] | AttributesScalarFieldEnum
    having?: attributesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AttributesCountAggregateInputType | true
    _avg?: AttributesAvgAggregateInputType
    _sum?: AttributesSumAggregateInputType
    _min?: AttributesMinAggregateInputType
    _max?: AttributesMaxAggregateInputType
  }

  export type AttributesGroupByOutputType = {
    id: number
    name: string
    display_type: $Enums.attributes_display_type
    _count: AttributesCountAggregateOutputType | null
    _avg: AttributesAvgAggregateOutputType | null
    _sum: AttributesSumAggregateOutputType | null
    _min: AttributesMinAggregateOutputType | null
    _max: AttributesMaxAggregateOutputType | null
  }

  type GetAttributesGroupByPayload<T extends attributesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AttributesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AttributesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AttributesGroupByOutputType[P]>
            : GetScalarType<T[P], AttributesGroupByOutputType[P]>
        }
      >
    >


  export type attributesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    display_type?: boolean
  }, ExtArgs["result"]["attributes"]>



  export type attributesSelectScalar = {
    id?: boolean
    name?: boolean
    display_type?: boolean
  }

  export type attributesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "display_type", ExtArgs["result"]["attributes"]>

  export type $attributesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "attributes"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      display_type: $Enums.attributes_display_type
    }, ExtArgs["result"]["attributes"]>
    composites: {}
  }

  type attributesGetPayload<S extends boolean | null | undefined | attributesDefaultArgs> = $Result.GetResult<Prisma.$attributesPayload, S>

  type attributesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<attributesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AttributesCountAggregateInputType | true
    }

  export interface attributesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['attributes'], meta: { name: 'attributes' } }
    /**
     * Find zero or one Attributes that matches the filter.
     * @param {attributesFindUniqueArgs} args - Arguments to find a Attributes
     * @example
     * // Get one Attributes
     * const attributes = await prisma.attributes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends attributesFindUniqueArgs>(args: SelectSubset<T, attributesFindUniqueArgs<ExtArgs>>): Prisma__attributesClient<$Result.GetResult<Prisma.$attributesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Attributes that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {attributesFindUniqueOrThrowArgs} args - Arguments to find a Attributes
     * @example
     * // Get one Attributes
     * const attributes = await prisma.attributes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends attributesFindUniqueOrThrowArgs>(args: SelectSubset<T, attributesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__attributesClient<$Result.GetResult<Prisma.$attributesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Attributes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attributesFindFirstArgs} args - Arguments to find a Attributes
     * @example
     * // Get one Attributes
     * const attributes = await prisma.attributes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends attributesFindFirstArgs>(args?: SelectSubset<T, attributesFindFirstArgs<ExtArgs>>): Prisma__attributesClient<$Result.GetResult<Prisma.$attributesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Attributes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attributesFindFirstOrThrowArgs} args - Arguments to find a Attributes
     * @example
     * // Get one Attributes
     * const attributes = await prisma.attributes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends attributesFindFirstOrThrowArgs>(args?: SelectSubset<T, attributesFindFirstOrThrowArgs<ExtArgs>>): Prisma__attributesClient<$Result.GetResult<Prisma.$attributesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Attributes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attributesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Attributes
     * const attributes = await prisma.attributes.findMany()
     * 
     * // Get first 10 Attributes
     * const attributes = await prisma.attributes.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const attributesWithIdOnly = await prisma.attributes.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends attributesFindManyArgs>(args?: SelectSubset<T, attributesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$attributesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Attributes.
     * @param {attributesCreateArgs} args - Arguments to create a Attributes.
     * @example
     * // Create one Attributes
     * const Attributes = await prisma.attributes.create({
     *   data: {
     *     // ... data to create a Attributes
     *   }
     * })
     * 
     */
    create<T extends attributesCreateArgs>(args: SelectSubset<T, attributesCreateArgs<ExtArgs>>): Prisma__attributesClient<$Result.GetResult<Prisma.$attributesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Attributes.
     * @param {attributesCreateManyArgs} args - Arguments to create many Attributes.
     * @example
     * // Create many Attributes
     * const attributes = await prisma.attributes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends attributesCreateManyArgs>(args?: SelectSubset<T, attributesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Attributes.
     * @param {attributesDeleteArgs} args - Arguments to delete one Attributes.
     * @example
     * // Delete one Attributes
     * const Attributes = await prisma.attributes.delete({
     *   where: {
     *     // ... filter to delete one Attributes
     *   }
     * })
     * 
     */
    delete<T extends attributesDeleteArgs>(args: SelectSubset<T, attributesDeleteArgs<ExtArgs>>): Prisma__attributesClient<$Result.GetResult<Prisma.$attributesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Attributes.
     * @param {attributesUpdateArgs} args - Arguments to update one Attributes.
     * @example
     * // Update one Attributes
     * const attributes = await prisma.attributes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends attributesUpdateArgs>(args: SelectSubset<T, attributesUpdateArgs<ExtArgs>>): Prisma__attributesClient<$Result.GetResult<Prisma.$attributesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Attributes.
     * @param {attributesDeleteManyArgs} args - Arguments to filter Attributes to delete.
     * @example
     * // Delete a few Attributes
     * const { count } = await prisma.attributes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends attributesDeleteManyArgs>(args?: SelectSubset<T, attributesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Attributes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attributesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Attributes
     * const attributes = await prisma.attributes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends attributesUpdateManyArgs>(args: SelectSubset<T, attributesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Attributes.
     * @param {attributesUpsertArgs} args - Arguments to update or create a Attributes.
     * @example
     * // Update or create a Attributes
     * const attributes = await prisma.attributes.upsert({
     *   create: {
     *     // ... data to create a Attributes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Attributes we want to update
     *   }
     * })
     */
    upsert<T extends attributesUpsertArgs>(args: SelectSubset<T, attributesUpsertArgs<ExtArgs>>): Prisma__attributesClient<$Result.GetResult<Prisma.$attributesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Attributes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attributesCountArgs} args - Arguments to filter Attributes to count.
     * @example
     * // Count the number of Attributes
     * const count = await prisma.attributes.count({
     *   where: {
     *     // ... the filter for the Attributes we want to count
     *   }
     * })
    **/
    count<T extends attributesCountArgs>(
      args?: Subset<T, attributesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AttributesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Attributes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AttributesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AttributesAggregateArgs>(args: Subset<T, AttributesAggregateArgs>): Prisma.PrismaPromise<GetAttributesAggregateType<T>>

    /**
     * Group by Attributes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {attributesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends attributesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: attributesGroupByArgs['orderBy'] }
        : { orderBy?: attributesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, attributesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAttributesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the attributes model
   */
  readonly fields: attributesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for attributes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__attributesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the attributes model
   */
  interface attributesFieldRefs {
    readonly id: FieldRef<"attributes", 'Int'>
    readonly name: FieldRef<"attributes", 'String'>
    readonly display_type: FieldRef<"attributes", 'attributes_display_type'>
  }
    

  // Custom InputTypes
  /**
   * attributes findUnique
   */
  export type attributesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attributes
     */
    select?: attributesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attributes
     */
    omit?: attributesOmit<ExtArgs> | null
    /**
     * Filter, which attributes to fetch.
     */
    where: attributesWhereUniqueInput
  }

  /**
   * attributes findUniqueOrThrow
   */
  export type attributesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attributes
     */
    select?: attributesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attributes
     */
    omit?: attributesOmit<ExtArgs> | null
    /**
     * Filter, which attributes to fetch.
     */
    where: attributesWhereUniqueInput
  }

  /**
   * attributes findFirst
   */
  export type attributesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attributes
     */
    select?: attributesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attributes
     */
    omit?: attributesOmit<ExtArgs> | null
    /**
     * Filter, which attributes to fetch.
     */
    where?: attributesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of attributes to fetch.
     */
    orderBy?: attributesOrderByWithRelationInput | attributesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for attributes.
     */
    cursor?: attributesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` attributes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` attributes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of attributes.
     */
    distinct?: AttributesScalarFieldEnum | AttributesScalarFieldEnum[]
  }

  /**
   * attributes findFirstOrThrow
   */
  export type attributesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attributes
     */
    select?: attributesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attributes
     */
    omit?: attributesOmit<ExtArgs> | null
    /**
     * Filter, which attributes to fetch.
     */
    where?: attributesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of attributes to fetch.
     */
    orderBy?: attributesOrderByWithRelationInput | attributesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for attributes.
     */
    cursor?: attributesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` attributes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` attributes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of attributes.
     */
    distinct?: AttributesScalarFieldEnum | AttributesScalarFieldEnum[]
  }

  /**
   * attributes findMany
   */
  export type attributesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attributes
     */
    select?: attributesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attributes
     */
    omit?: attributesOmit<ExtArgs> | null
    /**
     * Filter, which attributes to fetch.
     */
    where?: attributesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of attributes to fetch.
     */
    orderBy?: attributesOrderByWithRelationInput | attributesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing attributes.
     */
    cursor?: attributesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` attributes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` attributes.
     */
    skip?: number
    distinct?: AttributesScalarFieldEnum | AttributesScalarFieldEnum[]
  }

  /**
   * attributes create
   */
  export type attributesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attributes
     */
    select?: attributesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attributes
     */
    omit?: attributesOmit<ExtArgs> | null
    /**
     * The data needed to create a attributes.
     */
    data: XOR<attributesCreateInput, attributesUncheckedCreateInput>
  }

  /**
   * attributes createMany
   */
  export type attributesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many attributes.
     */
    data: attributesCreateManyInput | attributesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * attributes update
   */
  export type attributesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attributes
     */
    select?: attributesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attributes
     */
    omit?: attributesOmit<ExtArgs> | null
    /**
     * The data needed to update a attributes.
     */
    data: XOR<attributesUpdateInput, attributesUncheckedUpdateInput>
    /**
     * Choose, which attributes to update.
     */
    where: attributesWhereUniqueInput
  }

  /**
   * attributes updateMany
   */
  export type attributesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update attributes.
     */
    data: XOR<attributesUpdateManyMutationInput, attributesUncheckedUpdateManyInput>
    /**
     * Filter which attributes to update
     */
    where?: attributesWhereInput
    /**
     * Limit how many attributes to update.
     */
    limit?: number
  }

  /**
   * attributes upsert
   */
  export type attributesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attributes
     */
    select?: attributesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attributes
     */
    omit?: attributesOmit<ExtArgs> | null
    /**
     * The filter to search for the attributes to update in case it exists.
     */
    where: attributesWhereUniqueInput
    /**
     * In case the attributes found by the `where` argument doesn't exist, create a new attributes with this data.
     */
    create: XOR<attributesCreateInput, attributesUncheckedCreateInput>
    /**
     * In case the attributes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<attributesUpdateInput, attributesUncheckedUpdateInput>
  }

  /**
   * attributes delete
   */
  export type attributesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attributes
     */
    select?: attributesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attributes
     */
    omit?: attributesOmit<ExtArgs> | null
    /**
     * Filter which attributes to delete.
     */
    where: attributesWhereUniqueInput
  }

  /**
   * attributes deleteMany
   */
  export type attributesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which attributes to delete
     */
    where?: attributesWhereInput
    /**
     * Limit how many attributes to delete.
     */
    limit?: number
  }

  /**
   * attributes without action
   */
  export type attributesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the attributes
     */
    select?: attributesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the attributes
     */
    omit?: attributesOmit<ExtArgs> | null
  }


  /**
   * Model banner
   */

  export type AggregateBanner = {
    _count: BannerCountAggregateOutputType | null
    _avg: BannerAvgAggregateOutputType | null
    _sum: BannerSumAggregateOutputType | null
    _min: BannerMinAggregateOutputType | null
    _max: BannerMaxAggregateOutputType | null
  }

  export type BannerAvgAggregateOutputType = {
    id: number | null
    display_order: number | null
  }

  export type BannerSumAggregateOutputType = {
    id: number | null
    display_order: number | null
  }

  export type BannerMinAggregateOutputType = {
    id: number | null
    title: string | null
    subtitle: string | null
    description: string | null
    created_at: Date | null
    updated_at: Date | null
    display_order: number | null
    link: string | null
    image_url: string | null
  }

  export type BannerMaxAggregateOutputType = {
    id: number | null
    title: string | null
    subtitle: string | null
    description: string | null
    created_at: Date | null
    updated_at: Date | null
    display_order: number | null
    link: string | null
    image_url: string | null
  }

  export type BannerCountAggregateOutputType = {
    id: number
    title: number
    subtitle: number
    description: number
    created_at: number
    updated_at: number
    display_order: number
    link: number
    image_url: number
    _all: number
  }


  export type BannerAvgAggregateInputType = {
    id?: true
    display_order?: true
  }

  export type BannerSumAggregateInputType = {
    id?: true
    display_order?: true
  }

  export type BannerMinAggregateInputType = {
    id?: true
    title?: true
    subtitle?: true
    description?: true
    created_at?: true
    updated_at?: true
    display_order?: true
    link?: true
    image_url?: true
  }

  export type BannerMaxAggregateInputType = {
    id?: true
    title?: true
    subtitle?: true
    description?: true
    created_at?: true
    updated_at?: true
    display_order?: true
    link?: true
    image_url?: true
  }

  export type BannerCountAggregateInputType = {
    id?: true
    title?: true
    subtitle?: true
    description?: true
    created_at?: true
    updated_at?: true
    display_order?: true
    link?: true
    image_url?: true
    _all?: true
  }

  export type BannerAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which banner to aggregate.
     */
    where?: bannerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of banners to fetch.
     */
    orderBy?: bannerOrderByWithRelationInput | bannerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: bannerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` banners from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` banners.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned banners
    **/
    _count?: true | BannerCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BannerAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BannerSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BannerMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BannerMaxAggregateInputType
  }

  export type GetBannerAggregateType<T extends BannerAggregateArgs> = {
        [P in keyof T & keyof AggregateBanner]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBanner[P]>
      : GetScalarType<T[P], AggregateBanner[P]>
  }




  export type bannerGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: bannerWhereInput
    orderBy?: bannerOrderByWithAggregationInput | bannerOrderByWithAggregationInput[]
    by: BannerScalarFieldEnum[] | BannerScalarFieldEnum
    having?: bannerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BannerCountAggregateInputType | true
    _avg?: BannerAvgAggregateInputType
    _sum?: BannerSumAggregateInputType
    _min?: BannerMinAggregateInputType
    _max?: BannerMaxAggregateInputType
  }

  export type BannerGroupByOutputType = {
    id: number
    title: string
    subtitle: string | null
    description: string | null
    created_at: Date
    updated_at: Date
    display_order: number | null
    link: string | null
    image_url: string | null
    _count: BannerCountAggregateOutputType | null
    _avg: BannerAvgAggregateOutputType | null
    _sum: BannerSumAggregateOutputType | null
    _min: BannerMinAggregateOutputType | null
    _max: BannerMaxAggregateOutputType | null
  }

  type GetBannerGroupByPayload<T extends bannerGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BannerGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BannerGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BannerGroupByOutputType[P]>
            : GetScalarType<T[P], BannerGroupByOutputType[P]>
        }
      >
    >


  export type bannerSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    subtitle?: boolean
    description?: boolean
    created_at?: boolean
    updated_at?: boolean
    display_order?: boolean
    link?: boolean
    image_url?: boolean
  }, ExtArgs["result"]["banner"]>



  export type bannerSelectScalar = {
    id?: boolean
    title?: boolean
    subtitle?: boolean
    description?: boolean
    created_at?: boolean
    updated_at?: boolean
    display_order?: boolean
    link?: boolean
    image_url?: boolean
  }

  export type bannerOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "subtitle" | "description" | "created_at" | "updated_at" | "display_order" | "link" | "image_url", ExtArgs["result"]["banner"]>

  export type $bannerPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "banner"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      title: string
      subtitle: string | null
      description: string | null
      created_at: Date
      updated_at: Date
      display_order: number | null
      link: string | null
      image_url: string | null
    }, ExtArgs["result"]["banner"]>
    composites: {}
  }

  type bannerGetPayload<S extends boolean | null | undefined | bannerDefaultArgs> = $Result.GetResult<Prisma.$bannerPayload, S>

  type bannerCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<bannerFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BannerCountAggregateInputType | true
    }

  export interface bannerDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['banner'], meta: { name: 'banner' } }
    /**
     * Find zero or one Banner that matches the filter.
     * @param {bannerFindUniqueArgs} args - Arguments to find a Banner
     * @example
     * // Get one Banner
     * const banner = await prisma.banner.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends bannerFindUniqueArgs>(args: SelectSubset<T, bannerFindUniqueArgs<ExtArgs>>): Prisma__bannerClient<$Result.GetResult<Prisma.$bannerPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Banner that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {bannerFindUniqueOrThrowArgs} args - Arguments to find a Banner
     * @example
     * // Get one Banner
     * const banner = await prisma.banner.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends bannerFindUniqueOrThrowArgs>(args: SelectSubset<T, bannerFindUniqueOrThrowArgs<ExtArgs>>): Prisma__bannerClient<$Result.GetResult<Prisma.$bannerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Banner that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bannerFindFirstArgs} args - Arguments to find a Banner
     * @example
     * // Get one Banner
     * const banner = await prisma.banner.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends bannerFindFirstArgs>(args?: SelectSubset<T, bannerFindFirstArgs<ExtArgs>>): Prisma__bannerClient<$Result.GetResult<Prisma.$bannerPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Banner that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bannerFindFirstOrThrowArgs} args - Arguments to find a Banner
     * @example
     * // Get one Banner
     * const banner = await prisma.banner.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends bannerFindFirstOrThrowArgs>(args?: SelectSubset<T, bannerFindFirstOrThrowArgs<ExtArgs>>): Prisma__bannerClient<$Result.GetResult<Prisma.$bannerPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Banners that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bannerFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Banners
     * const banners = await prisma.banner.findMany()
     * 
     * // Get first 10 Banners
     * const banners = await prisma.banner.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const bannerWithIdOnly = await prisma.banner.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends bannerFindManyArgs>(args?: SelectSubset<T, bannerFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$bannerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Banner.
     * @param {bannerCreateArgs} args - Arguments to create a Banner.
     * @example
     * // Create one Banner
     * const Banner = await prisma.banner.create({
     *   data: {
     *     // ... data to create a Banner
     *   }
     * })
     * 
     */
    create<T extends bannerCreateArgs>(args: SelectSubset<T, bannerCreateArgs<ExtArgs>>): Prisma__bannerClient<$Result.GetResult<Prisma.$bannerPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Banners.
     * @param {bannerCreateManyArgs} args - Arguments to create many Banners.
     * @example
     * // Create many Banners
     * const banner = await prisma.banner.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends bannerCreateManyArgs>(args?: SelectSubset<T, bannerCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Banner.
     * @param {bannerDeleteArgs} args - Arguments to delete one Banner.
     * @example
     * // Delete one Banner
     * const Banner = await prisma.banner.delete({
     *   where: {
     *     // ... filter to delete one Banner
     *   }
     * })
     * 
     */
    delete<T extends bannerDeleteArgs>(args: SelectSubset<T, bannerDeleteArgs<ExtArgs>>): Prisma__bannerClient<$Result.GetResult<Prisma.$bannerPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Banner.
     * @param {bannerUpdateArgs} args - Arguments to update one Banner.
     * @example
     * // Update one Banner
     * const banner = await prisma.banner.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends bannerUpdateArgs>(args: SelectSubset<T, bannerUpdateArgs<ExtArgs>>): Prisma__bannerClient<$Result.GetResult<Prisma.$bannerPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Banners.
     * @param {bannerDeleteManyArgs} args - Arguments to filter Banners to delete.
     * @example
     * // Delete a few Banners
     * const { count } = await prisma.banner.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends bannerDeleteManyArgs>(args?: SelectSubset<T, bannerDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Banners.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bannerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Banners
     * const banner = await prisma.banner.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends bannerUpdateManyArgs>(args: SelectSubset<T, bannerUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Banner.
     * @param {bannerUpsertArgs} args - Arguments to update or create a Banner.
     * @example
     * // Update or create a Banner
     * const banner = await prisma.banner.upsert({
     *   create: {
     *     // ... data to create a Banner
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Banner we want to update
     *   }
     * })
     */
    upsert<T extends bannerUpsertArgs>(args: SelectSubset<T, bannerUpsertArgs<ExtArgs>>): Prisma__bannerClient<$Result.GetResult<Prisma.$bannerPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Banners.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bannerCountArgs} args - Arguments to filter Banners to count.
     * @example
     * // Count the number of Banners
     * const count = await prisma.banner.count({
     *   where: {
     *     // ... the filter for the Banners we want to count
     *   }
     * })
    **/
    count<T extends bannerCountArgs>(
      args?: Subset<T, bannerCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BannerCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Banner.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BannerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BannerAggregateArgs>(args: Subset<T, BannerAggregateArgs>): Prisma.PrismaPromise<GetBannerAggregateType<T>>

    /**
     * Group by Banner.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bannerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends bannerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: bannerGroupByArgs['orderBy'] }
        : { orderBy?: bannerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, bannerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBannerGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the banner model
   */
  readonly fields: bannerFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for banner.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__bannerClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the banner model
   */
  interface bannerFieldRefs {
    readonly id: FieldRef<"banner", 'Int'>
    readonly title: FieldRef<"banner", 'String'>
    readonly subtitle: FieldRef<"banner", 'String'>
    readonly description: FieldRef<"banner", 'String'>
    readonly created_at: FieldRef<"banner", 'DateTime'>
    readonly updated_at: FieldRef<"banner", 'DateTime'>
    readonly display_order: FieldRef<"banner", 'Int'>
    readonly link: FieldRef<"banner", 'String'>
    readonly image_url: FieldRef<"banner", 'String'>
  }
    

  // Custom InputTypes
  /**
   * banner findUnique
   */
  export type bannerFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the banner
     */
    select?: bannerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the banner
     */
    omit?: bannerOmit<ExtArgs> | null
    /**
     * Filter, which banner to fetch.
     */
    where: bannerWhereUniqueInput
  }

  /**
   * banner findUniqueOrThrow
   */
  export type bannerFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the banner
     */
    select?: bannerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the banner
     */
    omit?: bannerOmit<ExtArgs> | null
    /**
     * Filter, which banner to fetch.
     */
    where: bannerWhereUniqueInput
  }

  /**
   * banner findFirst
   */
  export type bannerFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the banner
     */
    select?: bannerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the banner
     */
    omit?: bannerOmit<ExtArgs> | null
    /**
     * Filter, which banner to fetch.
     */
    where?: bannerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of banners to fetch.
     */
    orderBy?: bannerOrderByWithRelationInput | bannerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for banners.
     */
    cursor?: bannerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` banners from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` banners.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of banners.
     */
    distinct?: BannerScalarFieldEnum | BannerScalarFieldEnum[]
  }

  /**
   * banner findFirstOrThrow
   */
  export type bannerFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the banner
     */
    select?: bannerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the banner
     */
    omit?: bannerOmit<ExtArgs> | null
    /**
     * Filter, which banner to fetch.
     */
    where?: bannerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of banners to fetch.
     */
    orderBy?: bannerOrderByWithRelationInput | bannerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for banners.
     */
    cursor?: bannerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` banners from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` banners.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of banners.
     */
    distinct?: BannerScalarFieldEnum | BannerScalarFieldEnum[]
  }

  /**
   * banner findMany
   */
  export type bannerFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the banner
     */
    select?: bannerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the banner
     */
    omit?: bannerOmit<ExtArgs> | null
    /**
     * Filter, which banners to fetch.
     */
    where?: bannerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of banners to fetch.
     */
    orderBy?: bannerOrderByWithRelationInput | bannerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing banners.
     */
    cursor?: bannerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` banners from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` banners.
     */
    skip?: number
    distinct?: BannerScalarFieldEnum | BannerScalarFieldEnum[]
  }

  /**
   * banner create
   */
  export type bannerCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the banner
     */
    select?: bannerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the banner
     */
    omit?: bannerOmit<ExtArgs> | null
    /**
     * The data needed to create a banner.
     */
    data: XOR<bannerCreateInput, bannerUncheckedCreateInput>
  }

  /**
   * banner createMany
   */
  export type bannerCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many banners.
     */
    data: bannerCreateManyInput | bannerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * banner update
   */
  export type bannerUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the banner
     */
    select?: bannerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the banner
     */
    omit?: bannerOmit<ExtArgs> | null
    /**
     * The data needed to update a banner.
     */
    data: XOR<bannerUpdateInput, bannerUncheckedUpdateInput>
    /**
     * Choose, which banner to update.
     */
    where: bannerWhereUniqueInput
  }

  /**
   * banner updateMany
   */
  export type bannerUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update banners.
     */
    data: XOR<bannerUpdateManyMutationInput, bannerUncheckedUpdateManyInput>
    /**
     * Filter which banners to update
     */
    where?: bannerWhereInput
    /**
     * Limit how many banners to update.
     */
    limit?: number
  }

  /**
   * banner upsert
   */
  export type bannerUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the banner
     */
    select?: bannerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the banner
     */
    omit?: bannerOmit<ExtArgs> | null
    /**
     * The filter to search for the banner to update in case it exists.
     */
    where: bannerWhereUniqueInput
    /**
     * In case the banner found by the `where` argument doesn't exist, create a new banner with this data.
     */
    create: XOR<bannerCreateInput, bannerUncheckedCreateInput>
    /**
     * In case the banner was found with the provided `where` argument, update it with this data.
     */
    update: XOR<bannerUpdateInput, bannerUncheckedUpdateInput>
  }

  /**
   * banner delete
   */
  export type bannerDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the banner
     */
    select?: bannerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the banner
     */
    omit?: bannerOmit<ExtArgs> | null
    /**
     * Filter which banner to delete.
     */
    where: bannerWhereUniqueInput
  }

  /**
   * banner deleteMany
   */
  export type bannerDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which banners to delete
     */
    where?: bannerWhereInput
    /**
     * Limit how many banners to delete.
     */
    limit?: number
  }

  /**
   * banner without action
   */
  export type bannerDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the banner
     */
    select?: bannerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the banner
     */
    omit?: bannerOmit<ExtArgs> | null
  }


  /**
   * Model brands
   */

  export type AggregateBrands = {
    _count: BrandsCountAggregateOutputType | null
    _avg: BrandsAvgAggregateOutputType | null
    _sum: BrandsSumAggregateOutputType | null
    _min: BrandsMinAggregateOutputType | null
    _max: BrandsMaxAggregateOutputType | null
  }

  export type BrandsAvgAggregateOutputType = {
    id: number | null
  }

  export type BrandsSumAggregateOutputType = {
    id: number | null
  }

  export type BrandsMinAggregateOutputType = {
    id: number | null
    name: string | null
  }

  export type BrandsMaxAggregateOutputType = {
    id: number | null
    name: string | null
  }

  export type BrandsCountAggregateOutputType = {
    id: number
    name: number
    _all: number
  }


  export type BrandsAvgAggregateInputType = {
    id?: true
  }

  export type BrandsSumAggregateInputType = {
    id?: true
  }

  export type BrandsMinAggregateInputType = {
    id?: true
    name?: true
  }

  export type BrandsMaxAggregateInputType = {
    id?: true
    name?: true
  }

  export type BrandsCountAggregateInputType = {
    id?: true
    name?: true
    _all?: true
  }

  export type BrandsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which brands to aggregate.
     */
    where?: brandsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of brands to fetch.
     */
    orderBy?: brandsOrderByWithRelationInput | brandsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: brandsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` brands from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` brands.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned brands
    **/
    _count?: true | BrandsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BrandsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BrandsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BrandsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BrandsMaxAggregateInputType
  }

  export type GetBrandsAggregateType<T extends BrandsAggregateArgs> = {
        [P in keyof T & keyof AggregateBrands]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBrands[P]>
      : GetScalarType<T[P], AggregateBrands[P]>
  }




  export type brandsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: brandsWhereInput
    orderBy?: brandsOrderByWithAggregationInput | brandsOrderByWithAggregationInput[]
    by: BrandsScalarFieldEnum[] | BrandsScalarFieldEnum
    having?: brandsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BrandsCountAggregateInputType | true
    _avg?: BrandsAvgAggregateInputType
    _sum?: BrandsSumAggregateInputType
    _min?: BrandsMinAggregateInputType
    _max?: BrandsMaxAggregateInputType
  }

  export type BrandsGroupByOutputType = {
    id: number
    name: string
    _count: BrandsCountAggregateOutputType | null
    _avg: BrandsAvgAggregateOutputType | null
    _sum: BrandsSumAggregateOutputType | null
    _min: BrandsMinAggregateOutputType | null
    _max: BrandsMaxAggregateOutputType | null
  }

  type GetBrandsGroupByPayload<T extends brandsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BrandsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BrandsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BrandsGroupByOutputType[P]>
            : GetScalarType<T[P], BrandsGroupByOutputType[P]>
        }
      >
    >


  export type brandsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    products?: boolean | brands$productsArgs<ExtArgs>
    _count?: boolean | BrandsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["brands"]>



  export type brandsSelectScalar = {
    id?: boolean
    name?: boolean
  }

  export type brandsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name", ExtArgs["result"]["brands"]>
  export type brandsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | brands$productsArgs<ExtArgs>
    _count?: boolean | BrandsCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $brandsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "brands"
    objects: {
      products: Prisma.$productsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
    }, ExtArgs["result"]["brands"]>
    composites: {}
  }

  type brandsGetPayload<S extends boolean | null | undefined | brandsDefaultArgs> = $Result.GetResult<Prisma.$brandsPayload, S>

  type brandsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<brandsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BrandsCountAggregateInputType | true
    }

  export interface brandsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['brands'], meta: { name: 'brands' } }
    /**
     * Find zero or one Brands that matches the filter.
     * @param {brandsFindUniqueArgs} args - Arguments to find a Brands
     * @example
     * // Get one Brands
     * const brands = await prisma.brands.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends brandsFindUniqueArgs>(args: SelectSubset<T, brandsFindUniqueArgs<ExtArgs>>): Prisma__brandsClient<$Result.GetResult<Prisma.$brandsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Brands that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {brandsFindUniqueOrThrowArgs} args - Arguments to find a Brands
     * @example
     * // Get one Brands
     * const brands = await prisma.brands.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends brandsFindUniqueOrThrowArgs>(args: SelectSubset<T, brandsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__brandsClient<$Result.GetResult<Prisma.$brandsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Brands that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {brandsFindFirstArgs} args - Arguments to find a Brands
     * @example
     * // Get one Brands
     * const brands = await prisma.brands.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends brandsFindFirstArgs>(args?: SelectSubset<T, brandsFindFirstArgs<ExtArgs>>): Prisma__brandsClient<$Result.GetResult<Prisma.$brandsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Brands that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {brandsFindFirstOrThrowArgs} args - Arguments to find a Brands
     * @example
     * // Get one Brands
     * const brands = await prisma.brands.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends brandsFindFirstOrThrowArgs>(args?: SelectSubset<T, brandsFindFirstOrThrowArgs<ExtArgs>>): Prisma__brandsClient<$Result.GetResult<Prisma.$brandsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Brands that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {brandsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Brands
     * const brands = await prisma.brands.findMany()
     * 
     * // Get first 10 Brands
     * const brands = await prisma.brands.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const brandsWithIdOnly = await prisma.brands.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends brandsFindManyArgs>(args?: SelectSubset<T, brandsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$brandsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Brands.
     * @param {brandsCreateArgs} args - Arguments to create a Brands.
     * @example
     * // Create one Brands
     * const Brands = await prisma.brands.create({
     *   data: {
     *     // ... data to create a Brands
     *   }
     * })
     * 
     */
    create<T extends brandsCreateArgs>(args: SelectSubset<T, brandsCreateArgs<ExtArgs>>): Prisma__brandsClient<$Result.GetResult<Prisma.$brandsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Brands.
     * @param {brandsCreateManyArgs} args - Arguments to create many Brands.
     * @example
     * // Create many Brands
     * const brands = await prisma.brands.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends brandsCreateManyArgs>(args?: SelectSubset<T, brandsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Brands.
     * @param {brandsDeleteArgs} args - Arguments to delete one Brands.
     * @example
     * // Delete one Brands
     * const Brands = await prisma.brands.delete({
     *   where: {
     *     // ... filter to delete one Brands
     *   }
     * })
     * 
     */
    delete<T extends brandsDeleteArgs>(args: SelectSubset<T, brandsDeleteArgs<ExtArgs>>): Prisma__brandsClient<$Result.GetResult<Prisma.$brandsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Brands.
     * @param {brandsUpdateArgs} args - Arguments to update one Brands.
     * @example
     * // Update one Brands
     * const brands = await prisma.brands.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends brandsUpdateArgs>(args: SelectSubset<T, brandsUpdateArgs<ExtArgs>>): Prisma__brandsClient<$Result.GetResult<Prisma.$brandsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Brands.
     * @param {brandsDeleteManyArgs} args - Arguments to filter Brands to delete.
     * @example
     * // Delete a few Brands
     * const { count } = await prisma.brands.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends brandsDeleteManyArgs>(args?: SelectSubset<T, brandsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Brands.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {brandsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Brands
     * const brands = await prisma.brands.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends brandsUpdateManyArgs>(args: SelectSubset<T, brandsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Brands.
     * @param {brandsUpsertArgs} args - Arguments to update or create a Brands.
     * @example
     * // Update or create a Brands
     * const brands = await prisma.brands.upsert({
     *   create: {
     *     // ... data to create a Brands
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Brands we want to update
     *   }
     * })
     */
    upsert<T extends brandsUpsertArgs>(args: SelectSubset<T, brandsUpsertArgs<ExtArgs>>): Prisma__brandsClient<$Result.GetResult<Prisma.$brandsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Brands.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {brandsCountArgs} args - Arguments to filter Brands to count.
     * @example
     * // Count the number of Brands
     * const count = await prisma.brands.count({
     *   where: {
     *     // ... the filter for the Brands we want to count
     *   }
     * })
    **/
    count<T extends brandsCountArgs>(
      args?: Subset<T, brandsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BrandsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Brands.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BrandsAggregateArgs>(args: Subset<T, BrandsAggregateArgs>): Prisma.PrismaPromise<GetBrandsAggregateType<T>>

    /**
     * Group by Brands.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {brandsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends brandsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: brandsGroupByArgs['orderBy'] }
        : { orderBy?: brandsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, brandsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBrandsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the brands model
   */
  readonly fields: brandsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for brands.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__brandsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    products<T extends brands$productsArgs<ExtArgs> = {}>(args?: Subset<T, brands$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the brands model
   */
  interface brandsFieldRefs {
    readonly id: FieldRef<"brands", 'Int'>
    readonly name: FieldRef<"brands", 'String'>
  }
    

  // Custom InputTypes
  /**
   * brands findUnique
   */
  export type brandsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the brands
     */
    select?: brandsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the brands
     */
    omit?: brandsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: brandsInclude<ExtArgs> | null
    /**
     * Filter, which brands to fetch.
     */
    where: brandsWhereUniqueInput
  }

  /**
   * brands findUniqueOrThrow
   */
  export type brandsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the brands
     */
    select?: brandsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the brands
     */
    omit?: brandsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: brandsInclude<ExtArgs> | null
    /**
     * Filter, which brands to fetch.
     */
    where: brandsWhereUniqueInput
  }

  /**
   * brands findFirst
   */
  export type brandsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the brands
     */
    select?: brandsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the brands
     */
    omit?: brandsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: brandsInclude<ExtArgs> | null
    /**
     * Filter, which brands to fetch.
     */
    where?: brandsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of brands to fetch.
     */
    orderBy?: brandsOrderByWithRelationInput | brandsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for brands.
     */
    cursor?: brandsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` brands from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` brands.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of brands.
     */
    distinct?: BrandsScalarFieldEnum | BrandsScalarFieldEnum[]
  }

  /**
   * brands findFirstOrThrow
   */
  export type brandsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the brands
     */
    select?: brandsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the brands
     */
    omit?: brandsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: brandsInclude<ExtArgs> | null
    /**
     * Filter, which brands to fetch.
     */
    where?: brandsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of brands to fetch.
     */
    orderBy?: brandsOrderByWithRelationInput | brandsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for brands.
     */
    cursor?: brandsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` brands from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` brands.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of brands.
     */
    distinct?: BrandsScalarFieldEnum | BrandsScalarFieldEnum[]
  }

  /**
   * brands findMany
   */
  export type brandsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the brands
     */
    select?: brandsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the brands
     */
    omit?: brandsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: brandsInclude<ExtArgs> | null
    /**
     * Filter, which brands to fetch.
     */
    where?: brandsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of brands to fetch.
     */
    orderBy?: brandsOrderByWithRelationInput | brandsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing brands.
     */
    cursor?: brandsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` brands from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` brands.
     */
    skip?: number
    distinct?: BrandsScalarFieldEnum | BrandsScalarFieldEnum[]
  }

  /**
   * brands create
   */
  export type brandsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the brands
     */
    select?: brandsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the brands
     */
    omit?: brandsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: brandsInclude<ExtArgs> | null
    /**
     * The data needed to create a brands.
     */
    data: XOR<brandsCreateInput, brandsUncheckedCreateInput>
  }

  /**
   * brands createMany
   */
  export type brandsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many brands.
     */
    data: brandsCreateManyInput | brandsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * brands update
   */
  export type brandsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the brands
     */
    select?: brandsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the brands
     */
    omit?: brandsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: brandsInclude<ExtArgs> | null
    /**
     * The data needed to update a brands.
     */
    data: XOR<brandsUpdateInput, brandsUncheckedUpdateInput>
    /**
     * Choose, which brands to update.
     */
    where: brandsWhereUniqueInput
  }

  /**
   * brands updateMany
   */
  export type brandsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update brands.
     */
    data: XOR<brandsUpdateManyMutationInput, brandsUncheckedUpdateManyInput>
    /**
     * Filter which brands to update
     */
    where?: brandsWhereInput
    /**
     * Limit how many brands to update.
     */
    limit?: number
  }

  /**
   * brands upsert
   */
  export type brandsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the brands
     */
    select?: brandsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the brands
     */
    omit?: brandsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: brandsInclude<ExtArgs> | null
    /**
     * The filter to search for the brands to update in case it exists.
     */
    where: brandsWhereUniqueInput
    /**
     * In case the brands found by the `where` argument doesn't exist, create a new brands with this data.
     */
    create: XOR<brandsCreateInput, brandsUncheckedCreateInput>
    /**
     * In case the brands was found with the provided `where` argument, update it with this data.
     */
    update: XOR<brandsUpdateInput, brandsUncheckedUpdateInput>
  }

  /**
   * brands delete
   */
  export type brandsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the brands
     */
    select?: brandsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the brands
     */
    omit?: brandsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: brandsInclude<ExtArgs> | null
    /**
     * Filter which brands to delete.
     */
    where: brandsWhereUniqueInput
  }

  /**
   * brands deleteMany
   */
  export type brandsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which brands to delete
     */
    where?: brandsWhereInput
    /**
     * Limit how many brands to delete.
     */
    limit?: number
  }

  /**
   * brands.products
   */
  export type brands$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    where?: productsWhereInput
    orderBy?: productsOrderByWithRelationInput | productsOrderByWithRelationInput[]
    cursor?: productsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductsScalarFieldEnum | ProductsScalarFieldEnum[]
  }

  /**
   * brands without action
   */
  export type brandsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the brands
     */
    select?: brandsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the brands
     */
    omit?: brandsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: brandsInclude<ExtArgs> | null
  }


  /**
   * Model categories
   */

  export type AggregateCategories = {
    _count: CategoriesCountAggregateOutputType | null
    _avg: CategoriesAvgAggregateOutputType | null
    _sum: CategoriesSumAggregateOutputType | null
    _min: CategoriesMinAggregateOutputType | null
    _max: CategoriesMaxAggregateOutputType | null
  }

  export type CategoriesAvgAggregateOutputType = {
    id: number | null
    parent_id: number | null
  }

  export type CategoriesSumAggregateOutputType = {
    id: number | null
    parent_id: number | null
  }

  export type CategoriesMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    parent_id: number | null
    image_url: string | null
  }

  export type CategoriesMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    parent_id: number | null
    image_url: string | null
  }

  export type CategoriesCountAggregateOutputType = {
    id: number
    name: number
    description: number
    parent_id: number
    image_url: number
    _all: number
  }


  export type CategoriesAvgAggregateInputType = {
    id?: true
    parent_id?: true
  }

  export type CategoriesSumAggregateInputType = {
    id?: true
    parent_id?: true
  }

  export type CategoriesMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    parent_id?: true
    image_url?: true
  }

  export type CategoriesMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    parent_id?: true
    image_url?: true
  }

  export type CategoriesCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    parent_id?: true
    image_url?: true
    _all?: true
  }

  export type CategoriesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which categories to aggregate.
     */
    where?: categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categories to fetch.
     */
    orderBy?: categoriesOrderByWithRelationInput | categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned categories
    **/
    _count?: true | CategoriesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CategoriesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CategoriesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoriesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoriesMaxAggregateInputType
  }

  export type GetCategoriesAggregateType<T extends CategoriesAggregateArgs> = {
        [P in keyof T & keyof AggregateCategories]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategories[P]>
      : GetScalarType<T[P], AggregateCategories[P]>
  }




  export type categoriesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: categoriesWhereInput
    orderBy?: categoriesOrderByWithAggregationInput | categoriesOrderByWithAggregationInput[]
    by: CategoriesScalarFieldEnum[] | CategoriesScalarFieldEnum
    having?: categoriesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoriesCountAggregateInputType | true
    _avg?: CategoriesAvgAggregateInputType
    _sum?: CategoriesSumAggregateInputType
    _min?: CategoriesMinAggregateInputType
    _max?: CategoriesMaxAggregateInputType
  }

  export type CategoriesGroupByOutputType = {
    id: number
    name: string
    description: string | null
    parent_id: number | null
    image_url: string | null
    _count: CategoriesCountAggregateOutputType | null
    _avg: CategoriesAvgAggregateOutputType | null
    _sum: CategoriesSumAggregateOutputType | null
    _min: CategoriesMinAggregateOutputType | null
    _max: CategoriesMaxAggregateOutputType | null
  }

  type GetCategoriesGroupByPayload<T extends categoriesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoriesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoriesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoriesGroupByOutputType[P]>
            : GetScalarType<T[P], CategoriesGroupByOutputType[P]>
        }
      >
    >


  export type categoriesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    parent_id?: boolean
    image_url?: boolean
  }, ExtArgs["result"]["categories"]>



  export type categoriesSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    parent_id?: boolean
    image_url?: boolean
  }

  export type categoriesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "parent_id" | "image_url", ExtArgs["result"]["categories"]>

  export type $categoriesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "categories"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      description: string | null
      parent_id: number | null
      image_url: string | null
    }, ExtArgs["result"]["categories"]>
    composites: {}
  }

  type categoriesGetPayload<S extends boolean | null | undefined | categoriesDefaultArgs> = $Result.GetResult<Prisma.$categoriesPayload, S>

  type categoriesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<categoriesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CategoriesCountAggregateInputType | true
    }

  export interface categoriesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['categories'], meta: { name: 'categories' } }
    /**
     * Find zero or one Categories that matches the filter.
     * @param {categoriesFindUniqueArgs} args - Arguments to find a Categories
     * @example
     * // Get one Categories
     * const categories = await prisma.categories.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends categoriesFindUniqueArgs>(args: SelectSubset<T, categoriesFindUniqueArgs<ExtArgs>>): Prisma__categoriesClient<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Categories that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {categoriesFindUniqueOrThrowArgs} args - Arguments to find a Categories
     * @example
     * // Get one Categories
     * const categories = await prisma.categories.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends categoriesFindUniqueOrThrowArgs>(args: SelectSubset<T, categoriesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__categoriesClient<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriesFindFirstArgs} args - Arguments to find a Categories
     * @example
     * // Get one Categories
     * const categories = await prisma.categories.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends categoriesFindFirstArgs>(args?: SelectSubset<T, categoriesFindFirstArgs<ExtArgs>>): Prisma__categoriesClient<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Categories that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriesFindFirstOrThrowArgs} args - Arguments to find a Categories
     * @example
     * // Get one Categories
     * const categories = await prisma.categories.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends categoriesFindFirstOrThrowArgs>(args?: SelectSubset<T, categoriesFindFirstOrThrowArgs<ExtArgs>>): Prisma__categoriesClient<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categories
     * const categories = await prisma.categories.findMany()
     * 
     * // Get first 10 Categories
     * const categories = await prisma.categories.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoriesWithIdOnly = await prisma.categories.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends categoriesFindManyArgs>(args?: SelectSubset<T, categoriesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Categories.
     * @param {categoriesCreateArgs} args - Arguments to create a Categories.
     * @example
     * // Create one Categories
     * const Categories = await prisma.categories.create({
     *   data: {
     *     // ... data to create a Categories
     *   }
     * })
     * 
     */
    create<T extends categoriesCreateArgs>(args: SelectSubset<T, categoriesCreateArgs<ExtArgs>>): Prisma__categoriesClient<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Categories.
     * @param {categoriesCreateManyArgs} args - Arguments to create many Categories.
     * @example
     * // Create many Categories
     * const categories = await prisma.categories.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends categoriesCreateManyArgs>(args?: SelectSubset<T, categoriesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Categories.
     * @param {categoriesDeleteArgs} args - Arguments to delete one Categories.
     * @example
     * // Delete one Categories
     * const Categories = await prisma.categories.delete({
     *   where: {
     *     // ... filter to delete one Categories
     *   }
     * })
     * 
     */
    delete<T extends categoriesDeleteArgs>(args: SelectSubset<T, categoriesDeleteArgs<ExtArgs>>): Prisma__categoriesClient<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Categories.
     * @param {categoriesUpdateArgs} args - Arguments to update one Categories.
     * @example
     * // Update one Categories
     * const categories = await prisma.categories.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends categoriesUpdateArgs>(args: SelectSubset<T, categoriesUpdateArgs<ExtArgs>>): Prisma__categoriesClient<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Categories.
     * @param {categoriesDeleteManyArgs} args - Arguments to filter Categories to delete.
     * @example
     * // Delete a few Categories
     * const { count } = await prisma.categories.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends categoriesDeleteManyArgs>(args?: SelectSubset<T, categoriesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categories
     * const categories = await prisma.categories.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends categoriesUpdateManyArgs>(args: SelectSubset<T, categoriesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Categories.
     * @param {categoriesUpsertArgs} args - Arguments to update or create a Categories.
     * @example
     * // Update or create a Categories
     * const categories = await prisma.categories.upsert({
     *   create: {
     *     // ... data to create a Categories
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Categories we want to update
     *   }
     * })
     */
    upsert<T extends categoriesUpsertArgs>(args: SelectSubset<T, categoriesUpsertArgs<ExtArgs>>): Prisma__categoriesClient<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriesCountArgs} args - Arguments to filter Categories to count.
     * @example
     * // Count the number of Categories
     * const count = await prisma.categories.count({
     *   where: {
     *     // ... the filter for the Categories we want to count
     *   }
     * })
    **/
    count<T extends categoriesCountArgs>(
      args?: Subset<T, categoriesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoriesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoriesAggregateArgs>(args: Subset<T, CategoriesAggregateArgs>): Prisma.PrismaPromise<GetCategoriesAggregateType<T>>

    /**
     * Group by Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends categoriesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: categoriesGroupByArgs['orderBy'] }
        : { orderBy?: categoriesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, categoriesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoriesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the categories model
   */
  readonly fields: categoriesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for categories.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__categoriesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the categories model
   */
  interface categoriesFieldRefs {
    readonly id: FieldRef<"categories", 'Int'>
    readonly name: FieldRef<"categories", 'String'>
    readonly description: FieldRef<"categories", 'String'>
    readonly parent_id: FieldRef<"categories", 'Int'>
    readonly image_url: FieldRef<"categories", 'String'>
  }
    

  // Custom InputTypes
  /**
   * categories findUnique
   */
  export type categoriesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Filter, which categories to fetch.
     */
    where: categoriesWhereUniqueInput
  }

  /**
   * categories findUniqueOrThrow
   */
  export type categoriesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Filter, which categories to fetch.
     */
    where: categoriesWhereUniqueInput
  }

  /**
   * categories findFirst
   */
  export type categoriesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Filter, which categories to fetch.
     */
    where?: categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categories to fetch.
     */
    orderBy?: categoriesOrderByWithRelationInput | categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for categories.
     */
    cursor?: categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of categories.
     */
    distinct?: CategoriesScalarFieldEnum | CategoriesScalarFieldEnum[]
  }

  /**
   * categories findFirstOrThrow
   */
  export type categoriesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Filter, which categories to fetch.
     */
    where?: categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categories to fetch.
     */
    orderBy?: categoriesOrderByWithRelationInput | categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for categories.
     */
    cursor?: categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of categories.
     */
    distinct?: CategoriesScalarFieldEnum | CategoriesScalarFieldEnum[]
  }

  /**
   * categories findMany
   */
  export type categoriesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Filter, which categories to fetch.
     */
    where?: categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categories to fetch.
     */
    orderBy?: categoriesOrderByWithRelationInput | categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing categories.
     */
    cursor?: categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categories.
     */
    skip?: number
    distinct?: CategoriesScalarFieldEnum | CategoriesScalarFieldEnum[]
  }

  /**
   * categories create
   */
  export type categoriesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * The data needed to create a categories.
     */
    data: XOR<categoriesCreateInput, categoriesUncheckedCreateInput>
  }

  /**
   * categories createMany
   */
  export type categoriesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many categories.
     */
    data: categoriesCreateManyInput | categoriesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * categories update
   */
  export type categoriesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * The data needed to update a categories.
     */
    data: XOR<categoriesUpdateInput, categoriesUncheckedUpdateInput>
    /**
     * Choose, which categories to update.
     */
    where: categoriesWhereUniqueInput
  }

  /**
   * categories updateMany
   */
  export type categoriesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update categories.
     */
    data: XOR<categoriesUpdateManyMutationInput, categoriesUncheckedUpdateManyInput>
    /**
     * Filter which categories to update
     */
    where?: categoriesWhereInput
    /**
     * Limit how many categories to update.
     */
    limit?: number
  }

  /**
   * categories upsert
   */
  export type categoriesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * The filter to search for the categories to update in case it exists.
     */
    where: categoriesWhereUniqueInput
    /**
     * In case the categories found by the `where` argument doesn't exist, create a new categories with this data.
     */
    create: XOR<categoriesCreateInput, categoriesUncheckedCreateInput>
    /**
     * In case the categories was found with the provided `where` argument, update it with this data.
     */
    update: XOR<categoriesUpdateInput, categoriesUncheckedUpdateInput>
  }

  /**
   * categories delete
   */
  export type categoriesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Filter which categories to delete.
     */
    where: categoriesWhereUniqueInput
  }

  /**
   * categories deleteMany
   */
  export type categoriesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which categories to delete
     */
    where?: categoriesWhereInput
    /**
     * Limit how many categories to delete.
     */
    limit?: number
  }

  /**
   * categories without action
   */
  export type categoriesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
  }


  /**
   * Model customers
   */

  export type AggregateCustomers = {
    _count: CustomersCountAggregateOutputType | null
    _avg: CustomersAvgAggregateOutputType | null
    _sum: CustomersSumAggregateOutputType | null
    _min: CustomersMinAggregateOutputType | null
    _max: CustomersMaxAggregateOutputType | null
  }

  export type CustomersAvgAggregateOutputType = {
    id: number | null
    address_id: number | null
  }

  export type CustomersSumAggregateOutputType = {
    id: number | null
    address_id: number | null
  }

  export type CustomersMinAggregateOutputType = {
    id: number | null
    username: string | null
    email: string | null
    password: string | null
    address_id: number | null
    is_active: boolean | null
    created_at: Date | null
    updated_at: Date | null
    lastname: string | null
    photo: string | null
    name: string | null
  }

  export type CustomersMaxAggregateOutputType = {
    id: number | null
    username: string | null
    email: string | null
    password: string | null
    address_id: number | null
    is_active: boolean | null
    created_at: Date | null
    updated_at: Date | null
    lastname: string | null
    photo: string | null
    name: string | null
  }

  export type CustomersCountAggregateOutputType = {
    id: number
    username: number
    email: number
    password: number
    address_id: number
    is_active: number
    created_at: number
    updated_at: number
    lastname: number
    photo: number
    name: number
    _all: number
  }


  export type CustomersAvgAggregateInputType = {
    id?: true
    address_id?: true
  }

  export type CustomersSumAggregateInputType = {
    id?: true
    address_id?: true
  }

  export type CustomersMinAggregateInputType = {
    id?: true
    username?: true
    email?: true
    password?: true
    address_id?: true
    is_active?: true
    created_at?: true
    updated_at?: true
    lastname?: true
    photo?: true
    name?: true
  }

  export type CustomersMaxAggregateInputType = {
    id?: true
    username?: true
    email?: true
    password?: true
    address_id?: true
    is_active?: true
    created_at?: true
    updated_at?: true
    lastname?: true
    photo?: true
    name?: true
  }

  export type CustomersCountAggregateInputType = {
    id?: true
    username?: true
    email?: true
    password?: true
    address_id?: true
    is_active?: true
    created_at?: true
    updated_at?: true
    lastname?: true
    photo?: true
    name?: true
    _all?: true
  }

  export type CustomersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which customers to aggregate.
     */
    where?: customersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of customers to fetch.
     */
    orderBy?: customersOrderByWithRelationInput | customersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: customersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` customers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned customers
    **/
    _count?: true | CustomersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CustomersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CustomersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CustomersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CustomersMaxAggregateInputType
  }

  export type GetCustomersAggregateType<T extends CustomersAggregateArgs> = {
        [P in keyof T & keyof AggregateCustomers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCustomers[P]>
      : GetScalarType<T[P], AggregateCustomers[P]>
  }




  export type customersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: customersWhereInput
    orderBy?: customersOrderByWithAggregationInput | customersOrderByWithAggregationInput[]
    by: CustomersScalarFieldEnum[] | CustomersScalarFieldEnum
    having?: customersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CustomersCountAggregateInputType | true
    _avg?: CustomersAvgAggregateInputType
    _sum?: CustomersSumAggregateInputType
    _min?: CustomersMinAggregateInputType
    _max?: CustomersMaxAggregateInputType
  }

  export type CustomersGroupByOutputType = {
    id: number
    username: string
    email: string
    password: string
    address_id: number | null
    is_active: boolean | null
    created_at: Date
    updated_at: Date
    lastname: string
    photo: string | null
    name: string | null
    _count: CustomersCountAggregateOutputType | null
    _avg: CustomersAvgAggregateOutputType | null
    _sum: CustomersSumAggregateOutputType | null
    _min: CustomersMinAggregateOutputType | null
    _max: CustomersMaxAggregateOutputType | null
  }

  type GetCustomersGroupByPayload<T extends customersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CustomersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CustomersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CustomersGroupByOutputType[P]>
            : GetScalarType<T[P], CustomersGroupByOutputType[P]>
        }
      >
    >


  export type customersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    email?: boolean
    password?: boolean
    address_id?: boolean
    is_active?: boolean
    created_at?: boolean
    updated_at?: boolean
    lastname?: boolean
    photo?: boolean
    name?: boolean
    customers_addresses?: boolean | customers$customers_addressesArgs<ExtArgs>
    variant_ratings?: boolean | customers$variant_ratingsArgs<ExtArgs>
    _count?: boolean | CustomersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["customers"]>



  export type customersSelectScalar = {
    id?: boolean
    username?: boolean
    email?: boolean
    password?: boolean
    address_id?: boolean
    is_active?: boolean
    created_at?: boolean
    updated_at?: boolean
    lastname?: boolean
    photo?: boolean
    name?: boolean
  }

  export type customersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "username" | "email" | "password" | "address_id" | "is_active" | "created_at" | "updated_at" | "lastname" | "photo" | "name", ExtArgs["result"]["customers"]>
  export type customersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customers_addresses?: boolean | customers$customers_addressesArgs<ExtArgs>
    variant_ratings?: boolean | customers$variant_ratingsArgs<ExtArgs>
    _count?: boolean | CustomersCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $customersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "customers"
    objects: {
      customers_addresses: Prisma.$customers_addressesPayload<ExtArgs>[]
      variant_ratings: Prisma.$variant_ratingsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      username: string
      email: string
      password: string
      address_id: number | null
      is_active: boolean | null
      created_at: Date
      updated_at: Date
      lastname: string
      photo: string | null
      name: string | null
    }, ExtArgs["result"]["customers"]>
    composites: {}
  }

  type customersGetPayload<S extends boolean | null | undefined | customersDefaultArgs> = $Result.GetResult<Prisma.$customersPayload, S>

  type customersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<customersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CustomersCountAggregateInputType | true
    }

  export interface customersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['customers'], meta: { name: 'customers' } }
    /**
     * Find zero or one Customers that matches the filter.
     * @param {customersFindUniqueArgs} args - Arguments to find a Customers
     * @example
     * // Get one Customers
     * const customers = await prisma.customers.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends customersFindUniqueArgs>(args: SelectSubset<T, customersFindUniqueArgs<ExtArgs>>): Prisma__customersClient<$Result.GetResult<Prisma.$customersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Customers that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {customersFindUniqueOrThrowArgs} args - Arguments to find a Customers
     * @example
     * // Get one Customers
     * const customers = await prisma.customers.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends customersFindUniqueOrThrowArgs>(args: SelectSubset<T, customersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__customersClient<$Result.GetResult<Prisma.$customersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Customers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {customersFindFirstArgs} args - Arguments to find a Customers
     * @example
     * // Get one Customers
     * const customers = await prisma.customers.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends customersFindFirstArgs>(args?: SelectSubset<T, customersFindFirstArgs<ExtArgs>>): Prisma__customersClient<$Result.GetResult<Prisma.$customersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Customers that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {customersFindFirstOrThrowArgs} args - Arguments to find a Customers
     * @example
     * // Get one Customers
     * const customers = await prisma.customers.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends customersFindFirstOrThrowArgs>(args?: SelectSubset<T, customersFindFirstOrThrowArgs<ExtArgs>>): Prisma__customersClient<$Result.GetResult<Prisma.$customersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Customers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {customersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Customers
     * const customers = await prisma.customers.findMany()
     * 
     * // Get first 10 Customers
     * const customers = await prisma.customers.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const customersWithIdOnly = await prisma.customers.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends customersFindManyArgs>(args?: SelectSubset<T, customersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$customersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Customers.
     * @param {customersCreateArgs} args - Arguments to create a Customers.
     * @example
     * // Create one Customers
     * const Customers = await prisma.customers.create({
     *   data: {
     *     // ... data to create a Customers
     *   }
     * })
     * 
     */
    create<T extends customersCreateArgs>(args: SelectSubset<T, customersCreateArgs<ExtArgs>>): Prisma__customersClient<$Result.GetResult<Prisma.$customersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Customers.
     * @param {customersCreateManyArgs} args - Arguments to create many Customers.
     * @example
     * // Create many Customers
     * const customers = await prisma.customers.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends customersCreateManyArgs>(args?: SelectSubset<T, customersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Customers.
     * @param {customersDeleteArgs} args - Arguments to delete one Customers.
     * @example
     * // Delete one Customers
     * const Customers = await prisma.customers.delete({
     *   where: {
     *     // ... filter to delete one Customers
     *   }
     * })
     * 
     */
    delete<T extends customersDeleteArgs>(args: SelectSubset<T, customersDeleteArgs<ExtArgs>>): Prisma__customersClient<$Result.GetResult<Prisma.$customersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Customers.
     * @param {customersUpdateArgs} args - Arguments to update one Customers.
     * @example
     * // Update one Customers
     * const customers = await prisma.customers.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends customersUpdateArgs>(args: SelectSubset<T, customersUpdateArgs<ExtArgs>>): Prisma__customersClient<$Result.GetResult<Prisma.$customersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Customers.
     * @param {customersDeleteManyArgs} args - Arguments to filter Customers to delete.
     * @example
     * // Delete a few Customers
     * const { count } = await prisma.customers.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends customersDeleteManyArgs>(args?: SelectSubset<T, customersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Customers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {customersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Customers
     * const customers = await prisma.customers.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends customersUpdateManyArgs>(args: SelectSubset<T, customersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Customers.
     * @param {customersUpsertArgs} args - Arguments to update or create a Customers.
     * @example
     * // Update or create a Customers
     * const customers = await prisma.customers.upsert({
     *   create: {
     *     // ... data to create a Customers
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Customers we want to update
     *   }
     * })
     */
    upsert<T extends customersUpsertArgs>(args: SelectSubset<T, customersUpsertArgs<ExtArgs>>): Prisma__customersClient<$Result.GetResult<Prisma.$customersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Customers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {customersCountArgs} args - Arguments to filter Customers to count.
     * @example
     * // Count the number of Customers
     * const count = await prisma.customers.count({
     *   where: {
     *     // ... the filter for the Customers we want to count
     *   }
     * })
    **/
    count<T extends customersCountArgs>(
      args?: Subset<T, customersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CustomersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Customers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CustomersAggregateArgs>(args: Subset<T, CustomersAggregateArgs>): Prisma.PrismaPromise<GetCustomersAggregateType<T>>

    /**
     * Group by Customers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {customersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends customersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: customersGroupByArgs['orderBy'] }
        : { orderBy?: customersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, customersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCustomersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the customers model
   */
  readonly fields: customersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for customers.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__customersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    customers_addresses<T extends customers$customers_addressesArgs<ExtArgs> = {}>(args?: Subset<T, customers$customers_addressesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$customers_addressesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    variant_ratings<T extends customers$variant_ratingsArgs<ExtArgs> = {}>(args?: Subset<T, customers$variant_ratingsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$variant_ratingsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the customers model
   */
  interface customersFieldRefs {
    readonly id: FieldRef<"customers", 'Int'>
    readonly username: FieldRef<"customers", 'String'>
    readonly email: FieldRef<"customers", 'String'>
    readonly password: FieldRef<"customers", 'String'>
    readonly address_id: FieldRef<"customers", 'Int'>
    readonly is_active: FieldRef<"customers", 'Boolean'>
    readonly created_at: FieldRef<"customers", 'DateTime'>
    readonly updated_at: FieldRef<"customers", 'DateTime'>
    readonly lastname: FieldRef<"customers", 'String'>
    readonly photo: FieldRef<"customers", 'String'>
    readonly name: FieldRef<"customers", 'String'>
  }
    

  // Custom InputTypes
  /**
   * customers findUnique
   */
  export type customersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customers
     */
    select?: customersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customers
     */
    omit?: customersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customersInclude<ExtArgs> | null
    /**
     * Filter, which customers to fetch.
     */
    where: customersWhereUniqueInput
  }

  /**
   * customers findUniqueOrThrow
   */
  export type customersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customers
     */
    select?: customersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customers
     */
    omit?: customersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customersInclude<ExtArgs> | null
    /**
     * Filter, which customers to fetch.
     */
    where: customersWhereUniqueInput
  }

  /**
   * customers findFirst
   */
  export type customersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customers
     */
    select?: customersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customers
     */
    omit?: customersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customersInclude<ExtArgs> | null
    /**
     * Filter, which customers to fetch.
     */
    where?: customersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of customers to fetch.
     */
    orderBy?: customersOrderByWithRelationInput | customersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for customers.
     */
    cursor?: customersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` customers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of customers.
     */
    distinct?: CustomersScalarFieldEnum | CustomersScalarFieldEnum[]
  }

  /**
   * customers findFirstOrThrow
   */
  export type customersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customers
     */
    select?: customersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customers
     */
    omit?: customersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customersInclude<ExtArgs> | null
    /**
     * Filter, which customers to fetch.
     */
    where?: customersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of customers to fetch.
     */
    orderBy?: customersOrderByWithRelationInput | customersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for customers.
     */
    cursor?: customersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` customers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of customers.
     */
    distinct?: CustomersScalarFieldEnum | CustomersScalarFieldEnum[]
  }

  /**
   * customers findMany
   */
  export type customersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customers
     */
    select?: customersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customers
     */
    omit?: customersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customersInclude<ExtArgs> | null
    /**
     * Filter, which customers to fetch.
     */
    where?: customersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of customers to fetch.
     */
    orderBy?: customersOrderByWithRelationInput | customersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing customers.
     */
    cursor?: customersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` customers.
     */
    skip?: number
    distinct?: CustomersScalarFieldEnum | CustomersScalarFieldEnum[]
  }

  /**
   * customers create
   */
  export type customersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customers
     */
    select?: customersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customers
     */
    omit?: customersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customersInclude<ExtArgs> | null
    /**
     * The data needed to create a customers.
     */
    data: XOR<customersCreateInput, customersUncheckedCreateInput>
  }

  /**
   * customers createMany
   */
  export type customersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many customers.
     */
    data: customersCreateManyInput | customersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * customers update
   */
  export type customersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customers
     */
    select?: customersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customers
     */
    omit?: customersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customersInclude<ExtArgs> | null
    /**
     * The data needed to update a customers.
     */
    data: XOR<customersUpdateInput, customersUncheckedUpdateInput>
    /**
     * Choose, which customers to update.
     */
    where: customersWhereUniqueInput
  }

  /**
   * customers updateMany
   */
  export type customersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update customers.
     */
    data: XOR<customersUpdateManyMutationInput, customersUncheckedUpdateManyInput>
    /**
     * Filter which customers to update
     */
    where?: customersWhereInput
    /**
     * Limit how many customers to update.
     */
    limit?: number
  }

  /**
   * customers upsert
   */
  export type customersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customers
     */
    select?: customersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customers
     */
    omit?: customersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customersInclude<ExtArgs> | null
    /**
     * The filter to search for the customers to update in case it exists.
     */
    where: customersWhereUniqueInput
    /**
     * In case the customers found by the `where` argument doesn't exist, create a new customers with this data.
     */
    create: XOR<customersCreateInput, customersUncheckedCreateInput>
    /**
     * In case the customers was found with the provided `where` argument, update it with this data.
     */
    update: XOR<customersUpdateInput, customersUncheckedUpdateInput>
  }

  /**
   * customers delete
   */
  export type customersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customers
     */
    select?: customersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customers
     */
    omit?: customersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customersInclude<ExtArgs> | null
    /**
     * Filter which customers to delete.
     */
    where: customersWhereUniqueInput
  }

  /**
   * customers deleteMany
   */
  export type customersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which customers to delete
     */
    where?: customersWhereInput
    /**
     * Limit how many customers to delete.
     */
    limit?: number
  }

  /**
   * customers.customers_addresses
   */
  export type customers$customers_addressesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customers_addresses
     */
    select?: customers_addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customers_addresses
     */
    omit?: customers_addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customers_addressesInclude<ExtArgs> | null
    where?: customers_addressesWhereInput
    orderBy?: customers_addressesOrderByWithRelationInput | customers_addressesOrderByWithRelationInput[]
    cursor?: customers_addressesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Customers_addressesScalarFieldEnum | Customers_addressesScalarFieldEnum[]
  }

  /**
   * customers.variant_ratings
   */
  export type customers$variant_ratingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_ratings
     */
    select?: variant_ratingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_ratings
     */
    omit?: variant_ratingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_ratingsInclude<ExtArgs> | null
    where?: variant_ratingsWhereInput
    orderBy?: variant_ratingsOrderByWithRelationInput | variant_ratingsOrderByWithRelationInput[]
    cursor?: variant_ratingsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Variant_ratingsScalarFieldEnum | Variant_ratingsScalarFieldEnum[]
  }

  /**
   * customers without action
   */
  export type customersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customers
     */
    select?: customersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customers
     */
    omit?: customersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customersInclude<ExtArgs> | null
  }


  /**
   * Model customers_addresses
   */

  export type AggregateCustomers_addresses = {
    _count: Customers_addressesCountAggregateOutputType | null
    _avg: Customers_addressesAvgAggregateOutputType | null
    _sum: Customers_addressesSumAggregateOutputType | null
    _min: Customers_addressesMinAggregateOutputType | null
    _max: Customers_addressesMaxAggregateOutputType | null
  }

  export type Customers_addressesAvgAggregateOutputType = {
    id: number | null
    id_customer: number | null
  }

  export type Customers_addressesSumAggregateOutputType = {
    id: number | null
    id_customer: number | null
  }

  export type Customers_addressesMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    id_customer: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Customers_addressesMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    id_customer: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Customers_addressesCountAggregateOutputType = {
    id: number
    name: number
    description: number
    id_customer: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Customers_addressesAvgAggregateInputType = {
    id?: true
    id_customer?: true
  }

  export type Customers_addressesSumAggregateInputType = {
    id?: true
    id_customer?: true
  }

  export type Customers_addressesMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    id_customer?: true
    created_at?: true
    updated_at?: true
  }

  export type Customers_addressesMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    id_customer?: true
    created_at?: true
    updated_at?: true
  }

  export type Customers_addressesCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    id_customer?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Customers_addressesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which customers_addresses to aggregate.
     */
    where?: customers_addressesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of customers_addresses to fetch.
     */
    orderBy?: customers_addressesOrderByWithRelationInput | customers_addressesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: customers_addressesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` customers_addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` customers_addresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned customers_addresses
    **/
    _count?: true | Customers_addressesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Customers_addressesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Customers_addressesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Customers_addressesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Customers_addressesMaxAggregateInputType
  }

  export type GetCustomers_addressesAggregateType<T extends Customers_addressesAggregateArgs> = {
        [P in keyof T & keyof AggregateCustomers_addresses]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCustomers_addresses[P]>
      : GetScalarType<T[P], AggregateCustomers_addresses[P]>
  }




  export type customers_addressesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: customers_addressesWhereInput
    orderBy?: customers_addressesOrderByWithAggregationInput | customers_addressesOrderByWithAggregationInput[]
    by: Customers_addressesScalarFieldEnum[] | Customers_addressesScalarFieldEnum
    having?: customers_addressesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Customers_addressesCountAggregateInputType | true
    _avg?: Customers_addressesAvgAggregateInputType
    _sum?: Customers_addressesSumAggregateInputType
    _min?: Customers_addressesMinAggregateInputType
    _max?: Customers_addressesMaxAggregateInputType
  }

  export type Customers_addressesGroupByOutputType = {
    id: number
    name: string | null
    description: string | null
    id_customer: number | null
    created_at: Date
    updated_at: Date
    _count: Customers_addressesCountAggregateOutputType | null
    _avg: Customers_addressesAvgAggregateOutputType | null
    _sum: Customers_addressesSumAggregateOutputType | null
    _min: Customers_addressesMinAggregateOutputType | null
    _max: Customers_addressesMaxAggregateOutputType | null
  }

  type GetCustomers_addressesGroupByPayload<T extends customers_addressesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Customers_addressesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Customers_addressesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Customers_addressesGroupByOutputType[P]>
            : GetScalarType<T[P], Customers_addressesGroupByOutputType[P]>
        }
      >
    >


  export type customers_addressesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    id_customer?: boolean
    created_at?: boolean
    updated_at?: boolean
    customers?: boolean | customers_addresses$customersArgs<ExtArgs>
  }, ExtArgs["result"]["customers_addresses"]>



  export type customers_addressesSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    id_customer?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type customers_addressesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "id_customer" | "created_at" | "updated_at", ExtArgs["result"]["customers_addresses"]>
  export type customers_addressesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customers?: boolean | customers_addresses$customersArgs<ExtArgs>
  }

  export type $customers_addressesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "customers_addresses"
    objects: {
      customers: Prisma.$customersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string | null
      description: string | null
      id_customer: number | null
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["customers_addresses"]>
    composites: {}
  }

  type customers_addressesGetPayload<S extends boolean | null | undefined | customers_addressesDefaultArgs> = $Result.GetResult<Prisma.$customers_addressesPayload, S>

  type customers_addressesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<customers_addressesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Customers_addressesCountAggregateInputType | true
    }

  export interface customers_addressesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['customers_addresses'], meta: { name: 'customers_addresses' } }
    /**
     * Find zero or one Customers_addresses that matches the filter.
     * @param {customers_addressesFindUniqueArgs} args - Arguments to find a Customers_addresses
     * @example
     * // Get one Customers_addresses
     * const customers_addresses = await prisma.customers_addresses.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends customers_addressesFindUniqueArgs>(args: SelectSubset<T, customers_addressesFindUniqueArgs<ExtArgs>>): Prisma__customers_addressesClient<$Result.GetResult<Prisma.$customers_addressesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Customers_addresses that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {customers_addressesFindUniqueOrThrowArgs} args - Arguments to find a Customers_addresses
     * @example
     * // Get one Customers_addresses
     * const customers_addresses = await prisma.customers_addresses.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends customers_addressesFindUniqueOrThrowArgs>(args: SelectSubset<T, customers_addressesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__customers_addressesClient<$Result.GetResult<Prisma.$customers_addressesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Customers_addresses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {customers_addressesFindFirstArgs} args - Arguments to find a Customers_addresses
     * @example
     * // Get one Customers_addresses
     * const customers_addresses = await prisma.customers_addresses.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends customers_addressesFindFirstArgs>(args?: SelectSubset<T, customers_addressesFindFirstArgs<ExtArgs>>): Prisma__customers_addressesClient<$Result.GetResult<Prisma.$customers_addressesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Customers_addresses that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {customers_addressesFindFirstOrThrowArgs} args - Arguments to find a Customers_addresses
     * @example
     * // Get one Customers_addresses
     * const customers_addresses = await prisma.customers_addresses.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends customers_addressesFindFirstOrThrowArgs>(args?: SelectSubset<T, customers_addressesFindFirstOrThrowArgs<ExtArgs>>): Prisma__customers_addressesClient<$Result.GetResult<Prisma.$customers_addressesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Customers_addresses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {customers_addressesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Customers_addresses
     * const customers_addresses = await prisma.customers_addresses.findMany()
     * 
     * // Get first 10 Customers_addresses
     * const customers_addresses = await prisma.customers_addresses.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const customers_addressesWithIdOnly = await prisma.customers_addresses.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends customers_addressesFindManyArgs>(args?: SelectSubset<T, customers_addressesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$customers_addressesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Customers_addresses.
     * @param {customers_addressesCreateArgs} args - Arguments to create a Customers_addresses.
     * @example
     * // Create one Customers_addresses
     * const Customers_addresses = await prisma.customers_addresses.create({
     *   data: {
     *     // ... data to create a Customers_addresses
     *   }
     * })
     * 
     */
    create<T extends customers_addressesCreateArgs>(args: SelectSubset<T, customers_addressesCreateArgs<ExtArgs>>): Prisma__customers_addressesClient<$Result.GetResult<Prisma.$customers_addressesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Customers_addresses.
     * @param {customers_addressesCreateManyArgs} args - Arguments to create many Customers_addresses.
     * @example
     * // Create many Customers_addresses
     * const customers_addresses = await prisma.customers_addresses.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends customers_addressesCreateManyArgs>(args?: SelectSubset<T, customers_addressesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Customers_addresses.
     * @param {customers_addressesDeleteArgs} args - Arguments to delete one Customers_addresses.
     * @example
     * // Delete one Customers_addresses
     * const Customers_addresses = await prisma.customers_addresses.delete({
     *   where: {
     *     // ... filter to delete one Customers_addresses
     *   }
     * })
     * 
     */
    delete<T extends customers_addressesDeleteArgs>(args: SelectSubset<T, customers_addressesDeleteArgs<ExtArgs>>): Prisma__customers_addressesClient<$Result.GetResult<Prisma.$customers_addressesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Customers_addresses.
     * @param {customers_addressesUpdateArgs} args - Arguments to update one Customers_addresses.
     * @example
     * // Update one Customers_addresses
     * const customers_addresses = await prisma.customers_addresses.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends customers_addressesUpdateArgs>(args: SelectSubset<T, customers_addressesUpdateArgs<ExtArgs>>): Prisma__customers_addressesClient<$Result.GetResult<Prisma.$customers_addressesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Customers_addresses.
     * @param {customers_addressesDeleteManyArgs} args - Arguments to filter Customers_addresses to delete.
     * @example
     * // Delete a few Customers_addresses
     * const { count } = await prisma.customers_addresses.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends customers_addressesDeleteManyArgs>(args?: SelectSubset<T, customers_addressesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Customers_addresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {customers_addressesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Customers_addresses
     * const customers_addresses = await prisma.customers_addresses.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends customers_addressesUpdateManyArgs>(args: SelectSubset<T, customers_addressesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Customers_addresses.
     * @param {customers_addressesUpsertArgs} args - Arguments to update or create a Customers_addresses.
     * @example
     * // Update or create a Customers_addresses
     * const customers_addresses = await prisma.customers_addresses.upsert({
     *   create: {
     *     // ... data to create a Customers_addresses
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Customers_addresses we want to update
     *   }
     * })
     */
    upsert<T extends customers_addressesUpsertArgs>(args: SelectSubset<T, customers_addressesUpsertArgs<ExtArgs>>): Prisma__customers_addressesClient<$Result.GetResult<Prisma.$customers_addressesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Customers_addresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {customers_addressesCountArgs} args - Arguments to filter Customers_addresses to count.
     * @example
     * // Count the number of Customers_addresses
     * const count = await prisma.customers_addresses.count({
     *   where: {
     *     // ... the filter for the Customers_addresses we want to count
     *   }
     * })
    **/
    count<T extends customers_addressesCountArgs>(
      args?: Subset<T, customers_addressesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Customers_addressesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Customers_addresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Customers_addressesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Customers_addressesAggregateArgs>(args: Subset<T, Customers_addressesAggregateArgs>): Prisma.PrismaPromise<GetCustomers_addressesAggregateType<T>>

    /**
     * Group by Customers_addresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {customers_addressesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends customers_addressesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: customers_addressesGroupByArgs['orderBy'] }
        : { orderBy?: customers_addressesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, customers_addressesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCustomers_addressesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the customers_addresses model
   */
  readonly fields: customers_addressesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for customers_addresses.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__customers_addressesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    customers<T extends customers_addresses$customersArgs<ExtArgs> = {}>(args?: Subset<T, customers_addresses$customersArgs<ExtArgs>>): Prisma__customersClient<$Result.GetResult<Prisma.$customersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the customers_addresses model
   */
  interface customers_addressesFieldRefs {
    readonly id: FieldRef<"customers_addresses", 'Int'>
    readonly name: FieldRef<"customers_addresses", 'String'>
    readonly description: FieldRef<"customers_addresses", 'String'>
    readonly id_customer: FieldRef<"customers_addresses", 'Int'>
    readonly created_at: FieldRef<"customers_addresses", 'DateTime'>
    readonly updated_at: FieldRef<"customers_addresses", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * customers_addresses findUnique
   */
  export type customers_addressesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customers_addresses
     */
    select?: customers_addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customers_addresses
     */
    omit?: customers_addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customers_addressesInclude<ExtArgs> | null
    /**
     * Filter, which customers_addresses to fetch.
     */
    where: customers_addressesWhereUniqueInput
  }

  /**
   * customers_addresses findUniqueOrThrow
   */
  export type customers_addressesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customers_addresses
     */
    select?: customers_addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customers_addresses
     */
    omit?: customers_addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customers_addressesInclude<ExtArgs> | null
    /**
     * Filter, which customers_addresses to fetch.
     */
    where: customers_addressesWhereUniqueInput
  }

  /**
   * customers_addresses findFirst
   */
  export type customers_addressesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customers_addresses
     */
    select?: customers_addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customers_addresses
     */
    omit?: customers_addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customers_addressesInclude<ExtArgs> | null
    /**
     * Filter, which customers_addresses to fetch.
     */
    where?: customers_addressesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of customers_addresses to fetch.
     */
    orderBy?: customers_addressesOrderByWithRelationInput | customers_addressesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for customers_addresses.
     */
    cursor?: customers_addressesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` customers_addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` customers_addresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of customers_addresses.
     */
    distinct?: Customers_addressesScalarFieldEnum | Customers_addressesScalarFieldEnum[]
  }

  /**
   * customers_addresses findFirstOrThrow
   */
  export type customers_addressesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customers_addresses
     */
    select?: customers_addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customers_addresses
     */
    omit?: customers_addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customers_addressesInclude<ExtArgs> | null
    /**
     * Filter, which customers_addresses to fetch.
     */
    where?: customers_addressesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of customers_addresses to fetch.
     */
    orderBy?: customers_addressesOrderByWithRelationInput | customers_addressesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for customers_addresses.
     */
    cursor?: customers_addressesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` customers_addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` customers_addresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of customers_addresses.
     */
    distinct?: Customers_addressesScalarFieldEnum | Customers_addressesScalarFieldEnum[]
  }

  /**
   * customers_addresses findMany
   */
  export type customers_addressesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customers_addresses
     */
    select?: customers_addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customers_addresses
     */
    omit?: customers_addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customers_addressesInclude<ExtArgs> | null
    /**
     * Filter, which customers_addresses to fetch.
     */
    where?: customers_addressesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of customers_addresses to fetch.
     */
    orderBy?: customers_addressesOrderByWithRelationInput | customers_addressesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing customers_addresses.
     */
    cursor?: customers_addressesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` customers_addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` customers_addresses.
     */
    skip?: number
    distinct?: Customers_addressesScalarFieldEnum | Customers_addressesScalarFieldEnum[]
  }

  /**
   * customers_addresses create
   */
  export type customers_addressesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customers_addresses
     */
    select?: customers_addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customers_addresses
     */
    omit?: customers_addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customers_addressesInclude<ExtArgs> | null
    /**
     * The data needed to create a customers_addresses.
     */
    data?: XOR<customers_addressesCreateInput, customers_addressesUncheckedCreateInput>
  }

  /**
   * customers_addresses createMany
   */
  export type customers_addressesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many customers_addresses.
     */
    data: customers_addressesCreateManyInput | customers_addressesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * customers_addresses update
   */
  export type customers_addressesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customers_addresses
     */
    select?: customers_addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customers_addresses
     */
    omit?: customers_addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customers_addressesInclude<ExtArgs> | null
    /**
     * The data needed to update a customers_addresses.
     */
    data: XOR<customers_addressesUpdateInput, customers_addressesUncheckedUpdateInput>
    /**
     * Choose, which customers_addresses to update.
     */
    where: customers_addressesWhereUniqueInput
  }

  /**
   * customers_addresses updateMany
   */
  export type customers_addressesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update customers_addresses.
     */
    data: XOR<customers_addressesUpdateManyMutationInput, customers_addressesUncheckedUpdateManyInput>
    /**
     * Filter which customers_addresses to update
     */
    where?: customers_addressesWhereInput
    /**
     * Limit how many customers_addresses to update.
     */
    limit?: number
  }

  /**
   * customers_addresses upsert
   */
  export type customers_addressesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customers_addresses
     */
    select?: customers_addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customers_addresses
     */
    omit?: customers_addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customers_addressesInclude<ExtArgs> | null
    /**
     * The filter to search for the customers_addresses to update in case it exists.
     */
    where: customers_addressesWhereUniqueInput
    /**
     * In case the customers_addresses found by the `where` argument doesn't exist, create a new customers_addresses with this data.
     */
    create: XOR<customers_addressesCreateInput, customers_addressesUncheckedCreateInput>
    /**
     * In case the customers_addresses was found with the provided `where` argument, update it with this data.
     */
    update: XOR<customers_addressesUpdateInput, customers_addressesUncheckedUpdateInput>
  }

  /**
   * customers_addresses delete
   */
  export type customers_addressesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customers_addresses
     */
    select?: customers_addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customers_addresses
     */
    omit?: customers_addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customers_addressesInclude<ExtArgs> | null
    /**
     * Filter which customers_addresses to delete.
     */
    where: customers_addressesWhereUniqueInput
  }

  /**
   * customers_addresses deleteMany
   */
  export type customers_addressesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which customers_addresses to delete
     */
    where?: customers_addressesWhereInput
    /**
     * Limit how many customers_addresses to delete.
     */
    limit?: number
  }

  /**
   * customers_addresses.customers
   */
  export type customers_addresses$customersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customers
     */
    select?: customersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customers
     */
    omit?: customersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customersInclude<ExtArgs> | null
    where?: customersWhereInput
  }

  /**
   * customers_addresses without action
   */
  export type customers_addressesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the customers_addresses
     */
    select?: customers_addressesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the customers_addresses
     */
    omit?: customers_addressesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: customers_addressesInclude<ExtArgs> | null
  }


  /**
   * Model permissions
   */

  export type AggregatePermissions = {
    _count: PermissionsCountAggregateOutputType | null
    _avg: PermissionsAvgAggregateOutputType | null
    _sum: PermissionsSumAggregateOutputType | null
    _min: PermissionsMinAggregateOutputType | null
    _max: PermissionsMaxAggregateOutputType | null
  }

  export type PermissionsAvgAggregateOutputType = {
    id: number | null
  }

  export type PermissionsSumAggregateOutputType = {
    id: number | null
  }

  export type PermissionsMinAggregateOutputType = {
    id: number | null
    name: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type PermissionsMaxAggregateOutputType = {
    id: number | null
    name: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type PermissionsCountAggregateOutputType = {
    id: number
    name: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type PermissionsAvgAggregateInputType = {
    id?: true
  }

  export type PermissionsSumAggregateInputType = {
    id?: true
  }

  export type PermissionsMinAggregateInputType = {
    id?: true
    name?: true
    created_at?: true
    updated_at?: true
  }

  export type PermissionsMaxAggregateInputType = {
    id?: true
    name?: true
    created_at?: true
    updated_at?: true
  }

  export type PermissionsCountAggregateInputType = {
    id?: true
    name?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type PermissionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which permissions to aggregate.
     */
    where?: permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of permissions to fetch.
     */
    orderBy?: permissionsOrderByWithRelationInput | permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned permissions
    **/
    _count?: true | PermissionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PermissionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PermissionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PermissionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PermissionsMaxAggregateInputType
  }

  export type GetPermissionsAggregateType<T extends PermissionsAggregateArgs> = {
        [P in keyof T & keyof AggregatePermissions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePermissions[P]>
      : GetScalarType<T[P], AggregatePermissions[P]>
  }




  export type permissionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: permissionsWhereInput
    orderBy?: permissionsOrderByWithAggregationInput | permissionsOrderByWithAggregationInput[]
    by: PermissionsScalarFieldEnum[] | PermissionsScalarFieldEnum
    having?: permissionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PermissionsCountAggregateInputType | true
    _avg?: PermissionsAvgAggregateInputType
    _sum?: PermissionsSumAggregateInputType
    _min?: PermissionsMinAggregateInputType
    _max?: PermissionsMaxAggregateInputType
  }

  export type PermissionsGroupByOutputType = {
    id: number
    name: string
    created_at: Date
    updated_at: Date
    _count: PermissionsCountAggregateOutputType | null
    _avg: PermissionsAvgAggregateOutputType | null
    _sum: PermissionsSumAggregateOutputType | null
    _min: PermissionsMinAggregateOutputType | null
    _max: PermissionsMaxAggregateOutputType | null
  }

  type GetPermissionsGroupByPayload<T extends permissionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PermissionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PermissionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PermissionsGroupByOutputType[P]>
            : GetScalarType<T[P], PermissionsGroupByOutputType[P]>
        }
      >
    >


  export type permissionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["permissions"]>



  export type permissionsSelectScalar = {
    id?: boolean
    name?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type permissionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "created_at" | "updated_at", ExtArgs["result"]["permissions"]>

  export type $permissionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "permissions"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["permissions"]>
    composites: {}
  }

  type permissionsGetPayload<S extends boolean | null | undefined | permissionsDefaultArgs> = $Result.GetResult<Prisma.$permissionsPayload, S>

  type permissionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<permissionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PermissionsCountAggregateInputType | true
    }

  export interface permissionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['permissions'], meta: { name: 'permissions' } }
    /**
     * Find zero or one Permissions that matches the filter.
     * @param {permissionsFindUniqueArgs} args - Arguments to find a Permissions
     * @example
     * // Get one Permissions
     * const permissions = await prisma.permissions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends permissionsFindUniqueArgs>(args: SelectSubset<T, permissionsFindUniqueArgs<ExtArgs>>): Prisma__permissionsClient<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Permissions that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {permissionsFindUniqueOrThrowArgs} args - Arguments to find a Permissions
     * @example
     * // Get one Permissions
     * const permissions = await prisma.permissions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends permissionsFindUniqueOrThrowArgs>(args: SelectSubset<T, permissionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__permissionsClient<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Permissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionsFindFirstArgs} args - Arguments to find a Permissions
     * @example
     * // Get one Permissions
     * const permissions = await prisma.permissions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends permissionsFindFirstArgs>(args?: SelectSubset<T, permissionsFindFirstArgs<ExtArgs>>): Prisma__permissionsClient<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Permissions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionsFindFirstOrThrowArgs} args - Arguments to find a Permissions
     * @example
     * // Get one Permissions
     * const permissions = await prisma.permissions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends permissionsFindFirstOrThrowArgs>(args?: SelectSubset<T, permissionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__permissionsClient<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Permissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Permissions
     * const permissions = await prisma.permissions.findMany()
     * 
     * // Get first 10 Permissions
     * const permissions = await prisma.permissions.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const permissionsWithIdOnly = await prisma.permissions.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends permissionsFindManyArgs>(args?: SelectSubset<T, permissionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Permissions.
     * @param {permissionsCreateArgs} args - Arguments to create a Permissions.
     * @example
     * // Create one Permissions
     * const Permissions = await prisma.permissions.create({
     *   data: {
     *     // ... data to create a Permissions
     *   }
     * })
     * 
     */
    create<T extends permissionsCreateArgs>(args: SelectSubset<T, permissionsCreateArgs<ExtArgs>>): Prisma__permissionsClient<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Permissions.
     * @param {permissionsCreateManyArgs} args - Arguments to create many Permissions.
     * @example
     * // Create many Permissions
     * const permissions = await prisma.permissions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends permissionsCreateManyArgs>(args?: SelectSubset<T, permissionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Permissions.
     * @param {permissionsDeleteArgs} args - Arguments to delete one Permissions.
     * @example
     * // Delete one Permissions
     * const Permissions = await prisma.permissions.delete({
     *   where: {
     *     // ... filter to delete one Permissions
     *   }
     * })
     * 
     */
    delete<T extends permissionsDeleteArgs>(args: SelectSubset<T, permissionsDeleteArgs<ExtArgs>>): Prisma__permissionsClient<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Permissions.
     * @param {permissionsUpdateArgs} args - Arguments to update one Permissions.
     * @example
     * // Update one Permissions
     * const permissions = await prisma.permissions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends permissionsUpdateArgs>(args: SelectSubset<T, permissionsUpdateArgs<ExtArgs>>): Prisma__permissionsClient<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Permissions.
     * @param {permissionsDeleteManyArgs} args - Arguments to filter Permissions to delete.
     * @example
     * // Delete a few Permissions
     * const { count } = await prisma.permissions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends permissionsDeleteManyArgs>(args?: SelectSubset<T, permissionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Permissions
     * const permissions = await prisma.permissions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends permissionsUpdateManyArgs>(args: SelectSubset<T, permissionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Permissions.
     * @param {permissionsUpsertArgs} args - Arguments to update or create a Permissions.
     * @example
     * // Update or create a Permissions
     * const permissions = await prisma.permissions.upsert({
     *   create: {
     *     // ... data to create a Permissions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Permissions we want to update
     *   }
     * })
     */
    upsert<T extends permissionsUpsertArgs>(args: SelectSubset<T, permissionsUpsertArgs<ExtArgs>>): Prisma__permissionsClient<$Result.GetResult<Prisma.$permissionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionsCountArgs} args - Arguments to filter Permissions to count.
     * @example
     * // Count the number of Permissions
     * const count = await prisma.permissions.count({
     *   where: {
     *     // ... the filter for the Permissions we want to count
     *   }
     * })
    **/
    count<T extends permissionsCountArgs>(
      args?: Subset<T, permissionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PermissionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermissionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PermissionsAggregateArgs>(args: Subset<T, PermissionsAggregateArgs>): Prisma.PrismaPromise<GetPermissionsAggregateType<T>>

    /**
     * Group by Permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permissionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends permissionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: permissionsGroupByArgs['orderBy'] }
        : { orderBy?: permissionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, permissionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPermissionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the permissions model
   */
  readonly fields: permissionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for permissions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__permissionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the permissions model
   */
  interface permissionsFieldRefs {
    readonly id: FieldRef<"permissions", 'Int'>
    readonly name: FieldRef<"permissions", 'String'>
    readonly created_at: FieldRef<"permissions", 'DateTime'>
    readonly updated_at: FieldRef<"permissions", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * permissions findUnique
   */
  export type permissionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * Filter, which permissions to fetch.
     */
    where: permissionsWhereUniqueInput
  }

  /**
   * permissions findUniqueOrThrow
   */
  export type permissionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * Filter, which permissions to fetch.
     */
    where: permissionsWhereUniqueInput
  }

  /**
   * permissions findFirst
   */
  export type permissionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * Filter, which permissions to fetch.
     */
    where?: permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of permissions to fetch.
     */
    orderBy?: permissionsOrderByWithRelationInput | permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for permissions.
     */
    cursor?: permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of permissions.
     */
    distinct?: PermissionsScalarFieldEnum | PermissionsScalarFieldEnum[]
  }

  /**
   * permissions findFirstOrThrow
   */
  export type permissionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * Filter, which permissions to fetch.
     */
    where?: permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of permissions to fetch.
     */
    orderBy?: permissionsOrderByWithRelationInput | permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for permissions.
     */
    cursor?: permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of permissions.
     */
    distinct?: PermissionsScalarFieldEnum | PermissionsScalarFieldEnum[]
  }

  /**
   * permissions findMany
   */
  export type permissionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * Filter, which permissions to fetch.
     */
    where?: permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of permissions to fetch.
     */
    orderBy?: permissionsOrderByWithRelationInput | permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing permissions.
     */
    cursor?: permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` permissions.
     */
    skip?: number
    distinct?: PermissionsScalarFieldEnum | PermissionsScalarFieldEnum[]
  }

  /**
   * permissions create
   */
  export type permissionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * The data needed to create a permissions.
     */
    data: XOR<permissionsCreateInput, permissionsUncheckedCreateInput>
  }

  /**
   * permissions createMany
   */
  export type permissionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many permissions.
     */
    data: permissionsCreateManyInput | permissionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * permissions update
   */
  export type permissionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * The data needed to update a permissions.
     */
    data: XOR<permissionsUpdateInput, permissionsUncheckedUpdateInput>
    /**
     * Choose, which permissions to update.
     */
    where: permissionsWhereUniqueInput
  }

  /**
   * permissions updateMany
   */
  export type permissionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update permissions.
     */
    data: XOR<permissionsUpdateManyMutationInput, permissionsUncheckedUpdateManyInput>
    /**
     * Filter which permissions to update
     */
    where?: permissionsWhereInput
    /**
     * Limit how many permissions to update.
     */
    limit?: number
  }

  /**
   * permissions upsert
   */
  export type permissionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * The filter to search for the permissions to update in case it exists.
     */
    where: permissionsWhereUniqueInput
    /**
     * In case the permissions found by the `where` argument doesn't exist, create a new permissions with this data.
     */
    create: XOR<permissionsCreateInput, permissionsUncheckedCreateInput>
    /**
     * In case the permissions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<permissionsUpdateInput, permissionsUncheckedUpdateInput>
  }

  /**
   * permissions delete
   */
  export type permissionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
    /**
     * Filter which permissions to delete.
     */
    where: permissionsWhereUniqueInput
  }

  /**
   * permissions deleteMany
   */
  export type permissionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which permissions to delete
     */
    where?: permissionsWhereInput
    /**
     * Limit how many permissions to delete.
     */
    limit?: number
  }

  /**
   * permissions without action
   */
  export type permissionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permissions
     */
    select?: permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the permissions
     */
    omit?: permissionsOmit<ExtArgs> | null
  }


  /**
   * Model product_categories
   */

  export type AggregateProduct_categories = {
    _count: Product_categoriesCountAggregateOutputType | null
    _avg: Product_categoriesAvgAggregateOutputType | null
    _sum: Product_categoriesSumAggregateOutputType | null
    _min: Product_categoriesMinAggregateOutputType | null
    _max: Product_categoriesMaxAggregateOutputType | null
  }

  export type Product_categoriesAvgAggregateOutputType = {
    product_id: number | null
    category_id: number | null
  }

  export type Product_categoriesSumAggregateOutputType = {
    product_id: number | null
    category_id: number | null
  }

  export type Product_categoriesMinAggregateOutputType = {
    product_id: number | null
    category_id: number | null
  }

  export type Product_categoriesMaxAggregateOutputType = {
    product_id: number | null
    category_id: number | null
  }

  export type Product_categoriesCountAggregateOutputType = {
    product_id: number
    category_id: number
    _all: number
  }


  export type Product_categoriesAvgAggregateInputType = {
    product_id?: true
    category_id?: true
  }

  export type Product_categoriesSumAggregateInputType = {
    product_id?: true
    category_id?: true
  }

  export type Product_categoriesMinAggregateInputType = {
    product_id?: true
    category_id?: true
  }

  export type Product_categoriesMaxAggregateInputType = {
    product_id?: true
    category_id?: true
  }

  export type Product_categoriesCountAggregateInputType = {
    product_id?: true
    category_id?: true
    _all?: true
  }

  export type Product_categoriesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which product_categories to aggregate.
     */
    where?: product_categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_categories to fetch.
     */
    orderBy?: product_categoriesOrderByWithRelationInput | product_categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: product_categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned product_categories
    **/
    _count?: true | Product_categoriesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Product_categoriesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Product_categoriesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Product_categoriesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Product_categoriesMaxAggregateInputType
  }

  export type GetProduct_categoriesAggregateType<T extends Product_categoriesAggregateArgs> = {
        [P in keyof T & keyof AggregateProduct_categories]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProduct_categories[P]>
      : GetScalarType<T[P], AggregateProduct_categories[P]>
  }




  export type product_categoriesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: product_categoriesWhereInput
    orderBy?: product_categoriesOrderByWithAggregationInput | product_categoriesOrderByWithAggregationInput[]
    by: Product_categoriesScalarFieldEnum[] | Product_categoriesScalarFieldEnum
    having?: product_categoriesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Product_categoriesCountAggregateInputType | true
    _avg?: Product_categoriesAvgAggregateInputType
    _sum?: Product_categoriesSumAggregateInputType
    _min?: Product_categoriesMinAggregateInputType
    _max?: Product_categoriesMaxAggregateInputType
  }

  export type Product_categoriesGroupByOutputType = {
    product_id: number
    category_id: number
    _count: Product_categoriesCountAggregateOutputType | null
    _avg: Product_categoriesAvgAggregateOutputType | null
    _sum: Product_categoriesSumAggregateOutputType | null
    _min: Product_categoriesMinAggregateOutputType | null
    _max: Product_categoriesMaxAggregateOutputType | null
  }

  type GetProduct_categoriesGroupByPayload<T extends product_categoriesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Product_categoriesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Product_categoriesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Product_categoriesGroupByOutputType[P]>
            : GetScalarType<T[P], Product_categoriesGroupByOutputType[P]>
        }
      >
    >


  export type product_categoriesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    product_id?: boolean
    category_id?: boolean
  }, ExtArgs["result"]["product_categories"]>



  export type product_categoriesSelectScalar = {
    product_id?: boolean
    category_id?: boolean
  }

  export type product_categoriesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"product_id" | "category_id", ExtArgs["result"]["product_categories"]>

  export type $product_categoriesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "product_categories"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      product_id: number
      category_id: number
    }, ExtArgs["result"]["product_categories"]>
    composites: {}
  }

  type product_categoriesGetPayload<S extends boolean | null | undefined | product_categoriesDefaultArgs> = $Result.GetResult<Prisma.$product_categoriesPayload, S>

  type product_categoriesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<product_categoriesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Product_categoriesCountAggregateInputType | true
    }

  export interface product_categoriesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['product_categories'], meta: { name: 'product_categories' } }
    /**
     * Find zero or one Product_categories that matches the filter.
     * @param {product_categoriesFindUniqueArgs} args - Arguments to find a Product_categories
     * @example
     * // Get one Product_categories
     * const product_categories = await prisma.product_categories.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends product_categoriesFindUniqueArgs>(args: SelectSubset<T, product_categoriesFindUniqueArgs<ExtArgs>>): Prisma__product_categoriesClient<$Result.GetResult<Prisma.$product_categoriesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Product_categories that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {product_categoriesFindUniqueOrThrowArgs} args - Arguments to find a Product_categories
     * @example
     * // Get one Product_categories
     * const product_categories = await prisma.product_categories.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends product_categoriesFindUniqueOrThrowArgs>(args: SelectSubset<T, product_categoriesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__product_categoriesClient<$Result.GetResult<Prisma.$product_categoriesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Product_categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_categoriesFindFirstArgs} args - Arguments to find a Product_categories
     * @example
     * // Get one Product_categories
     * const product_categories = await prisma.product_categories.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends product_categoriesFindFirstArgs>(args?: SelectSubset<T, product_categoriesFindFirstArgs<ExtArgs>>): Prisma__product_categoriesClient<$Result.GetResult<Prisma.$product_categoriesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Product_categories that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_categoriesFindFirstOrThrowArgs} args - Arguments to find a Product_categories
     * @example
     * // Get one Product_categories
     * const product_categories = await prisma.product_categories.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends product_categoriesFindFirstOrThrowArgs>(args?: SelectSubset<T, product_categoriesFindFirstOrThrowArgs<ExtArgs>>): Prisma__product_categoriesClient<$Result.GetResult<Prisma.$product_categoriesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Product_categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_categoriesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Product_categories
     * const product_categories = await prisma.product_categories.findMany()
     * 
     * // Get first 10 Product_categories
     * const product_categories = await prisma.product_categories.findMany({ take: 10 })
     * 
     * // Only select the `product_id`
     * const product_categoriesWithProduct_idOnly = await prisma.product_categories.findMany({ select: { product_id: true } })
     * 
     */
    findMany<T extends product_categoriesFindManyArgs>(args?: SelectSubset<T, product_categoriesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$product_categoriesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Product_categories.
     * @param {product_categoriesCreateArgs} args - Arguments to create a Product_categories.
     * @example
     * // Create one Product_categories
     * const Product_categories = await prisma.product_categories.create({
     *   data: {
     *     // ... data to create a Product_categories
     *   }
     * })
     * 
     */
    create<T extends product_categoriesCreateArgs>(args: SelectSubset<T, product_categoriesCreateArgs<ExtArgs>>): Prisma__product_categoriesClient<$Result.GetResult<Prisma.$product_categoriesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Product_categories.
     * @param {product_categoriesCreateManyArgs} args - Arguments to create many Product_categories.
     * @example
     * // Create many Product_categories
     * const product_categories = await prisma.product_categories.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends product_categoriesCreateManyArgs>(args?: SelectSubset<T, product_categoriesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Product_categories.
     * @param {product_categoriesDeleteArgs} args - Arguments to delete one Product_categories.
     * @example
     * // Delete one Product_categories
     * const Product_categories = await prisma.product_categories.delete({
     *   where: {
     *     // ... filter to delete one Product_categories
     *   }
     * })
     * 
     */
    delete<T extends product_categoriesDeleteArgs>(args: SelectSubset<T, product_categoriesDeleteArgs<ExtArgs>>): Prisma__product_categoriesClient<$Result.GetResult<Prisma.$product_categoriesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Product_categories.
     * @param {product_categoriesUpdateArgs} args - Arguments to update one Product_categories.
     * @example
     * // Update one Product_categories
     * const product_categories = await prisma.product_categories.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends product_categoriesUpdateArgs>(args: SelectSubset<T, product_categoriesUpdateArgs<ExtArgs>>): Prisma__product_categoriesClient<$Result.GetResult<Prisma.$product_categoriesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Product_categories.
     * @param {product_categoriesDeleteManyArgs} args - Arguments to filter Product_categories to delete.
     * @example
     * // Delete a few Product_categories
     * const { count } = await prisma.product_categories.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends product_categoriesDeleteManyArgs>(args?: SelectSubset<T, product_categoriesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Product_categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_categoriesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Product_categories
     * const product_categories = await prisma.product_categories.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends product_categoriesUpdateManyArgs>(args: SelectSubset<T, product_categoriesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Product_categories.
     * @param {product_categoriesUpsertArgs} args - Arguments to update or create a Product_categories.
     * @example
     * // Update or create a Product_categories
     * const product_categories = await prisma.product_categories.upsert({
     *   create: {
     *     // ... data to create a Product_categories
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Product_categories we want to update
     *   }
     * })
     */
    upsert<T extends product_categoriesUpsertArgs>(args: SelectSubset<T, product_categoriesUpsertArgs<ExtArgs>>): Prisma__product_categoriesClient<$Result.GetResult<Prisma.$product_categoriesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Product_categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_categoriesCountArgs} args - Arguments to filter Product_categories to count.
     * @example
     * // Count the number of Product_categories
     * const count = await prisma.product_categories.count({
     *   where: {
     *     // ... the filter for the Product_categories we want to count
     *   }
     * })
    **/
    count<T extends product_categoriesCountArgs>(
      args?: Subset<T, product_categoriesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Product_categoriesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Product_categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Product_categoriesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Product_categoriesAggregateArgs>(args: Subset<T, Product_categoriesAggregateArgs>): Prisma.PrismaPromise<GetProduct_categoriesAggregateType<T>>

    /**
     * Group by Product_categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_categoriesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends product_categoriesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: product_categoriesGroupByArgs['orderBy'] }
        : { orderBy?: product_categoriesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, product_categoriesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProduct_categoriesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the product_categories model
   */
  readonly fields: product_categoriesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for product_categories.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__product_categoriesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the product_categories model
   */
  interface product_categoriesFieldRefs {
    readonly product_id: FieldRef<"product_categories", 'Int'>
    readonly category_id: FieldRef<"product_categories", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * product_categories findUnique
   */
  export type product_categoriesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_categories
     */
    select?: product_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_categories
     */
    omit?: product_categoriesOmit<ExtArgs> | null
    /**
     * Filter, which product_categories to fetch.
     */
    where: product_categoriesWhereUniqueInput
  }

  /**
   * product_categories findUniqueOrThrow
   */
  export type product_categoriesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_categories
     */
    select?: product_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_categories
     */
    omit?: product_categoriesOmit<ExtArgs> | null
    /**
     * Filter, which product_categories to fetch.
     */
    where: product_categoriesWhereUniqueInput
  }

  /**
   * product_categories findFirst
   */
  export type product_categoriesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_categories
     */
    select?: product_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_categories
     */
    omit?: product_categoriesOmit<ExtArgs> | null
    /**
     * Filter, which product_categories to fetch.
     */
    where?: product_categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_categories to fetch.
     */
    orderBy?: product_categoriesOrderByWithRelationInput | product_categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for product_categories.
     */
    cursor?: product_categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of product_categories.
     */
    distinct?: Product_categoriesScalarFieldEnum | Product_categoriesScalarFieldEnum[]
  }

  /**
   * product_categories findFirstOrThrow
   */
  export type product_categoriesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_categories
     */
    select?: product_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_categories
     */
    omit?: product_categoriesOmit<ExtArgs> | null
    /**
     * Filter, which product_categories to fetch.
     */
    where?: product_categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_categories to fetch.
     */
    orderBy?: product_categoriesOrderByWithRelationInput | product_categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for product_categories.
     */
    cursor?: product_categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of product_categories.
     */
    distinct?: Product_categoriesScalarFieldEnum | Product_categoriesScalarFieldEnum[]
  }

  /**
   * product_categories findMany
   */
  export type product_categoriesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_categories
     */
    select?: product_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_categories
     */
    omit?: product_categoriesOmit<ExtArgs> | null
    /**
     * Filter, which product_categories to fetch.
     */
    where?: product_categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_categories to fetch.
     */
    orderBy?: product_categoriesOrderByWithRelationInput | product_categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing product_categories.
     */
    cursor?: product_categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_categories.
     */
    skip?: number
    distinct?: Product_categoriesScalarFieldEnum | Product_categoriesScalarFieldEnum[]
  }

  /**
   * product_categories create
   */
  export type product_categoriesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_categories
     */
    select?: product_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_categories
     */
    omit?: product_categoriesOmit<ExtArgs> | null
    /**
     * The data needed to create a product_categories.
     */
    data: XOR<product_categoriesCreateInput, product_categoriesUncheckedCreateInput>
  }

  /**
   * product_categories createMany
   */
  export type product_categoriesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many product_categories.
     */
    data: product_categoriesCreateManyInput | product_categoriesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * product_categories update
   */
  export type product_categoriesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_categories
     */
    select?: product_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_categories
     */
    omit?: product_categoriesOmit<ExtArgs> | null
    /**
     * The data needed to update a product_categories.
     */
    data: XOR<product_categoriesUpdateInput, product_categoriesUncheckedUpdateInput>
    /**
     * Choose, which product_categories to update.
     */
    where: product_categoriesWhereUniqueInput
  }

  /**
   * product_categories updateMany
   */
  export type product_categoriesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update product_categories.
     */
    data: XOR<product_categoriesUpdateManyMutationInput, product_categoriesUncheckedUpdateManyInput>
    /**
     * Filter which product_categories to update
     */
    where?: product_categoriesWhereInput
    /**
     * Limit how many product_categories to update.
     */
    limit?: number
  }

  /**
   * product_categories upsert
   */
  export type product_categoriesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_categories
     */
    select?: product_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_categories
     */
    omit?: product_categoriesOmit<ExtArgs> | null
    /**
     * The filter to search for the product_categories to update in case it exists.
     */
    where: product_categoriesWhereUniqueInput
    /**
     * In case the product_categories found by the `where` argument doesn't exist, create a new product_categories with this data.
     */
    create: XOR<product_categoriesCreateInput, product_categoriesUncheckedCreateInput>
    /**
     * In case the product_categories was found with the provided `where` argument, update it with this data.
     */
    update: XOR<product_categoriesUpdateInput, product_categoriesUncheckedUpdateInput>
  }

  /**
   * product_categories delete
   */
  export type product_categoriesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_categories
     */
    select?: product_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_categories
     */
    omit?: product_categoriesOmit<ExtArgs> | null
    /**
     * Filter which product_categories to delete.
     */
    where: product_categoriesWhereUniqueInput
  }

  /**
   * product_categories deleteMany
   */
  export type product_categoriesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which product_categories to delete
     */
    where?: product_categoriesWhereInput
    /**
     * Limit how many product_categories to delete.
     */
    limit?: number
  }

  /**
   * product_categories without action
   */
  export type product_categoriesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_categories
     */
    select?: product_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_categories
     */
    omit?: product_categoriesOmit<ExtArgs> | null
  }


  /**
   * Model product_variants
   */

  export type AggregateProduct_variants = {
    _count: Product_variantsCountAggregateOutputType | null
    _avg: Product_variantsAvgAggregateOutputType | null
    _sum: Product_variantsSumAggregateOutputType | null
    _min: Product_variantsMinAggregateOutputType | null
    _max: Product_variantsMaxAggregateOutputType | null
  }

  export type Product_variantsAvgAggregateOutputType = {
    id: number | null
    product_id: number | null
    price: number | null
    stock: number | null
  }

  export type Product_variantsSumAggregateOutputType = {
    id: number | null
    product_id: number | null
    price: number | null
    stock: number | null
  }

  export type Product_variantsMinAggregateOutputType = {
    id: number | null
    product_id: number | null
    sku: string | null
    price: number | null
    stock: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Product_variantsMaxAggregateOutputType = {
    id: number | null
    product_id: number | null
    sku: string | null
    price: number | null
    stock: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Product_variantsCountAggregateOutputType = {
    id: number
    product_id: number
    sku: number
    price: number
    stock: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Product_variantsAvgAggregateInputType = {
    id?: true
    product_id?: true
    price?: true
    stock?: true
  }

  export type Product_variantsSumAggregateInputType = {
    id?: true
    product_id?: true
    price?: true
    stock?: true
  }

  export type Product_variantsMinAggregateInputType = {
    id?: true
    product_id?: true
    sku?: true
    price?: true
    stock?: true
    created_at?: true
    updated_at?: true
  }

  export type Product_variantsMaxAggregateInputType = {
    id?: true
    product_id?: true
    sku?: true
    price?: true
    stock?: true
    created_at?: true
    updated_at?: true
  }

  export type Product_variantsCountAggregateInputType = {
    id?: true
    product_id?: true
    sku?: true
    price?: true
    stock?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Product_variantsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which product_variants to aggregate.
     */
    where?: product_variantsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_variants to fetch.
     */
    orderBy?: product_variantsOrderByWithRelationInput | product_variantsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: product_variantsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_variants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_variants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned product_variants
    **/
    _count?: true | Product_variantsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Product_variantsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Product_variantsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Product_variantsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Product_variantsMaxAggregateInputType
  }

  export type GetProduct_variantsAggregateType<T extends Product_variantsAggregateArgs> = {
        [P in keyof T & keyof AggregateProduct_variants]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProduct_variants[P]>
      : GetScalarType<T[P], AggregateProduct_variants[P]>
  }




  export type product_variantsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: product_variantsWhereInput
    orderBy?: product_variantsOrderByWithAggregationInput | product_variantsOrderByWithAggregationInput[]
    by: Product_variantsScalarFieldEnum[] | Product_variantsScalarFieldEnum
    having?: product_variantsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Product_variantsCountAggregateInputType | true
    _avg?: Product_variantsAvgAggregateInputType
    _sum?: Product_variantsSumAggregateInputType
    _min?: Product_variantsMinAggregateInputType
    _max?: Product_variantsMaxAggregateInputType
  }

  export type Product_variantsGroupByOutputType = {
    id: number
    product_id: number
    sku: string
    price: number
    stock: number
    created_at: Date
    updated_at: Date
    _count: Product_variantsCountAggregateOutputType | null
    _avg: Product_variantsAvgAggregateOutputType | null
    _sum: Product_variantsSumAggregateOutputType | null
    _min: Product_variantsMinAggregateOutputType | null
    _max: Product_variantsMaxAggregateOutputType | null
  }

  type GetProduct_variantsGroupByPayload<T extends product_variantsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Product_variantsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Product_variantsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Product_variantsGroupByOutputType[P]>
            : GetScalarType<T[P], Product_variantsGroupByOutputType[P]>
        }
      >
    >


  export type product_variantsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    product_id?: boolean
    sku?: boolean
    price?: boolean
    stock?: boolean
    created_at?: boolean
    updated_at?: boolean
    products?: boolean | productsDefaultArgs<ExtArgs>
    promotion_variants?: boolean | product_variants$promotion_variantsArgs<ExtArgs>
    variant_attribute_options?: boolean | product_variants$variant_attribute_optionsArgs<ExtArgs>
    variant_images?: boolean | product_variants$variant_imagesArgs<ExtArgs>
    variant_ratings?: boolean | product_variants$variant_ratingsArgs<ExtArgs>
    _count?: boolean | Product_variantsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["product_variants"]>



  export type product_variantsSelectScalar = {
    id?: boolean
    product_id?: boolean
    sku?: boolean
    price?: boolean
    stock?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type product_variantsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "product_id" | "sku" | "price" | "stock" | "created_at" | "updated_at", ExtArgs["result"]["product_variants"]>
  export type product_variantsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | productsDefaultArgs<ExtArgs>
    promotion_variants?: boolean | product_variants$promotion_variantsArgs<ExtArgs>
    variant_attribute_options?: boolean | product_variants$variant_attribute_optionsArgs<ExtArgs>
    variant_images?: boolean | product_variants$variant_imagesArgs<ExtArgs>
    variant_ratings?: boolean | product_variants$variant_ratingsArgs<ExtArgs>
    _count?: boolean | Product_variantsCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $product_variantsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "product_variants"
    objects: {
      products: Prisma.$productsPayload<ExtArgs>
      promotion_variants: Prisma.$promotion_variantsPayload<ExtArgs>[]
      variant_attribute_options: Prisma.$variant_attribute_optionsPayload<ExtArgs>[]
      variant_images: Prisma.$variant_imagesPayload<ExtArgs>[]
      variant_ratings: Prisma.$variant_ratingsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      product_id: number
      sku: string
      price: number
      stock: number
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["product_variants"]>
    composites: {}
  }

  type product_variantsGetPayload<S extends boolean | null | undefined | product_variantsDefaultArgs> = $Result.GetResult<Prisma.$product_variantsPayload, S>

  type product_variantsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<product_variantsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Product_variantsCountAggregateInputType | true
    }

  export interface product_variantsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['product_variants'], meta: { name: 'product_variants' } }
    /**
     * Find zero or one Product_variants that matches the filter.
     * @param {product_variantsFindUniqueArgs} args - Arguments to find a Product_variants
     * @example
     * // Get one Product_variants
     * const product_variants = await prisma.product_variants.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends product_variantsFindUniqueArgs>(args: SelectSubset<T, product_variantsFindUniqueArgs<ExtArgs>>): Prisma__product_variantsClient<$Result.GetResult<Prisma.$product_variantsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Product_variants that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {product_variantsFindUniqueOrThrowArgs} args - Arguments to find a Product_variants
     * @example
     * // Get one Product_variants
     * const product_variants = await prisma.product_variants.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends product_variantsFindUniqueOrThrowArgs>(args: SelectSubset<T, product_variantsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__product_variantsClient<$Result.GetResult<Prisma.$product_variantsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Product_variants that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_variantsFindFirstArgs} args - Arguments to find a Product_variants
     * @example
     * // Get one Product_variants
     * const product_variants = await prisma.product_variants.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends product_variantsFindFirstArgs>(args?: SelectSubset<T, product_variantsFindFirstArgs<ExtArgs>>): Prisma__product_variantsClient<$Result.GetResult<Prisma.$product_variantsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Product_variants that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_variantsFindFirstOrThrowArgs} args - Arguments to find a Product_variants
     * @example
     * // Get one Product_variants
     * const product_variants = await prisma.product_variants.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends product_variantsFindFirstOrThrowArgs>(args?: SelectSubset<T, product_variantsFindFirstOrThrowArgs<ExtArgs>>): Prisma__product_variantsClient<$Result.GetResult<Prisma.$product_variantsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Product_variants that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_variantsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Product_variants
     * const product_variants = await prisma.product_variants.findMany()
     * 
     * // Get first 10 Product_variants
     * const product_variants = await prisma.product_variants.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const product_variantsWithIdOnly = await prisma.product_variants.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends product_variantsFindManyArgs>(args?: SelectSubset<T, product_variantsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$product_variantsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Product_variants.
     * @param {product_variantsCreateArgs} args - Arguments to create a Product_variants.
     * @example
     * // Create one Product_variants
     * const Product_variants = await prisma.product_variants.create({
     *   data: {
     *     // ... data to create a Product_variants
     *   }
     * })
     * 
     */
    create<T extends product_variantsCreateArgs>(args: SelectSubset<T, product_variantsCreateArgs<ExtArgs>>): Prisma__product_variantsClient<$Result.GetResult<Prisma.$product_variantsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Product_variants.
     * @param {product_variantsCreateManyArgs} args - Arguments to create many Product_variants.
     * @example
     * // Create many Product_variants
     * const product_variants = await prisma.product_variants.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends product_variantsCreateManyArgs>(args?: SelectSubset<T, product_variantsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Product_variants.
     * @param {product_variantsDeleteArgs} args - Arguments to delete one Product_variants.
     * @example
     * // Delete one Product_variants
     * const Product_variants = await prisma.product_variants.delete({
     *   where: {
     *     // ... filter to delete one Product_variants
     *   }
     * })
     * 
     */
    delete<T extends product_variantsDeleteArgs>(args: SelectSubset<T, product_variantsDeleteArgs<ExtArgs>>): Prisma__product_variantsClient<$Result.GetResult<Prisma.$product_variantsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Product_variants.
     * @param {product_variantsUpdateArgs} args - Arguments to update one Product_variants.
     * @example
     * // Update one Product_variants
     * const product_variants = await prisma.product_variants.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends product_variantsUpdateArgs>(args: SelectSubset<T, product_variantsUpdateArgs<ExtArgs>>): Prisma__product_variantsClient<$Result.GetResult<Prisma.$product_variantsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Product_variants.
     * @param {product_variantsDeleteManyArgs} args - Arguments to filter Product_variants to delete.
     * @example
     * // Delete a few Product_variants
     * const { count } = await prisma.product_variants.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends product_variantsDeleteManyArgs>(args?: SelectSubset<T, product_variantsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Product_variants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_variantsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Product_variants
     * const product_variants = await prisma.product_variants.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends product_variantsUpdateManyArgs>(args: SelectSubset<T, product_variantsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Product_variants.
     * @param {product_variantsUpsertArgs} args - Arguments to update or create a Product_variants.
     * @example
     * // Update or create a Product_variants
     * const product_variants = await prisma.product_variants.upsert({
     *   create: {
     *     // ... data to create a Product_variants
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Product_variants we want to update
     *   }
     * })
     */
    upsert<T extends product_variantsUpsertArgs>(args: SelectSubset<T, product_variantsUpsertArgs<ExtArgs>>): Prisma__product_variantsClient<$Result.GetResult<Prisma.$product_variantsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Product_variants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_variantsCountArgs} args - Arguments to filter Product_variants to count.
     * @example
     * // Count the number of Product_variants
     * const count = await prisma.product_variants.count({
     *   where: {
     *     // ... the filter for the Product_variants we want to count
     *   }
     * })
    **/
    count<T extends product_variantsCountArgs>(
      args?: Subset<T, product_variantsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Product_variantsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Product_variants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Product_variantsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Product_variantsAggregateArgs>(args: Subset<T, Product_variantsAggregateArgs>): Prisma.PrismaPromise<GetProduct_variantsAggregateType<T>>

    /**
     * Group by Product_variants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_variantsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends product_variantsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: product_variantsGroupByArgs['orderBy'] }
        : { orderBy?: product_variantsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, product_variantsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProduct_variantsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the product_variants model
   */
  readonly fields: product_variantsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for product_variants.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__product_variantsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    products<T extends productsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, productsDefaultArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    promotion_variants<T extends product_variants$promotion_variantsArgs<ExtArgs> = {}>(args?: Subset<T, product_variants$promotion_variantsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$promotion_variantsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    variant_attribute_options<T extends product_variants$variant_attribute_optionsArgs<ExtArgs> = {}>(args?: Subset<T, product_variants$variant_attribute_optionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$variant_attribute_optionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    variant_images<T extends product_variants$variant_imagesArgs<ExtArgs> = {}>(args?: Subset<T, product_variants$variant_imagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$variant_imagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    variant_ratings<T extends product_variants$variant_ratingsArgs<ExtArgs> = {}>(args?: Subset<T, product_variants$variant_ratingsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$variant_ratingsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the product_variants model
   */
  interface product_variantsFieldRefs {
    readonly id: FieldRef<"product_variants", 'Int'>
    readonly product_id: FieldRef<"product_variants", 'Int'>
    readonly sku: FieldRef<"product_variants", 'String'>
    readonly price: FieldRef<"product_variants", 'Decimal'>
    readonly stock: FieldRef<"product_variants", 'Int'>
    readonly created_at: FieldRef<"product_variants", 'DateTime'>
    readonly updated_at: FieldRef<"product_variants", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * product_variants findUnique
   */
  export type product_variantsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_variants
     */
    select?: product_variantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_variants
     */
    omit?: product_variantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_variantsInclude<ExtArgs> | null
    /**
     * Filter, which product_variants to fetch.
     */
    where: product_variantsWhereUniqueInput
  }

  /**
   * product_variants findUniqueOrThrow
   */
  export type product_variantsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_variants
     */
    select?: product_variantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_variants
     */
    omit?: product_variantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_variantsInclude<ExtArgs> | null
    /**
     * Filter, which product_variants to fetch.
     */
    where: product_variantsWhereUniqueInput
  }

  /**
   * product_variants findFirst
   */
  export type product_variantsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_variants
     */
    select?: product_variantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_variants
     */
    omit?: product_variantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_variantsInclude<ExtArgs> | null
    /**
     * Filter, which product_variants to fetch.
     */
    where?: product_variantsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_variants to fetch.
     */
    orderBy?: product_variantsOrderByWithRelationInput | product_variantsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for product_variants.
     */
    cursor?: product_variantsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_variants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_variants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of product_variants.
     */
    distinct?: Product_variantsScalarFieldEnum | Product_variantsScalarFieldEnum[]
  }

  /**
   * product_variants findFirstOrThrow
   */
  export type product_variantsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_variants
     */
    select?: product_variantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_variants
     */
    omit?: product_variantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_variantsInclude<ExtArgs> | null
    /**
     * Filter, which product_variants to fetch.
     */
    where?: product_variantsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_variants to fetch.
     */
    orderBy?: product_variantsOrderByWithRelationInput | product_variantsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for product_variants.
     */
    cursor?: product_variantsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_variants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_variants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of product_variants.
     */
    distinct?: Product_variantsScalarFieldEnum | Product_variantsScalarFieldEnum[]
  }

  /**
   * product_variants findMany
   */
  export type product_variantsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_variants
     */
    select?: product_variantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_variants
     */
    omit?: product_variantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_variantsInclude<ExtArgs> | null
    /**
     * Filter, which product_variants to fetch.
     */
    where?: product_variantsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_variants to fetch.
     */
    orderBy?: product_variantsOrderByWithRelationInput | product_variantsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing product_variants.
     */
    cursor?: product_variantsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_variants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_variants.
     */
    skip?: number
    distinct?: Product_variantsScalarFieldEnum | Product_variantsScalarFieldEnum[]
  }

  /**
   * product_variants create
   */
  export type product_variantsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_variants
     */
    select?: product_variantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_variants
     */
    omit?: product_variantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_variantsInclude<ExtArgs> | null
    /**
     * The data needed to create a product_variants.
     */
    data: XOR<product_variantsCreateInput, product_variantsUncheckedCreateInput>
  }

  /**
   * product_variants createMany
   */
  export type product_variantsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many product_variants.
     */
    data: product_variantsCreateManyInput | product_variantsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * product_variants update
   */
  export type product_variantsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_variants
     */
    select?: product_variantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_variants
     */
    omit?: product_variantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_variantsInclude<ExtArgs> | null
    /**
     * The data needed to update a product_variants.
     */
    data: XOR<product_variantsUpdateInput, product_variantsUncheckedUpdateInput>
    /**
     * Choose, which product_variants to update.
     */
    where: product_variantsWhereUniqueInput
  }

  /**
   * product_variants updateMany
   */
  export type product_variantsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update product_variants.
     */
    data: XOR<product_variantsUpdateManyMutationInput, product_variantsUncheckedUpdateManyInput>
    /**
     * Filter which product_variants to update
     */
    where?: product_variantsWhereInput
    /**
     * Limit how many product_variants to update.
     */
    limit?: number
  }

  /**
   * product_variants upsert
   */
  export type product_variantsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_variants
     */
    select?: product_variantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_variants
     */
    omit?: product_variantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_variantsInclude<ExtArgs> | null
    /**
     * The filter to search for the product_variants to update in case it exists.
     */
    where: product_variantsWhereUniqueInput
    /**
     * In case the product_variants found by the `where` argument doesn't exist, create a new product_variants with this data.
     */
    create: XOR<product_variantsCreateInput, product_variantsUncheckedCreateInput>
    /**
     * In case the product_variants was found with the provided `where` argument, update it with this data.
     */
    update: XOR<product_variantsUpdateInput, product_variantsUncheckedUpdateInput>
  }

  /**
   * product_variants delete
   */
  export type product_variantsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_variants
     */
    select?: product_variantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_variants
     */
    omit?: product_variantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_variantsInclude<ExtArgs> | null
    /**
     * Filter which product_variants to delete.
     */
    where: product_variantsWhereUniqueInput
  }

  /**
   * product_variants deleteMany
   */
  export type product_variantsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which product_variants to delete
     */
    where?: product_variantsWhereInput
    /**
     * Limit how many product_variants to delete.
     */
    limit?: number
  }

  /**
   * product_variants.promotion_variants
   */
  export type product_variants$promotion_variantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promotion_variants
     */
    select?: promotion_variantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promotion_variants
     */
    omit?: promotion_variantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promotion_variantsInclude<ExtArgs> | null
    where?: promotion_variantsWhereInput
    orderBy?: promotion_variantsOrderByWithRelationInput | promotion_variantsOrderByWithRelationInput[]
    cursor?: promotion_variantsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Promotion_variantsScalarFieldEnum | Promotion_variantsScalarFieldEnum[]
  }

  /**
   * product_variants.variant_attribute_options
   */
  export type product_variants$variant_attribute_optionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_attribute_options
     */
    select?: variant_attribute_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_attribute_options
     */
    omit?: variant_attribute_optionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_attribute_optionsInclude<ExtArgs> | null
    where?: variant_attribute_optionsWhereInput
    orderBy?: variant_attribute_optionsOrderByWithRelationInput | variant_attribute_optionsOrderByWithRelationInput[]
    cursor?: variant_attribute_optionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Variant_attribute_optionsScalarFieldEnum | Variant_attribute_optionsScalarFieldEnum[]
  }

  /**
   * product_variants.variant_images
   */
  export type product_variants$variant_imagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_images
     */
    select?: variant_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_images
     */
    omit?: variant_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_imagesInclude<ExtArgs> | null
    where?: variant_imagesWhereInput
    orderBy?: variant_imagesOrderByWithRelationInput | variant_imagesOrderByWithRelationInput[]
    cursor?: variant_imagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Variant_imagesScalarFieldEnum | Variant_imagesScalarFieldEnum[]
  }

  /**
   * product_variants.variant_ratings
   */
  export type product_variants$variant_ratingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_ratings
     */
    select?: variant_ratingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_ratings
     */
    omit?: variant_ratingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_ratingsInclude<ExtArgs> | null
    where?: variant_ratingsWhereInput
    orderBy?: variant_ratingsOrderByWithRelationInput | variant_ratingsOrderByWithRelationInput[]
    cursor?: variant_ratingsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Variant_ratingsScalarFieldEnum | Variant_ratingsScalarFieldEnum[]
  }

  /**
   * product_variants without action
   */
  export type product_variantsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_variants
     */
    select?: product_variantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_variants
     */
    omit?: product_variantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_variantsInclude<ExtArgs> | null
  }


  /**
   * Model products
   */

  export type AggregateProducts = {
    _count: ProductsCountAggregateOutputType | null
    _avg: ProductsAvgAggregateOutputType | null
    _sum: ProductsSumAggregateOutputType | null
    _min: ProductsMinAggregateOutputType | null
    _max: ProductsMaxAggregateOutputType | null
  }

  export type ProductsAvgAggregateOutputType = {
    id: number | null
    brand_id: number | null
    base_price: number | null
  }

  export type ProductsSumAggregateOutputType = {
    id: number | null
    brand_id: number | null
    base_price: number | null
  }

  export type ProductsMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    brand_id: number | null
    created_at: Date | null
    updated_at: Date | null
    base_price: number | null
  }

  export type ProductsMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    brand_id: number | null
    created_at: Date | null
    updated_at: Date | null
    base_price: number | null
  }

  export type ProductsCountAggregateOutputType = {
    id: number
    name: number
    description: number
    brand_id: number
    created_at: number
    updated_at: number
    base_price: number
    _all: number
  }


  export type ProductsAvgAggregateInputType = {
    id?: true
    brand_id?: true
    base_price?: true
  }

  export type ProductsSumAggregateInputType = {
    id?: true
    brand_id?: true
    base_price?: true
  }

  export type ProductsMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    brand_id?: true
    created_at?: true
    updated_at?: true
    base_price?: true
  }

  export type ProductsMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    brand_id?: true
    created_at?: true
    updated_at?: true
    base_price?: true
  }

  export type ProductsCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    brand_id?: true
    created_at?: true
    updated_at?: true
    base_price?: true
    _all?: true
  }

  export type ProductsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which products to aggregate.
     */
    where?: productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of products to fetch.
     */
    orderBy?: productsOrderByWithRelationInput | productsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned products
    **/
    _count?: true | ProductsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductsMaxAggregateInputType
  }

  export type GetProductsAggregateType<T extends ProductsAggregateArgs> = {
        [P in keyof T & keyof AggregateProducts]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProducts[P]>
      : GetScalarType<T[P], AggregateProducts[P]>
  }




  export type productsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: productsWhereInput
    orderBy?: productsOrderByWithAggregationInput | productsOrderByWithAggregationInput[]
    by: ProductsScalarFieldEnum[] | ProductsScalarFieldEnum
    having?: productsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductsCountAggregateInputType | true
    _avg?: ProductsAvgAggregateInputType
    _sum?: ProductsSumAggregateInputType
    _min?: ProductsMinAggregateInputType
    _max?: ProductsMaxAggregateInputType
  }

  export type ProductsGroupByOutputType = {
    id: number
    name: string
    description: string | null
    brand_id: number | null
    created_at: Date
    updated_at: Date
    base_price: number | null
    _count: ProductsCountAggregateOutputType | null
    _avg: ProductsAvgAggregateOutputType | null
    _sum: ProductsSumAggregateOutputType | null
    _min: ProductsMinAggregateOutputType | null
    _max: ProductsMaxAggregateOutputType | null
  }

  type GetProductsGroupByPayload<T extends productsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductsGroupByOutputType[P]>
            : GetScalarType<T[P], ProductsGroupByOutputType[P]>
        }
      >
    >


  export type productsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    brand_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    base_price?: boolean
    product_variants?: boolean | products$product_variantsArgs<ExtArgs>
    brands?: boolean | products$brandsArgs<ExtArgs>
    _count?: boolean | ProductsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["products"]>



  export type productsSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    brand_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    base_price?: boolean
  }

  export type productsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "brand_id" | "created_at" | "updated_at" | "base_price", ExtArgs["result"]["products"]>
  export type productsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product_variants?: boolean | products$product_variantsArgs<ExtArgs>
    brands?: boolean | products$brandsArgs<ExtArgs>
    _count?: boolean | ProductsCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $productsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "products"
    objects: {
      product_variants: Prisma.$product_variantsPayload<ExtArgs>[]
      brands: Prisma.$brandsPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      description: string | null
      brand_id: number | null
      created_at: Date
      updated_at: Date
      base_price: number | null
    }, ExtArgs["result"]["products"]>
    composites: {}
  }

  type productsGetPayload<S extends boolean | null | undefined | productsDefaultArgs> = $Result.GetResult<Prisma.$productsPayload, S>

  type productsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<productsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductsCountAggregateInputType | true
    }

  export interface productsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['products'], meta: { name: 'products' } }
    /**
     * Find zero or one Products that matches the filter.
     * @param {productsFindUniqueArgs} args - Arguments to find a Products
     * @example
     * // Get one Products
     * const products = await prisma.products.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends productsFindUniqueArgs>(args: SelectSubset<T, productsFindUniqueArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Products that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {productsFindUniqueOrThrowArgs} args - Arguments to find a Products
     * @example
     * // Get one Products
     * const products = await prisma.products.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends productsFindUniqueOrThrowArgs>(args: SelectSubset<T, productsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsFindFirstArgs} args - Arguments to find a Products
     * @example
     * // Get one Products
     * const products = await prisma.products.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends productsFindFirstArgs>(args?: SelectSubset<T, productsFindFirstArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Products that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsFindFirstOrThrowArgs} args - Arguments to find a Products
     * @example
     * // Get one Products
     * const products = await prisma.products.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends productsFindFirstOrThrowArgs>(args?: SelectSubset<T, productsFindFirstOrThrowArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Products
     * const products = await prisma.products.findMany()
     * 
     * // Get first 10 Products
     * const products = await prisma.products.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productsWithIdOnly = await prisma.products.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends productsFindManyArgs>(args?: SelectSubset<T, productsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Products.
     * @param {productsCreateArgs} args - Arguments to create a Products.
     * @example
     * // Create one Products
     * const Products = await prisma.products.create({
     *   data: {
     *     // ... data to create a Products
     *   }
     * })
     * 
     */
    create<T extends productsCreateArgs>(args: SelectSubset<T, productsCreateArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Products.
     * @param {productsCreateManyArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const products = await prisma.products.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends productsCreateManyArgs>(args?: SelectSubset<T, productsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Products.
     * @param {productsDeleteArgs} args - Arguments to delete one Products.
     * @example
     * // Delete one Products
     * const Products = await prisma.products.delete({
     *   where: {
     *     // ... filter to delete one Products
     *   }
     * })
     * 
     */
    delete<T extends productsDeleteArgs>(args: SelectSubset<T, productsDeleteArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Products.
     * @param {productsUpdateArgs} args - Arguments to update one Products.
     * @example
     * // Update one Products
     * const products = await prisma.products.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends productsUpdateArgs>(args: SelectSubset<T, productsUpdateArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Products.
     * @param {productsDeleteManyArgs} args - Arguments to filter Products to delete.
     * @example
     * // Delete a few Products
     * const { count } = await prisma.products.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends productsDeleteManyArgs>(args?: SelectSubset<T, productsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Products
     * const products = await prisma.products.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends productsUpdateManyArgs>(args: SelectSubset<T, productsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Products.
     * @param {productsUpsertArgs} args - Arguments to update or create a Products.
     * @example
     * // Update or create a Products
     * const products = await prisma.products.upsert({
     *   create: {
     *     // ... data to create a Products
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Products we want to update
     *   }
     * })
     */
    upsert<T extends productsUpsertArgs>(args: SelectSubset<T, productsUpsertArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsCountArgs} args - Arguments to filter Products to count.
     * @example
     * // Count the number of Products
     * const count = await prisma.products.count({
     *   where: {
     *     // ... the filter for the Products we want to count
     *   }
     * })
    **/
    count<T extends productsCountArgs>(
      args?: Subset<T, productsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductsAggregateArgs>(args: Subset<T, ProductsAggregateArgs>): Prisma.PrismaPromise<GetProductsAggregateType<T>>

    /**
     * Group by Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends productsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: productsGroupByArgs['orderBy'] }
        : { orderBy?: productsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, productsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the products model
   */
  readonly fields: productsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for products.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__productsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product_variants<T extends products$product_variantsArgs<ExtArgs> = {}>(args?: Subset<T, products$product_variantsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$product_variantsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    brands<T extends products$brandsArgs<ExtArgs> = {}>(args?: Subset<T, products$brandsArgs<ExtArgs>>): Prisma__brandsClient<$Result.GetResult<Prisma.$brandsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the products model
   */
  interface productsFieldRefs {
    readonly id: FieldRef<"products", 'Int'>
    readonly name: FieldRef<"products", 'String'>
    readonly description: FieldRef<"products", 'String'>
    readonly brand_id: FieldRef<"products", 'Int'>
    readonly created_at: FieldRef<"products", 'DateTime'>
    readonly updated_at: FieldRef<"products", 'DateTime'>
    readonly base_price: FieldRef<"products", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * products findUnique
   */
  export type productsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * Filter, which products to fetch.
     */
    where: productsWhereUniqueInput
  }

  /**
   * products findUniqueOrThrow
   */
  export type productsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * Filter, which products to fetch.
     */
    where: productsWhereUniqueInput
  }

  /**
   * products findFirst
   */
  export type productsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * Filter, which products to fetch.
     */
    where?: productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of products to fetch.
     */
    orderBy?: productsOrderByWithRelationInput | productsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for products.
     */
    cursor?: productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of products.
     */
    distinct?: ProductsScalarFieldEnum | ProductsScalarFieldEnum[]
  }

  /**
   * products findFirstOrThrow
   */
  export type productsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * Filter, which products to fetch.
     */
    where?: productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of products to fetch.
     */
    orderBy?: productsOrderByWithRelationInput | productsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for products.
     */
    cursor?: productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of products.
     */
    distinct?: ProductsScalarFieldEnum | ProductsScalarFieldEnum[]
  }

  /**
   * products findMany
   */
  export type productsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * Filter, which products to fetch.
     */
    where?: productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of products to fetch.
     */
    orderBy?: productsOrderByWithRelationInput | productsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing products.
     */
    cursor?: productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` products.
     */
    skip?: number
    distinct?: ProductsScalarFieldEnum | ProductsScalarFieldEnum[]
  }

  /**
   * products create
   */
  export type productsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * The data needed to create a products.
     */
    data: XOR<productsCreateInput, productsUncheckedCreateInput>
  }

  /**
   * products createMany
   */
  export type productsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many products.
     */
    data: productsCreateManyInput | productsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * products update
   */
  export type productsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * The data needed to update a products.
     */
    data: XOR<productsUpdateInput, productsUncheckedUpdateInput>
    /**
     * Choose, which products to update.
     */
    where: productsWhereUniqueInput
  }

  /**
   * products updateMany
   */
  export type productsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update products.
     */
    data: XOR<productsUpdateManyMutationInput, productsUncheckedUpdateManyInput>
    /**
     * Filter which products to update
     */
    where?: productsWhereInput
    /**
     * Limit how many products to update.
     */
    limit?: number
  }

  /**
   * products upsert
   */
  export type productsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * The filter to search for the products to update in case it exists.
     */
    where: productsWhereUniqueInput
    /**
     * In case the products found by the `where` argument doesn't exist, create a new products with this data.
     */
    create: XOR<productsCreateInput, productsUncheckedCreateInput>
    /**
     * In case the products was found with the provided `where` argument, update it with this data.
     */
    update: XOR<productsUpdateInput, productsUncheckedUpdateInput>
  }

  /**
   * products delete
   */
  export type productsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * Filter which products to delete.
     */
    where: productsWhereUniqueInput
  }

  /**
   * products deleteMany
   */
  export type productsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which products to delete
     */
    where?: productsWhereInput
    /**
     * Limit how many products to delete.
     */
    limit?: number
  }

  /**
   * products.product_variants
   */
  export type products$product_variantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_variants
     */
    select?: product_variantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the product_variants
     */
    omit?: product_variantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_variantsInclude<ExtArgs> | null
    where?: product_variantsWhereInput
    orderBy?: product_variantsOrderByWithRelationInput | product_variantsOrderByWithRelationInput[]
    cursor?: product_variantsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Product_variantsScalarFieldEnum | Product_variantsScalarFieldEnum[]
  }

  /**
   * products.brands
   */
  export type products$brandsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the brands
     */
    select?: brandsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the brands
     */
    omit?: brandsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: brandsInclude<ExtArgs> | null
    where?: brandsWhereInput
  }

  /**
   * products without action
   */
  export type productsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
  }


  /**
   * Model promotion_variants
   */

  export type AggregatePromotion_variants = {
    _count: Promotion_variantsCountAggregateOutputType | null
    _avg: Promotion_variantsAvgAggregateOutputType | null
    _sum: Promotion_variantsSumAggregateOutputType | null
    _min: Promotion_variantsMinAggregateOutputType | null
    _max: Promotion_variantsMaxAggregateOutputType | null
  }

  export type Promotion_variantsAvgAggregateOutputType = {
    promotion_id: number | null
    variant_id: number | null
    promotion_price: number | null
    stock_limit: number | null
  }

  export type Promotion_variantsSumAggregateOutputType = {
    promotion_id: number | null
    variant_id: number | null
    promotion_price: number | null
    stock_limit: number | null
  }

  export type Promotion_variantsMinAggregateOutputType = {
    promotion_id: number | null
    variant_id: number | null
    promotion_price: number | null
    stock_limit: number | null
    created_at: Date | null
  }

  export type Promotion_variantsMaxAggregateOutputType = {
    promotion_id: number | null
    variant_id: number | null
    promotion_price: number | null
    stock_limit: number | null
    created_at: Date | null
  }

  export type Promotion_variantsCountAggregateOutputType = {
    promotion_id: number
    variant_id: number
    promotion_price: number
    stock_limit: number
    created_at: number
    _all: number
  }


  export type Promotion_variantsAvgAggregateInputType = {
    promotion_id?: true
    variant_id?: true
    promotion_price?: true
    stock_limit?: true
  }

  export type Promotion_variantsSumAggregateInputType = {
    promotion_id?: true
    variant_id?: true
    promotion_price?: true
    stock_limit?: true
  }

  export type Promotion_variantsMinAggregateInputType = {
    promotion_id?: true
    variant_id?: true
    promotion_price?: true
    stock_limit?: true
    created_at?: true
  }

  export type Promotion_variantsMaxAggregateInputType = {
    promotion_id?: true
    variant_id?: true
    promotion_price?: true
    stock_limit?: true
    created_at?: true
  }

  export type Promotion_variantsCountAggregateInputType = {
    promotion_id?: true
    variant_id?: true
    promotion_price?: true
    stock_limit?: true
    created_at?: true
    _all?: true
  }

  export type Promotion_variantsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which promotion_variants to aggregate.
     */
    where?: promotion_variantsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of promotion_variants to fetch.
     */
    orderBy?: promotion_variantsOrderByWithRelationInput | promotion_variantsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: promotion_variantsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` promotion_variants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` promotion_variants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned promotion_variants
    **/
    _count?: true | Promotion_variantsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Promotion_variantsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Promotion_variantsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Promotion_variantsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Promotion_variantsMaxAggregateInputType
  }

  export type GetPromotion_variantsAggregateType<T extends Promotion_variantsAggregateArgs> = {
        [P in keyof T & keyof AggregatePromotion_variants]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePromotion_variants[P]>
      : GetScalarType<T[P], AggregatePromotion_variants[P]>
  }




  export type promotion_variantsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: promotion_variantsWhereInput
    orderBy?: promotion_variantsOrderByWithAggregationInput | promotion_variantsOrderByWithAggregationInput[]
    by: Promotion_variantsScalarFieldEnum[] | Promotion_variantsScalarFieldEnum
    having?: promotion_variantsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Promotion_variantsCountAggregateInputType | true
    _avg?: Promotion_variantsAvgAggregateInputType
    _sum?: Promotion_variantsSumAggregateInputType
    _min?: Promotion_variantsMinAggregateInputType
    _max?: Promotion_variantsMaxAggregateInputType
  }

  export type Promotion_variantsGroupByOutputType = {
    promotion_id: number
    variant_id: number
    promotion_price: number | null
    stock_limit: number | null
    created_at: Date
    _count: Promotion_variantsCountAggregateOutputType | null
    _avg: Promotion_variantsAvgAggregateOutputType | null
    _sum: Promotion_variantsSumAggregateOutputType | null
    _min: Promotion_variantsMinAggregateOutputType | null
    _max: Promotion_variantsMaxAggregateOutputType | null
  }

  type GetPromotion_variantsGroupByPayload<T extends promotion_variantsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Promotion_variantsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Promotion_variantsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Promotion_variantsGroupByOutputType[P]>
            : GetScalarType<T[P], Promotion_variantsGroupByOutputType[P]>
        }
      >
    >


  export type promotion_variantsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    promotion_id?: boolean
    variant_id?: boolean
    promotion_price?: boolean
    stock_limit?: boolean
    created_at?: boolean
    promotions?: boolean | promotionsDefaultArgs<ExtArgs>
    product_variants?: boolean | product_variantsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["promotion_variants"]>



  export type promotion_variantsSelectScalar = {
    promotion_id?: boolean
    variant_id?: boolean
    promotion_price?: boolean
    stock_limit?: boolean
    created_at?: boolean
  }

  export type promotion_variantsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"promotion_id" | "variant_id" | "promotion_price" | "stock_limit" | "created_at", ExtArgs["result"]["promotion_variants"]>
  export type promotion_variantsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotions?: boolean | promotionsDefaultArgs<ExtArgs>
    product_variants?: boolean | product_variantsDefaultArgs<ExtArgs>
  }

  export type $promotion_variantsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "promotion_variants"
    objects: {
      promotions: Prisma.$promotionsPayload<ExtArgs>
      product_variants: Prisma.$product_variantsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      promotion_id: number
      variant_id: number
      promotion_price: number | null
      stock_limit: number | null
      created_at: Date
    }, ExtArgs["result"]["promotion_variants"]>
    composites: {}
  }

  type promotion_variantsGetPayload<S extends boolean | null | undefined | promotion_variantsDefaultArgs> = $Result.GetResult<Prisma.$promotion_variantsPayload, S>

  type promotion_variantsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<promotion_variantsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Promotion_variantsCountAggregateInputType | true
    }

  export interface promotion_variantsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['promotion_variants'], meta: { name: 'promotion_variants' } }
    /**
     * Find zero or one Promotion_variants that matches the filter.
     * @param {promotion_variantsFindUniqueArgs} args - Arguments to find a Promotion_variants
     * @example
     * // Get one Promotion_variants
     * const promotion_variants = await prisma.promotion_variants.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends promotion_variantsFindUniqueArgs>(args: SelectSubset<T, promotion_variantsFindUniqueArgs<ExtArgs>>): Prisma__promotion_variantsClient<$Result.GetResult<Prisma.$promotion_variantsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Promotion_variants that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {promotion_variantsFindUniqueOrThrowArgs} args - Arguments to find a Promotion_variants
     * @example
     * // Get one Promotion_variants
     * const promotion_variants = await prisma.promotion_variants.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends promotion_variantsFindUniqueOrThrowArgs>(args: SelectSubset<T, promotion_variantsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__promotion_variantsClient<$Result.GetResult<Prisma.$promotion_variantsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Promotion_variants that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {promotion_variantsFindFirstArgs} args - Arguments to find a Promotion_variants
     * @example
     * // Get one Promotion_variants
     * const promotion_variants = await prisma.promotion_variants.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends promotion_variantsFindFirstArgs>(args?: SelectSubset<T, promotion_variantsFindFirstArgs<ExtArgs>>): Prisma__promotion_variantsClient<$Result.GetResult<Prisma.$promotion_variantsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Promotion_variants that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {promotion_variantsFindFirstOrThrowArgs} args - Arguments to find a Promotion_variants
     * @example
     * // Get one Promotion_variants
     * const promotion_variants = await prisma.promotion_variants.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends promotion_variantsFindFirstOrThrowArgs>(args?: SelectSubset<T, promotion_variantsFindFirstOrThrowArgs<ExtArgs>>): Prisma__promotion_variantsClient<$Result.GetResult<Prisma.$promotion_variantsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Promotion_variants that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {promotion_variantsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Promotion_variants
     * const promotion_variants = await prisma.promotion_variants.findMany()
     * 
     * // Get first 10 Promotion_variants
     * const promotion_variants = await prisma.promotion_variants.findMany({ take: 10 })
     * 
     * // Only select the `promotion_id`
     * const promotion_variantsWithPromotion_idOnly = await prisma.promotion_variants.findMany({ select: { promotion_id: true } })
     * 
     */
    findMany<T extends promotion_variantsFindManyArgs>(args?: SelectSubset<T, promotion_variantsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$promotion_variantsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Promotion_variants.
     * @param {promotion_variantsCreateArgs} args - Arguments to create a Promotion_variants.
     * @example
     * // Create one Promotion_variants
     * const Promotion_variants = await prisma.promotion_variants.create({
     *   data: {
     *     // ... data to create a Promotion_variants
     *   }
     * })
     * 
     */
    create<T extends promotion_variantsCreateArgs>(args: SelectSubset<T, promotion_variantsCreateArgs<ExtArgs>>): Prisma__promotion_variantsClient<$Result.GetResult<Prisma.$promotion_variantsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Promotion_variants.
     * @param {promotion_variantsCreateManyArgs} args - Arguments to create many Promotion_variants.
     * @example
     * // Create many Promotion_variants
     * const promotion_variants = await prisma.promotion_variants.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends promotion_variantsCreateManyArgs>(args?: SelectSubset<T, promotion_variantsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Promotion_variants.
     * @param {promotion_variantsDeleteArgs} args - Arguments to delete one Promotion_variants.
     * @example
     * // Delete one Promotion_variants
     * const Promotion_variants = await prisma.promotion_variants.delete({
     *   where: {
     *     // ... filter to delete one Promotion_variants
     *   }
     * })
     * 
     */
    delete<T extends promotion_variantsDeleteArgs>(args: SelectSubset<T, promotion_variantsDeleteArgs<ExtArgs>>): Prisma__promotion_variantsClient<$Result.GetResult<Prisma.$promotion_variantsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Promotion_variants.
     * @param {promotion_variantsUpdateArgs} args - Arguments to update one Promotion_variants.
     * @example
     * // Update one Promotion_variants
     * const promotion_variants = await prisma.promotion_variants.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends promotion_variantsUpdateArgs>(args: SelectSubset<T, promotion_variantsUpdateArgs<ExtArgs>>): Prisma__promotion_variantsClient<$Result.GetResult<Prisma.$promotion_variantsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Promotion_variants.
     * @param {promotion_variantsDeleteManyArgs} args - Arguments to filter Promotion_variants to delete.
     * @example
     * // Delete a few Promotion_variants
     * const { count } = await prisma.promotion_variants.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends promotion_variantsDeleteManyArgs>(args?: SelectSubset<T, promotion_variantsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Promotion_variants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {promotion_variantsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Promotion_variants
     * const promotion_variants = await prisma.promotion_variants.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends promotion_variantsUpdateManyArgs>(args: SelectSubset<T, promotion_variantsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Promotion_variants.
     * @param {promotion_variantsUpsertArgs} args - Arguments to update or create a Promotion_variants.
     * @example
     * // Update or create a Promotion_variants
     * const promotion_variants = await prisma.promotion_variants.upsert({
     *   create: {
     *     // ... data to create a Promotion_variants
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Promotion_variants we want to update
     *   }
     * })
     */
    upsert<T extends promotion_variantsUpsertArgs>(args: SelectSubset<T, promotion_variantsUpsertArgs<ExtArgs>>): Prisma__promotion_variantsClient<$Result.GetResult<Prisma.$promotion_variantsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Promotion_variants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {promotion_variantsCountArgs} args - Arguments to filter Promotion_variants to count.
     * @example
     * // Count the number of Promotion_variants
     * const count = await prisma.promotion_variants.count({
     *   where: {
     *     // ... the filter for the Promotion_variants we want to count
     *   }
     * })
    **/
    count<T extends promotion_variantsCountArgs>(
      args?: Subset<T, promotion_variantsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Promotion_variantsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Promotion_variants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Promotion_variantsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Promotion_variantsAggregateArgs>(args: Subset<T, Promotion_variantsAggregateArgs>): Prisma.PrismaPromise<GetPromotion_variantsAggregateType<T>>

    /**
     * Group by Promotion_variants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {promotion_variantsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends promotion_variantsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: promotion_variantsGroupByArgs['orderBy'] }
        : { orderBy?: promotion_variantsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, promotion_variantsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPromotion_variantsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the promotion_variants model
   */
  readonly fields: promotion_variantsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for promotion_variants.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__promotion_variantsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    promotions<T extends promotionsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, promotionsDefaultArgs<ExtArgs>>): Prisma__promotionsClient<$Result.GetResult<Prisma.$promotionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    product_variants<T extends product_variantsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, product_variantsDefaultArgs<ExtArgs>>): Prisma__product_variantsClient<$Result.GetResult<Prisma.$product_variantsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the promotion_variants model
   */
  interface promotion_variantsFieldRefs {
    readonly promotion_id: FieldRef<"promotion_variants", 'Int'>
    readonly variant_id: FieldRef<"promotion_variants", 'Int'>
    readonly promotion_price: FieldRef<"promotion_variants", 'Decimal'>
    readonly stock_limit: FieldRef<"promotion_variants", 'Int'>
    readonly created_at: FieldRef<"promotion_variants", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * promotion_variants findUnique
   */
  export type promotion_variantsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promotion_variants
     */
    select?: promotion_variantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promotion_variants
     */
    omit?: promotion_variantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promotion_variantsInclude<ExtArgs> | null
    /**
     * Filter, which promotion_variants to fetch.
     */
    where: promotion_variantsWhereUniqueInput
  }

  /**
   * promotion_variants findUniqueOrThrow
   */
  export type promotion_variantsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promotion_variants
     */
    select?: promotion_variantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promotion_variants
     */
    omit?: promotion_variantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promotion_variantsInclude<ExtArgs> | null
    /**
     * Filter, which promotion_variants to fetch.
     */
    where: promotion_variantsWhereUniqueInput
  }

  /**
   * promotion_variants findFirst
   */
  export type promotion_variantsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promotion_variants
     */
    select?: promotion_variantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promotion_variants
     */
    omit?: promotion_variantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promotion_variantsInclude<ExtArgs> | null
    /**
     * Filter, which promotion_variants to fetch.
     */
    where?: promotion_variantsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of promotion_variants to fetch.
     */
    orderBy?: promotion_variantsOrderByWithRelationInput | promotion_variantsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for promotion_variants.
     */
    cursor?: promotion_variantsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` promotion_variants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` promotion_variants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of promotion_variants.
     */
    distinct?: Promotion_variantsScalarFieldEnum | Promotion_variantsScalarFieldEnum[]
  }

  /**
   * promotion_variants findFirstOrThrow
   */
  export type promotion_variantsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promotion_variants
     */
    select?: promotion_variantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promotion_variants
     */
    omit?: promotion_variantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promotion_variantsInclude<ExtArgs> | null
    /**
     * Filter, which promotion_variants to fetch.
     */
    where?: promotion_variantsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of promotion_variants to fetch.
     */
    orderBy?: promotion_variantsOrderByWithRelationInput | promotion_variantsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for promotion_variants.
     */
    cursor?: promotion_variantsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` promotion_variants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` promotion_variants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of promotion_variants.
     */
    distinct?: Promotion_variantsScalarFieldEnum | Promotion_variantsScalarFieldEnum[]
  }

  /**
   * promotion_variants findMany
   */
  export type promotion_variantsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promotion_variants
     */
    select?: promotion_variantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promotion_variants
     */
    omit?: promotion_variantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promotion_variantsInclude<ExtArgs> | null
    /**
     * Filter, which promotion_variants to fetch.
     */
    where?: promotion_variantsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of promotion_variants to fetch.
     */
    orderBy?: promotion_variantsOrderByWithRelationInput | promotion_variantsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing promotion_variants.
     */
    cursor?: promotion_variantsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` promotion_variants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` promotion_variants.
     */
    skip?: number
    distinct?: Promotion_variantsScalarFieldEnum | Promotion_variantsScalarFieldEnum[]
  }

  /**
   * promotion_variants create
   */
  export type promotion_variantsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promotion_variants
     */
    select?: promotion_variantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promotion_variants
     */
    omit?: promotion_variantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promotion_variantsInclude<ExtArgs> | null
    /**
     * The data needed to create a promotion_variants.
     */
    data: XOR<promotion_variantsCreateInput, promotion_variantsUncheckedCreateInput>
  }

  /**
   * promotion_variants createMany
   */
  export type promotion_variantsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many promotion_variants.
     */
    data: promotion_variantsCreateManyInput | promotion_variantsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * promotion_variants update
   */
  export type promotion_variantsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promotion_variants
     */
    select?: promotion_variantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promotion_variants
     */
    omit?: promotion_variantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promotion_variantsInclude<ExtArgs> | null
    /**
     * The data needed to update a promotion_variants.
     */
    data: XOR<promotion_variantsUpdateInput, promotion_variantsUncheckedUpdateInput>
    /**
     * Choose, which promotion_variants to update.
     */
    where: promotion_variantsWhereUniqueInput
  }

  /**
   * promotion_variants updateMany
   */
  export type promotion_variantsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update promotion_variants.
     */
    data: XOR<promotion_variantsUpdateManyMutationInput, promotion_variantsUncheckedUpdateManyInput>
    /**
     * Filter which promotion_variants to update
     */
    where?: promotion_variantsWhereInput
    /**
     * Limit how many promotion_variants to update.
     */
    limit?: number
  }

  /**
   * promotion_variants upsert
   */
  export type promotion_variantsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promotion_variants
     */
    select?: promotion_variantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promotion_variants
     */
    omit?: promotion_variantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promotion_variantsInclude<ExtArgs> | null
    /**
     * The filter to search for the promotion_variants to update in case it exists.
     */
    where: promotion_variantsWhereUniqueInput
    /**
     * In case the promotion_variants found by the `where` argument doesn't exist, create a new promotion_variants with this data.
     */
    create: XOR<promotion_variantsCreateInput, promotion_variantsUncheckedCreateInput>
    /**
     * In case the promotion_variants was found with the provided `where` argument, update it with this data.
     */
    update: XOR<promotion_variantsUpdateInput, promotion_variantsUncheckedUpdateInput>
  }

  /**
   * promotion_variants delete
   */
  export type promotion_variantsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promotion_variants
     */
    select?: promotion_variantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promotion_variants
     */
    omit?: promotion_variantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promotion_variantsInclude<ExtArgs> | null
    /**
     * Filter which promotion_variants to delete.
     */
    where: promotion_variantsWhereUniqueInput
  }

  /**
   * promotion_variants deleteMany
   */
  export type promotion_variantsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which promotion_variants to delete
     */
    where?: promotion_variantsWhereInput
    /**
     * Limit how many promotion_variants to delete.
     */
    limit?: number
  }

  /**
   * promotion_variants without action
   */
  export type promotion_variantsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promotion_variants
     */
    select?: promotion_variantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promotion_variants
     */
    omit?: promotion_variantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promotion_variantsInclude<ExtArgs> | null
  }


  /**
   * Model promotions
   */

  export type AggregatePromotions = {
    _count: PromotionsCountAggregateOutputType | null
    _avg: PromotionsAvgAggregateOutputType | null
    _sum: PromotionsSumAggregateOutputType | null
    _min: PromotionsMinAggregateOutputType | null
    _max: PromotionsMaxAggregateOutputType | null
  }

  export type PromotionsAvgAggregateOutputType = {
    id: number | null
    discount_value: number | null
    min_purchase_amount: number | null
  }

  export type PromotionsSumAggregateOutputType = {
    id: number | null
    discount_value: number | null
    min_purchase_amount: number | null
  }

  export type PromotionsMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    start_date: Date | null
    end_date: Date | null
    discount_type: $Enums.promotions_discount_type | null
    discount_value: number | null
    min_purchase_amount: number | null
    is_active: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type PromotionsMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    start_date: Date | null
    end_date: Date | null
    discount_type: $Enums.promotions_discount_type | null
    discount_value: number | null
    min_purchase_amount: number | null
    is_active: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type PromotionsCountAggregateOutputType = {
    id: number
    name: number
    description: number
    start_date: number
    end_date: number
    discount_type: number
    discount_value: number
    min_purchase_amount: number
    is_active: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type PromotionsAvgAggregateInputType = {
    id?: true
    discount_value?: true
    min_purchase_amount?: true
  }

  export type PromotionsSumAggregateInputType = {
    id?: true
    discount_value?: true
    min_purchase_amount?: true
  }

  export type PromotionsMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    start_date?: true
    end_date?: true
    discount_type?: true
    discount_value?: true
    min_purchase_amount?: true
    is_active?: true
    created_at?: true
    updated_at?: true
  }

  export type PromotionsMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    start_date?: true
    end_date?: true
    discount_type?: true
    discount_value?: true
    min_purchase_amount?: true
    is_active?: true
    created_at?: true
    updated_at?: true
  }

  export type PromotionsCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    start_date?: true
    end_date?: true
    discount_type?: true
    discount_value?: true
    min_purchase_amount?: true
    is_active?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type PromotionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which promotions to aggregate.
     */
    where?: promotionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of promotions to fetch.
     */
    orderBy?: promotionsOrderByWithRelationInput | promotionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: promotionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` promotions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` promotions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned promotions
    **/
    _count?: true | PromotionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PromotionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PromotionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PromotionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PromotionsMaxAggregateInputType
  }

  export type GetPromotionsAggregateType<T extends PromotionsAggregateArgs> = {
        [P in keyof T & keyof AggregatePromotions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePromotions[P]>
      : GetScalarType<T[P], AggregatePromotions[P]>
  }




  export type promotionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: promotionsWhereInput
    orderBy?: promotionsOrderByWithAggregationInput | promotionsOrderByWithAggregationInput[]
    by: PromotionsScalarFieldEnum[] | PromotionsScalarFieldEnum
    having?: promotionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PromotionsCountAggregateInputType | true
    _avg?: PromotionsAvgAggregateInputType
    _sum?: PromotionsSumAggregateInputType
    _min?: PromotionsMinAggregateInputType
    _max?: PromotionsMaxAggregateInputType
  }

  export type PromotionsGroupByOutputType = {
    id: number
    name: string
    description: string | null
    start_date: Date
    end_date: Date
    discount_type: $Enums.promotions_discount_type
    discount_value: number
    min_purchase_amount: number | null
    is_active: boolean | null
    created_at: Date
    updated_at: Date
    _count: PromotionsCountAggregateOutputType | null
    _avg: PromotionsAvgAggregateOutputType | null
    _sum: PromotionsSumAggregateOutputType | null
    _min: PromotionsMinAggregateOutputType | null
    _max: PromotionsMaxAggregateOutputType | null
  }

  type GetPromotionsGroupByPayload<T extends promotionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PromotionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PromotionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PromotionsGroupByOutputType[P]>
            : GetScalarType<T[P], PromotionsGroupByOutputType[P]>
        }
      >
    >


  export type promotionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    start_date?: boolean
    end_date?: boolean
    discount_type?: boolean
    discount_value?: boolean
    min_purchase_amount?: boolean
    is_active?: boolean
    created_at?: boolean
    updated_at?: boolean
    promotion_variants?: boolean | promotions$promotion_variantsArgs<ExtArgs>
    _count?: boolean | PromotionsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["promotions"]>



  export type promotionsSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    start_date?: boolean
    end_date?: boolean
    discount_type?: boolean
    discount_value?: boolean
    min_purchase_amount?: boolean
    is_active?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type promotionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "start_date" | "end_date" | "discount_type" | "discount_value" | "min_purchase_amount" | "is_active" | "created_at" | "updated_at", ExtArgs["result"]["promotions"]>
  export type promotionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotion_variants?: boolean | promotions$promotion_variantsArgs<ExtArgs>
    _count?: boolean | PromotionsCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $promotionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "promotions"
    objects: {
      promotion_variants: Prisma.$promotion_variantsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      description: string | null
      start_date: Date
      end_date: Date
      discount_type: $Enums.promotions_discount_type
      discount_value: number
      min_purchase_amount: number | null
      is_active: boolean | null
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["promotions"]>
    composites: {}
  }

  type promotionsGetPayload<S extends boolean | null | undefined | promotionsDefaultArgs> = $Result.GetResult<Prisma.$promotionsPayload, S>

  type promotionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<promotionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PromotionsCountAggregateInputType | true
    }

  export interface promotionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['promotions'], meta: { name: 'promotions' } }
    /**
     * Find zero or one Promotions that matches the filter.
     * @param {promotionsFindUniqueArgs} args - Arguments to find a Promotions
     * @example
     * // Get one Promotions
     * const promotions = await prisma.promotions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends promotionsFindUniqueArgs>(args: SelectSubset<T, promotionsFindUniqueArgs<ExtArgs>>): Prisma__promotionsClient<$Result.GetResult<Prisma.$promotionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Promotions that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {promotionsFindUniqueOrThrowArgs} args - Arguments to find a Promotions
     * @example
     * // Get one Promotions
     * const promotions = await prisma.promotions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends promotionsFindUniqueOrThrowArgs>(args: SelectSubset<T, promotionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__promotionsClient<$Result.GetResult<Prisma.$promotionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Promotions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {promotionsFindFirstArgs} args - Arguments to find a Promotions
     * @example
     * // Get one Promotions
     * const promotions = await prisma.promotions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends promotionsFindFirstArgs>(args?: SelectSubset<T, promotionsFindFirstArgs<ExtArgs>>): Prisma__promotionsClient<$Result.GetResult<Prisma.$promotionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Promotions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {promotionsFindFirstOrThrowArgs} args - Arguments to find a Promotions
     * @example
     * // Get one Promotions
     * const promotions = await prisma.promotions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends promotionsFindFirstOrThrowArgs>(args?: SelectSubset<T, promotionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__promotionsClient<$Result.GetResult<Prisma.$promotionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Promotions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {promotionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Promotions
     * const promotions = await prisma.promotions.findMany()
     * 
     * // Get first 10 Promotions
     * const promotions = await prisma.promotions.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const promotionsWithIdOnly = await prisma.promotions.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends promotionsFindManyArgs>(args?: SelectSubset<T, promotionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$promotionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Promotions.
     * @param {promotionsCreateArgs} args - Arguments to create a Promotions.
     * @example
     * // Create one Promotions
     * const Promotions = await prisma.promotions.create({
     *   data: {
     *     // ... data to create a Promotions
     *   }
     * })
     * 
     */
    create<T extends promotionsCreateArgs>(args: SelectSubset<T, promotionsCreateArgs<ExtArgs>>): Prisma__promotionsClient<$Result.GetResult<Prisma.$promotionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Promotions.
     * @param {promotionsCreateManyArgs} args - Arguments to create many Promotions.
     * @example
     * // Create many Promotions
     * const promotions = await prisma.promotions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends promotionsCreateManyArgs>(args?: SelectSubset<T, promotionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Promotions.
     * @param {promotionsDeleteArgs} args - Arguments to delete one Promotions.
     * @example
     * // Delete one Promotions
     * const Promotions = await prisma.promotions.delete({
     *   where: {
     *     // ... filter to delete one Promotions
     *   }
     * })
     * 
     */
    delete<T extends promotionsDeleteArgs>(args: SelectSubset<T, promotionsDeleteArgs<ExtArgs>>): Prisma__promotionsClient<$Result.GetResult<Prisma.$promotionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Promotions.
     * @param {promotionsUpdateArgs} args - Arguments to update one Promotions.
     * @example
     * // Update one Promotions
     * const promotions = await prisma.promotions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends promotionsUpdateArgs>(args: SelectSubset<T, promotionsUpdateArgs<ExtArgs>>): Prisma__promotionsClient<$Result.GetResult<Prisma.$promotionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Promotions.
     * @param {promotionsDeleteManyArgs} args - Arguments to filter Promotions to delete.
     * @example
     * // Delete a few Promotions
     * const { count } = await prisma.promotions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends promotionsDeleteManyArgs>(args?: SelectSubset<T, promotionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Promotions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {promotionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Promotions
     * const promotions = await prisma.promotions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends promotionsUpdateManyArgs>(args: SelectSubset<T, promotionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Promotions.
     * @param {promotionsUpsertArgs} args - Arguments to update or create a Promotions.
     * @example
     * // Update or create a Promotions
     * const promotions = await prisma.promotions.upsert({
     *   create: {
     *     // ... data to create a Promotions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Promotions we want to update
     *   }
     * })
     */
    upsert<T extends promotionsUpsertArgs>(args: SelectSubset<T, promotionsUpsertArgs<ExtArgs>>): Prisma__promotionsClient<$Result.GetResult<Prisma.$promotionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Promotions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {promotionsCountArgs} args - Arguments to filter Promotions to count.
     * @example
     * // Count the number of Promotions
     * const count = await prisma.promotions.count({
     *   where: {
     *     // ... the filter for the Promotions we want to count
     *   }
     * })
    **/
    count<T extends promotionsCountArgs>(
      args?: Subset<T, promotionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PromotionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Promotions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PromotionsAggregateArgs>(args: Subset<T, PromotionsAggregateArgs>): Prisma.PrismaPromise<GetPromotionsAggregateType<T>>

    /**
     * Group by Promotions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {promotionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends promotionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: promotionsGroupByArgs['orderBy'] }
        : { orderBy?: promotionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, promotionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPromotionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the promotions model
   */
  readonly fields: promotionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for promotions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__promotionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    promotion_variants<T extends promotions$promotion_variantsArgs<ExtArgs> = {}>(args?: Subset<T, promotions$promotion_variantsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$promotion_variantsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the promotions model
   */
  interface promotionsFieldRefs {
    readonly id: FieldRef<"promotions", 'Int'>
    readonly name: FieldRef<"promotions", 'String'>
    readonly description: FieldRef<"promotions", 'String'>
    readonly start_date: FieldRef<"promotions", 'DateTime'>
    readonly end_date: FieldRef<"promotions", 'DateTime'>
    readonly discount_type: FieldRef<"promotions", 'promotions_discount_type'>
    readonly discount_value: FieldRef<"promotions", 'Decimal'>
    readonly min_purchase_amount: FieldRef<"promotions", 'Decimal'>
    readonly is_active: FieldRef<"promotions", 'Boolean'>
    readonly created_at: FieldRef<"promotions", 'DateTime'>
    readonly updated_at: FieldRef<"promotions", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * promotions findUnique
   */
  export type promotionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promotions
     */
    select?: promotionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promotions
     */
    omit?: promotionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promotionsInclude<ExtArgs> | null
    /**
     * Filter, which promotions to fetch.
     */
    where: promotionsWhereUniqueInput
  }

  /**
   * promotions findUniqueOrThrow
   */
  export type promotionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promotions
     */
    select?: promotionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promotions
     */
    omit?: promotionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promotionsInclude<ExtArgs> | null
    /**
     * Filter, which promotions to fetch.
     */
    where: promotionsWhereUniqueInput
  }

  /**
   * promotions findFirst
   */
  export type promotionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promotions
     */
    select?: promotionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promotions
     */
    omit?: promotionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promotionsInclude<ExtArgs> | null
    /**
     * Filter, which promotions to fetch.
     */
    where?: promotionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of promotions to fetch.
     */
    orderBy?: promotionsOrderByWithRelationInput | promotionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for promotions.
     */
    cursor?: promotionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` promotions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` promotions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of promotions.
     */
    distinct?: PromotionsScalarFieldEnum | PromotionsScalarFieldEnum[]
  }

  /**
   * promotions findFirstOrThrow
   */
  export type promotionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promotions
     */
    select?: promotionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promotions
     */
    omit?: promotionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promotionsInclude<ExtArgs> | null
    /**
     * Filter, which promotions to fetch.
     */
    where?: promotionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of promotions to fetch.
     */
    orderBy?: promotionsOrderByWithRelationInput | promotionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for promotions.
     */
    cursor?: promotionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` promotions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` promotions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of promotions.
     */
    distinct?: PromotionsScalarFieldEnum | PromotionsScalarFieldEnum[]
  }

  /**
   * promotions findMany
   */
  export type promotionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promotions
     */
    select?: promotionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promotions
     */
    omit?: promotionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promotionsInclude<ExtArgs> | null
    /**
     * Filter, which promotions to fetch.
     */
    where?: promotionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of promotions to fetch.
     */
    orderBy?: promotionsOrderByWithRelationInput | promotionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing promotions.
     */
    cursor?: promotionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` promotions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` promotions.
     */
    skip?: number
    distinct?: PromotionsScalarFieldEnum | PromotionsScalarFieldEnum[]
  }

  /**
   * promotions create
   */
  export type promotionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promotions
     */
    select?: promotionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promotions
     */
    omit?: promotionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promotionsInclude<ExtArgs> | null
    /**
     * The data needed to create a promotions.
     */
    data: XOR<promotionsCreateInput, promotionsUncheckedCreateInput>
  }

  /**
   * promotions createMany
   */
  export type promotionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many promotions.
     */
    data: promotionsCreateManyInput | promotionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * promotions update
   */
  export type promotionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promotions
     */
    select?: promotionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promotions
     */
    omit?: promotionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promotionsInclude<ExtArgs> | null
    /**
     * The data needed to update a promotions.
     */
    data: XOR<promotionsUpdateInput, promotionsUncheckedUpdateInput>
    /**
     * Choose, which promotions to update.
     */
    where: promotionsWhereUniqueInput
  }

  /**
   * promotions updateMany
   */
  export type promotionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update promotions.
     */
    data: XOR<promotionsUpdateManyMutationInput, promotionsUncheckedUpdateManyInput>
    /**
     * Filter which promotions to update
     */
    where?: promotionsWhereInput
    /**
     * Limit how many promotions to update.
     */
    limit?: number
  }

  /**
   * promotions upsert
   */
  export type promotionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promotions
     */
    select?: promotionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promotions
     */
    omit?: promotionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promotionsInclude<ExtArgs> | null
    /**
     * The filter to search for the promotions to update in case it exists.
     */
    where: promotionsWhereUniqueInput
    /**
     * In case the promotions found by the `where` argument doesn't exist, create a new promotions with this data.
     */
    create: XOR<promotionsCreateInput, promotionsUncheckedCreateInput>
    /**
     * In case the promotions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<promotionsUpdateInput, promotionsUncheckedUpdateInput>
  }

  /**
   * promotions delete
   */
  export type promotionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promotions
     */
    select?: promotionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promotions
     */
    omit?: promotionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promotionsInclude<ExtArgs> | null
    /**
     * Filter which promotions to delete.
     */
    where: promotionsWhereUniqueInput
  }

  /**
   * promotions deleteMany
   */
  export type promotionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which promotions to delete
     */
    where?: promotionsWhereInput
    /**
     * Limit how many promotions to delete.
     */
    limit?: number
  }

  /**
   * promotions.promotion_variants
   */
  export type promotions$promotion_variantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promotion_variants
     */
    select?: promotion_variantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promotion_variants
     */
    omit?: promotion_variantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promotion_variantsInclude<ExtArgs> | null
    where?: promotion_variantsWhereInput
    orderBy?: promotion_variantsOrderByWithRelationInput | promotion_variantsOrderByWithRelationInput[]
    cursor?: promotion_variantsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Promotion_variantsScalarFieldEnum | Promotion_variantsScalarFieldEnum[]
  }

  /**
   * promotions without action
   */
  export type promotionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the promotions
     */
    select?: promotionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the promotions
     */
    omit?: promotionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: promotionsInclude<ExtArgs> | null
  }


  /**
   * Model rating_images
   */

  export type AggregateRating_images = {
    _count: Rating_imagesCountAggregateOutputType | null
    _avg: Rating_imagesAvgAggregateOutputType | null
    _sum: Rating_imagesSumAggregateOutputType | null
    _min: Rating_imagesMinAggregateOutputType | null
    _max: Rating_imagesMaxAggregateOutputType | null
  }

  export type Rating_imagesAvgAggregateOutputType = {
    id: number | null
    rating_id: number | null
  }

  export type Rating_imagesSumAggregateOutputType = {
    id: number | null
    rating_id: number | null
  }

  export type Rating_imagesMinAggregateOutputType = {
    id: number | null
    rating_id: number | null
    image_url: string | null
    created_at: Date | null
  }

  export type Rating_imagesMaxAggregateOutputType = {
    id: number | null
    rating_id: number | null
    image_url: string | null
    created_at: Date | null
  }

  export type Rating_imagesCountAggregateOutputType = {
    id: number
    rating_id: number
    image_url: number
    created_at: number
    _all: number
  }


  export type Rating_imagesAvgAggregateInputType = {
    id?: true
    rating_id?: true
  }

  export type Rating_imagesSumAggregateInputType = {
    id?: true
    rating_id?: true
  }

  export type Rating_imagesMinAggregateInputType = {
    id?: true
    rating_id?: true
    image_url?: true
    created_at?: true
  }

  export type Rating_imagesMaxAggregateInputType = {
    id?: true
    rating_id?: true
    image_url?: true
    created_at?: true
  }

  export type Rating_imagesCountAggregateInputType = {
    id?: true
    rating_id?: true
    image_url?: true
    created_at?: true
    _all?: true
  }

  export type Rating_imagesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which rating_images to aggregate.
     */
    where?: rating_imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of rating_images to fetch.
     */
    orderBy?: rating_imagesOrderByWithRelationInput | rating_imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: rating_imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` rating_images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` rating_images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned rating_images
    **/
    _count?: true | Rating_imagesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Rating_imagesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Rating_imagesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Rating_imagesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Rating_imagesMaxAggregateInputType
  }

  export type GetRating_imagesAggregateType<T extends Rating_imagesAggregateArgs> = {
        [P in keyof T & keyof AggregateRating_images]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRating_images[P]>
      : GetScalarType<T[P], AggregateRating_images[P]>
  }




  export type rating_imagesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: rating_imagesWhereInput
    orderBy?: rating_imagesOrderByWithAggregationInput | rating_imagesOrderByWithAggregationInput[]
    by: Rating_imagesScalarFieldEnum[] | Rating_imagesScalarFieldEnum
    having?: rating_imagesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Rating_imagesCountAggregateInputType | true
    _avg?: Rating_imagesAvgAggregateInputType
    _sum?: Rating_imagesSumAggregateInputType
    _min?: Rating_imagesMinAggregateInputType
    _max?: Rating_imagesMaxAggregateInputType
  }

  export type Rating_imagesGroupByOutputType = {
    id: number
    rating_id: number
    image_url: string
    created_at: Date
    _count: Rating_imagesCountAggregateOutputType | null
    _avg: Rating_imagesAvgAggregateOutputType | null
    _sum: Rating_imagesSumAggregateOutputType | null
    _min: Rating_imagesMinAggregateOutputType | null
    _max: Rating_imagesMaxAggregateOutputType | null
  }

  type GetRating_imagesGroupByPayload<T extends rating_imagesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Rating_imagesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Rating_imagesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Rating_imagesGroupByOutputType[P]>
            : GetScalarType<T[P], Rating_imagesGroupByOutputType[P]>
        }
      >
    >


  export type rating_imagesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    rating_id?: boolean
    image_url?: boolean
    created_at?: boolean
    variant_ratings?: boolean | variant_ratingsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["rating_images"]>



  export type rating_imagesSelectScalar = {
    id?: boolean
    rating_id?: boolean
    image_url?: boolean
    created_at?: boolean
  }

  export type rating_imagesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "rating_id" | "image_url" | "created_at", ExtArgs["result"]["rating_images"]>
  export type rating_imagesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    variant_ratings?: boolean | variant_ratingsDefaultArgs<ExtArgs>
  }

  export type $rating_imagesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "rating_images"
    objects: {
      variant_ratings: Prisma.$variant_ratingsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      rating_id: number
      image_url: string
      created_at: Date
    }, ExtArgs["result"]["rating_images"]>
    composites: {}
  }

  type rating_imagesGetPayload<S extends boolean | null | undefined | rating_imagesDefaultArgs> = $Result.GetResult<Prisma.$rating_imagesPayload, S>

  type rating_imagesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<rating_imagesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Rating_imagesCountAggregateInputType | true
    }

  export interface rating_imagesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['rating_images'], meta: { name: 'rating_images' } }
    /**
     * Find zero or one Rating_images that matches the filter.
     * @param {rating_imagesFindUniqueArgs} args - Arguments to find a Rating_images
     * @example
     * // Get one Rating_images
     * const rating_images = await prisma.rating_images.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends rating_imagesFindUniqueArgs>(args: SelectSubset<T, rating_imagesFindUniqueArgs<ExtArgs>>): Prisma__rating_imagesClient<$Result.GetResult<Prisma.$rating_imagesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Rating_images that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {rating_imagesFindUniqueOrThrowArgs} args - Arguments to find a Rating_images
     * @example
     * // Get one Rating_images
     * const rating_images = await prisma.rating_images.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends rating_imagesFindUniqueOrThrowArgs>(args: SelectSubset<T, rating_imagesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__rating_imagesClient<$Result.GetResult<Prisma.$rating_imagesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Rating_images that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rating_imagesFindFirstArgs} args - Arguments to find a Rating_images
     * @example
     * // Get one Rating_images
     * const rating_images = await prisma.rating_images.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends rating_imagesFindFirstArgs>(args?: SelectSubset<T, rating_imagesFindFirstArgs<ExtArgs>>): Prisma__rating_imagesClient<$Result.GetResult<Prisma.$rating_imagesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Rating_images that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rating_imagesFindFirstOrThrowArgs} args - Arguments to find a Rating_images
     * @example
     * // Get one Rating_images
     * const rating_images = await prisma.rating_images.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends rating_imagesFindFirstOrThrowArgs>(args?: SelectSubset<T, rating_imagesFindFirstOrThrowArgs<ExtArgs>>): Prisma__rating_imagesClient<$Result.GetResult<Prisma.$rating_imagesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Rating_images that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rating_imagesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Rating_images
     * const rating_images = await prisma.rating_images.findMany()
     * 
     * // Get first 10 Rating_images
     * const rating_images = await prisma.rating_images.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const rating_imagesWithIdOnly = await prisma.rating_images.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends rating_imagesFindManyArgs>(args?: SelectSubset<T, rating_imagesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rating_imagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Rating_images.
     * @param {rating_imagesCreateArgs} args - Arguments to create a Rating_images.
     * @example
     * // Create one Rating_images
     * const Rating_images = await prisma.rating_images.create({
     *   data: {
     *     // ... data to create a Rating_images
     *   }
     * })
     * 
     */
    create<T extends rating_imagesCreateArgs>(args: SelectSubset<T, rating_imagesCreateArgs<ExtArgs>>): Prisma__rating_imagesClient<$Result.GetResult<Prisma.$rating_imagesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Rating_images.
     * @param {rating_imagesCreateManyArgs} args - Arguments to create many Rating_images.
     * @example
     * // Create many Rating_images
     * const rating_images = await prisma.rating_images.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends rating_imagesCreateManyArgs>(args?: SelectSubset<T, rating_imagesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Rating_images.
     * @param {rating_imagesDeleteArgs} args - Arguments to delete one Rating_images.
     * @example
     * // Delete one Rating_images
     * const Rating_images = await prisma.rating_images.delete({
     *   where: {
     *     // ... filter to delete one Rating_images
     *   }
     * })
     * 
     */
    delete<T extends rating_imagesDeleteArgs>(args: SelectSubset<T, rating_imagesDeleteArgs<ExtArgs>>): Prisma__rating_imagesClient<$Result.GetResult<Prisma.$rating_imagesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Rating_images.
     * @param {rating_imagesUpdateArgs} args - Arguments to update one Rating_images.
     * @example
     * // Update one Rating_images
     * const rating_images = await prisma.rating_images.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends rating_imagesUpdateArgs>(args: SelectSubset<T, rating_imagesUpdateArgs<ExtArgs>>): Prisma__rating_imagesClient<$Result.GetResult<Prisma.$rating_imagesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Rating_images.
     * @param {rating_imagesDeleteManyArgs} args - Arguments to filter Rating_images to delete.
     * @example
     * // Delete a few Rating_images
     * const { count } = await prisma.rating_images.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends rating_imagesDeleteManyArgs>(args?: SelectSubset<T, rating_imagesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Rating_images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rating_imagesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Rating_images
     * const rating_images = await prisma.rating_images.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends rating_imagesUpdateManyArgs>(args: SelectSubset<T, rating_imagesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Rating_images.
     * @param {rating_imagesUpsertArgs} args - Arguments to update or create a Rating_images.
     * @example
     * // Update or create a Rating_images
     * const rating_images = await prisma.rating_images.upsert({
     *   create: {
     *     // ... data to create a Rating_images
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Rating_images we want to update
     *   }
     * })
     */
    upsert<T extends rating_imagesUpsertArgs>(args: SelectSubset<T, rating_imagesUpsertArgs<ExtArgs>>): Prisma__rating_imagesClient<$Result.GetResult<Prisma.$rating_imagesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Rating_images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rating_imagesCountArgs} args - Arguments to filter Rating_images to count.
     * @example
     * // Count the number of Rating_images
     * const count = await prisma.rating_images.count({
     *   where: {
     *     // ... the filter for the Rating_images we want to count
     *   }
     * })
    **/
    count<T extends rating_imagesCountArgs>(
      args?: Subset<T, rating_imagesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Rating_imagesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Rating_images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Rating_imagesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Rating_imagesAggregateArgs>(args: Subset<T, Rating_imagesAggregateArgs>): Prisma.PrismaPromise<GetRating_imagesAggregateType<T>>

    /**
     * Group by Rating_images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rating_imagesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends rating_imagesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: rating_imagesGroupByArgs['orderBy'] }
        : { orderBy?: rating_imagesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, rating_imagesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRating_imagesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the rating_images model
   */
  readonly fields: rating_imagesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for rating_images.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__rating_imagesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    variant_ratings<T extends variant_ratingsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, variant_ratingsDefaultArgs<ExtArgs>>): Prisma__variant_ratingsClient<$Result.GetResult<Prisma.$variant_ratingsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the rating_images model
   */
  interface rating_imagesFieldRefs {
    readonly id: FieldRef<"rating_images", 'Int'>
    readonly rating_id: FieldRef<"rating_images", 'Int'>
    readonly image_url: FieldRef<"rating_images", 'String'>
    readonly created_at: FieldRef<"rating_images", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * rating_images findUnique
   */
  export type rating_imagesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rating_images
     */
    select?: rating_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rating_images
     */
    omit?: rating_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rating_imagesInclude<ExtArgs> | null
    /**
     * Filter, which rating_images to fetch.
     */
    where: rating_imagesWhereUniqueInput
  }

  /**
   * rating_images findUniqueOrThrow
   */
  export type rating_imagesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rating_images
     */
    select?: rating_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rating_images
     */
    omit?: rating_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rating_imagesInclude<ExtArgs> | null
    /**
     * Filter, which rating_images to fetch.
     */
    where: rating_imagesWhereUniqueInput
  }

  /**
   * rating_images findFirst
   */
  export type rating_imagesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rating_images
     */
    select?: rating_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rating_images
     */
    omit?: rating_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rating_imagesInclude<ExtArgs> | null
    /**
     * Filter, which rating_images to fetch.
     */
    where?: rating_imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of rating_images to fetch.
     */
    orderBy?: rating_imagesOrderByWithRelationInput | rating_imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for rating_images.
     */
    cursor?: rating_imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` rating_images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` rating_images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of rating_images.
     */
    distinct?: Rating_imagesScalarFieldEnum | Rating_imagesScalarFieldEnum[]
  }

  /**
   * rating_images findFirstOrThrow
   */
  export type rating_imagesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rating_images
     */
    select?: rating_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rating_images
     */
    omit?: rating_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rating_imagesInclude<ExtArgs> | null
    /**
     * Filter, which rating_images to fetch.
     */
    where?: rating_imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of rating_images to fetch.
     */
    orderBy?: rating_imagesOrderByWithRelationInput | rating_imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for rating_images.
     */
    cursor?: rating_imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` rating_images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` rating_images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of rating_images.
     */
    distinct?: Rating_imagesScalarFieldEnum | Rating_imagesScalarFieldEnum[]
  }

  /**
   * rating_images findMany
   */
  export type rating_imagesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rating_images
     */
    select?: rating_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rating_images
     */
    omit?: rating_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rating_imagesInclude<ExtArgs> | null
    /**
     * Filter, which rating_images to fetch.
     */
    where?: rating_imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of rating_images to fetch.
     */
    orderBy?: rating_imagesOrderByWithRelationInput | rating_imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing rating_images.
     */
    cursor?: rating_imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` rating_images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` rating_images.
     */
    skip?: number
    distinct?: Rating_imagesScalarFieldEnum | Rating_imagesScalarFieldEnum[]
  }

  /**
   * rating_images create
   */
  export type rating_imagesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rating_images
     */
    select?: rating_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rating_images
     */
    omit?: rating_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rating_imagesInclude<ExtArgs> | null
    /**
     * The data needed to create a rating_images.
     */
    data: XOR<rating_imagesCreateInput, rating_imagesUncheckedCreateInput>
  }

  /**
   * rating_images createMany
   */
  export type rating_imagesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many rating_images.
     */
    data: rating_imagesCreateManyInput | rating_imagesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * rating_images update
   */
  export type rating_imagesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rating_images
     */
    select?: rating_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rating_images
     */
    omit?: rating_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rating_imagesInclude<ExtArgs> | null
    /**
     * The data needed to update a rating_images.
     */
    data: XOR<rating_imagesUpdateInput, rating_imagesUncheckedUpdateInput>
    /**
     * Choose, which rating_images to update.
     */
    where: rating_imagesWhereUniqueInput
  }

  /**
   * rating_images updateMany
   */
  export type rating_imagesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update rating_images.
     */
    data: XOR<rating_imagesUpdateManyMutationInput, rating_imagesUncheckedUpdateManyInput>
    /**
     * Filter which rating_images to update
     */
    where?: rating_imagesWhereInput
    /**
     * Limit how many rating_images to update.
     */
    limit?: number
  }

  /**
   * rating_images upsert
   */
  export type rating_imagesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rating_images
     */
    select?: rating_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rating_images
     */
    omit?: rating_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rating_imagesInclude<ExtArgs> | null
    /**
     * The filter to search for the rating_images to update in case it exists.
     */
    where: rating_imagesWhereUniqueInput
    /**
     * In case the rating_images found by the `where` argument doesn't exist, create a new rating_images with this data.
     */
    create: XOR<rating_imagesCreateInput, rating_imagesUncheckedCreateInput>
    /**
     * In case the rating_images was found with the provided `where` argument, update it with this data.
     */
    update: XOR<rating_imagesUpdateInput, rating_imagesUncheckedUpdateInput>
  }

  /**
   * rating_images delete
   */
  export type rating_imagesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rating_images
     */
    select?: rating_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rating_images
     */
    omit?: rating_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rating_imagesInclude<ExtArgs> | null
    /**
     * Filter which rating_images to delete.
     */
    where: rating_imagesWhereUniqueInput
  }

  /**
   * rating_images deleteMany
   */
  export type rating_imagesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which rating_images to delete
     */
    where?: rating_imagesWhereInput
    /**
     * Limit how many rating_images to delete.
     */
    limit?: number
  }

  /**
   * rating_images without action
   */
  export type rating_imagesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rating_images
     */
    select?: rating_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rating_images
     */
    omit?: rating_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rating_imagesInclude<ExtArgs> | null
  }


  /**
   * Model roles
   */

  export type AggregateRoles = {
    _count: RolesCountAggregateOutputType | null
    _avg: RolesAvgAggregateOutputType | null
    _sum: RolesSumAggregateOutputType | null
    _min: RolesMinAggregateOutputType | null
    _max: RolesMaxAggregateOutputType | null
  }

  export type RolesAvgAggregateOutputType = {
    id: number | null
  }

  export type RolesSumAggregateOutputType = {
    id: number | null
  }

  export type RolesMinAggregateOutputType = {
    id: number | null
    name: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type RolesMaxAggregateOutputType = {
    id: number | null
    name: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type RolesCountAggregateOutputType = {
    id: number
    name: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type RolesAvgAggregateInputType = {
    id?: true
  }

  export type RolesSumAggregateInputType = {
    id?: true
  }

  export type RolesMinAggregateInputType = {
    id?: true
    name?: true
    created_at?: true
    updated_at?: true
  }

  export type RolesMaxAggregateInputType = {
    id?: true
    name?: true
    created_at?: true
    updated_at?: true
  }

  export type RolesCountAggregateInputType = {
    id?: true
    name?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type RolesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which roles to aggregate.
     */
    where?: rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: rolesOrderByWithRelationInput | rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned roles
    **/
    _count?: true | RolesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RolesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RolesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RolesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RolesMaxAggregateInputType
  }

  export type GetRolesAggregateType<T extends RolesAggregateArgs> = {
        [P in keyof T & keyof AggregateRoles]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRoles[P]>
      : GetScalarType<T[P], AggregateRoles[P]>
  }




  export type rolesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: rolesWhereInput
    orderBy?: rolesOrderByWithAggregationInput | rolesOrderByWithAggregationInput[]
    by: RolesScalarFieldEnum[] | RolesScalarFieldEnum
    having?: rolesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RolesCountAggregateInputType | true
    _avg?: RolesAvgAggregateInputType
    _sum?: RolesSumAggregateInputType
    _min?: RolesMinAggregateInputType
    _max?: RolesMaxAggregateInputType
  }

  export type RolesGroupByOutputType = {
    id: number
    name: string
    created_at: Date
    updated_at: Date
    _count: RolesCountAggregateOutputType | null
    _avg: RolesAvgAggregateOutputType | null
    _sum: RolesSumAggregateOutputType | null
    _min: RolesMinAggregateOutputType | null
    _max: RolesMaxAggregateOutputType | null
  }

  type GetRolesGroupByPayload<T extends rolesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RolesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RolesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RolesGroupByOutputType[P]>
            : GetScalarType<T[P], RolesGroupByOutputType[P]>
        }
      >
    >


  export type rolesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    created_at?: boolean
    updated_at?: boolean
    roles_sections?: boolean | roles$roles_sectionsArgs<ExtArgs>
    users?: boolean | roles$usersArgs<ExtArgs>
    _count?: boolean | RolesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["roles"]>



  export type rolesSelectScalar = {
    id?: boolean
    name?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type rolesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "created_at" | "updated_at", ExtArgs["result"]["roles"]>
  export type rolesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    roles_sections?: boolean | roles$roles_sectionsArgs<ExtArgs>
    users?: boolean | roles$usersArgs<ExtArgs>
    _count?: boolean | RolesCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $rolesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "roles"
    objects: {
      roles_sections: Prisma.$roles_sectionsPayload<ExtArgs>[]
      users: Prisma.$usersPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["roles"]>
    composites: {}
  }

  type rolesGetPayload<S extends boolean | null | undefined | rolesDefaultArgs> = $Result.GetResult<Prisma.$rolesPayload, S>

  type rolesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<rolesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RolesCountAggregateInputType | true
    }

  export interface rolesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['roles'], meta: { name: 'roles' } }
    /**
     * Find zero or one Roles that matches the filter.
     * @param {rolesFindUniqueArgs} args - Arguments to find a Roles
     * @example
     * // Get one Roles
     * const roles = await prisma.roles.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends rolesFindUniqueArgs>(args: SelectSubset<T, rolesFindUniqueArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Roles that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {rolesFindUniqueOrThrowArgs} args - Arguments to find a Roles
     * @example
     * // Get one Roles
     * const roles = await prisma.roles.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends rolesFindUniqueOrThrowArgs>(args: SelectSubset<T, rolesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesFindFirstArgs} args - Arguments to find a Roles
     * @example
     * // Get one Roles
     * const roles = await prisma.roles.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends rolesFindFirstArgs>(args?: SelectSubset<T, rolesFindFirstArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Roles that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesFindFirstOrThrowArgs} args - Arguments to find a Roles
     * @example
     * // Get one Roles
     * const roles = await prisma.roles.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends rolesFindFirstOrThrowArgs>(args?: SelectSubset<T, rolesFindFirstOrThrowArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Roles
     * const roles = await prisma.roles.findMany()
     * 
     * // Get first 10 Roles
     * const roles = await prisma.roles.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const rolesWithIdOnly = await prisma.roles.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends rolesFindManyArgs>(args?: SelectSubset<T, rolesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Roles.
     * @param {rolesCreateArgs} args - Arguments to create a Roles.
     * @example
     * // Create one Roles
     * const Roles = await prisma.roles.create({
     *   data: {
     *     // ... data to create a Roles
     *   }
     * })
     * 
     */
    create<T extends rolesCreateArgs>(args: SelectSubset<T, rolesCreateArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Roles.
     * @param {rolesCreateManyArgs} args - Arguments to create many Roles.
     * @example
     * // Create many Roles
     * const roles = await prisma.roles.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends rolesCreateManyArgs>(args?: SelectSubset<T, rolesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Roles.
     * @param {rolesDeleteArgs} args - Arguments to delete one Roles.
     * @example
     * // Delete one Roles
     * const Roles = await prisma.roles.delete({
     *   where: {
     *     // ... filter to delete one Roles
     *   }
     * })
     * 
     */
    delete<T extends rolesDeleteArgs>(args: SelectSubset<T, rolesDeleteArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Roles.
     * @param {rolesUpdateArgs} args - Arguments to update one Roles.
     * @example
     * // Update one Roles
     * const roles = await prisma.roles.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends rolesUpdateArgs>(args: SelectSubset<T, rolesUpdateArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Roles.
     * @param {rolesDeleteManyArgs} args - Arguments to filter Roles to delete.
     * @example
     * // Delete a few Roles
     * const { count } = await prisma.roles.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends rolesDeleteManyArgs>(args?: SelectSubset<T, rolesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Roles
     * const roles = await prisma.roles.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends rolesUpdateManyArgs>(args: SelectSubset<T, rolesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Roles.
     * @param {rolesUpsertArgs} args - Arguments to update or create a Roles.
     * @example
     * // Update or create a Roles
     * const roles = await prisma.roles.upsert({
     *   create: {
     *     // ... data to create a Roles
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Roles we want to update
     *   }
     * })
     */
    upsert<T extends rolesUpsertArgs>(args: SelectSubset<T, rolesUpsertArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesCountArgs} args - Arguments to filter Roles to count.
     * @example
     * // Count the number of Roles
     * const count = await prisma.roles.count({
     *   where: {
     *     // ... the filter for the Roles we want to count
     *   }
     * })
    **/
    count<T extends rolesCountArgs>(
      args?: Subset<T, rolesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RolesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RolesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RolesAggregateArgs>(args: Subset<T, RolesAggregateArgs>): Prisma.PrismaPromise<GetRolesAggregateType<T>>

    /**
     * Group by Roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {rolesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends rolesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: rolesGroupByArgs['orderBy'] }
        : { orderBy?: rolesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, rolesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRolesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the roles model
   */
  readonly fields: rolesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for roles.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__rolesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    roles_sections<T extends roles$roles_sectionsArgs<ExtArgs> = {}>(args?: Subset<T, roles$roles_sectionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$roles_sectionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    users<T extends roles$usersArgs<ExtArgs> = {}>(args?: Subset<T, roles$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the roles model
   */
  interface rolesFieldRefs {
    readonly id: FieldRef<"roles", 'Int'>
    readonly name: FieldRef<"roles", 'String'>
    readonly created_at: FieldRef<"roles", 'DateTime'>
    readonly updated_at: FieldRef<"roles", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * roles findUnique
   */
  export type rolesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter, which roles to fetch.
     */
    where: rolesWhereUniqueInput
  }

  /**
   * roles findUniqueOrThrow
   */
  export type rolesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter, which roles to fetch.
     */
    where: rolesWhereUniqueInput
  }

  /**
   * roles findFirst
   */
  export type rolesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter, which roles to fetch.
     */
    where?: rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: rolesOrderByWithRelationInput | rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for roles.
     */
    cursor?: rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of roles.
     */
    distinct?: RolesScalarFieldEnum | RolesScalarFieldEnum[]
  }

  /**
   * roles findFirstOrThrow
   */
  export type rolesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter, which roles to fetch.
     */
    where?: rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: rolesOrderByWithRelationInput | rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for roles.
     */
    cursor?: rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of roles.
     */
    distinct?: RolesScalarFieldEnum | RolesScalarFieldEnum[]
  }

  /**
   * roles findMany
   */
  export type rolesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter, which roles to fetch.
     */
    where?: rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles to fetch.
     */
    orderBy?: rolesOrderByWithRelationInput | rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing roles.
     */
    cursor?: rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles.
     */
    skip?: number
    distinct?: RolesScalarFieldEnum | RolesScalarFieldEnum[]
  }

  /**
   * roles create
   */
  export type rolesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * The data needed to create a roles.
     */
    data: XOR<rolesCreateInput, rolesUncheckedCreateInput>
  }

  /**
   * roles createMany
   */
  export type rolesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many roles.
     */
    data: rolesCreateManyInput | rolesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * roles update
   */
  export type rolesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * The data needed to update a roles.
     */
    data: XOR<rolesUpdateInput, rolesUncheckedUpdateInput>
    /**
     * Choose, which roles to update.
     */
    where: rolesWhereUniqueInput
  }

  /**
   * roles updateMany
   */
  export type rolesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update roles.
     */
    data: XOR<rolesUpdateManyMutationInput, rolesUncheckedUpdateManyInput>
    /**
     * Filter which roles to update
     */
    where?: rolesWhereInput
    /**
     * Limit how many roles to update.
     */
    limit?: number
  }

  /**
   * roles upsert
   */
  export type rolesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * The filter to search for the roles to update in case it exists.
     */
    where: rolesWhereUniqueInput
    /**
     * In case the roles found by the `where` argument doesn't exist, create a new roles with this data.
     */
    create: XOR<rolesCreateInput, rolesUncheckedCreateInput>
    /**
     * In case the roles was found with the provided `where` argument, update it with this data.
     */
    update: XOR<rolesUpdateInput, rolesUncheckedUpdateInput>
  }

  /**
   * roles delete
   */
  export type rolesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    /**
     * Filter which roles to delete.
     */
    where: rolesWhereUniqueInput
  }

  /**
   * roles deleteMany
   */
  export type rolesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which roles to delete
     */
    where?: rolesWhereInput
    /**
     * Limit how many roles to delete.
     */
    limit?: number
  }

  /**
   * roles.roles_sections
   */
  export type roles$roles_sectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles_sections
     */
    select?: roles_sectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles_sections
     */
    omit?: roles_sectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roles_sectionsInclude<ExtArgs> | null
    where?: roles_sectionsWhereInput
    orderBy?: roles_sectionsOrderByWithRelationInput | roles_sectionsOrderByWithRelationInput[]
    cursor?: roles_sectionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Roles_sectionsScalarFieldEnum | Roles_sectionsScalarFieldEnum[]
  }

  /**
   * roles.users
   */
  export type roles$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    cursor?: usersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * roles without action
   */
  export type rolesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
  }


  /**
   * Model roles_sections
   */

  export type AggregateRoles_sections = {
    _count: Roles_sectionsCountAggregateOutputType | null
    _avg: Roles_sectionsAvgAggregateOutputType | null
    _sum: Roles_sectionsSumAggregateOutputType | null
    _min: Roles_sectionsMinAggregateOutputType | null
    _max: Roles_sectionsMaxAggregateOutputType | null
  }

  export type Roles_sectionsAvgAggregateOutputType = {
    id: number | null
    id_section: number | null
    id_rol: number | null
  }

  export type Roles_sectionsSumAggregateOutputType = {
    id: number | null
    id_section: number | null
    id_rol: number | null
  }

  export type Roles_sectionsMinAggregateOutputType = {
    id: number | null
    id_section: number | null
    id_rol: number | null
  }

  export type Roles_sectionsMaxAggregateOutputType = {
    id: number | null
    id_section: number | null
    id_rol: number | null
  }

  export type Roles_sectionsCountAggregateOutputType = {
    id: number
    id_section: number
    id_rol: number
    _all: number
  }


  export type Roles_sectionsAvgAggregateInputType = {
    id?: true
    id_section?: true
    id_rol?: true
  }

  export type Roles_sectionsSumAggregateInputType = {
    id?: true
    id_section?: true
    id_rol?: true
  }

  export type Roles_sectionsMinAggregateInputType = {
    id?: true
    id_section?: true
    id_rol?: true
  }

  export type Roles_sectionsMaxAggregateInputType = {
    id?: true
    id_section?: true
    id_rol?: true
  }

  export type Roles_sectionsCountAggregateInputType = {
    id?: true
    id_section?: true
    id_rol?: true
    _all?: true
  }

  export type Roles_sectionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which roles_sections to aggregate.
     */
    where?: roles_sectionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles_sections to fetch.
     */
    orderBy?: roles_sectionsOrderByWithRelationInput | roles_sectionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: roles_sectionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles_sections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles_sections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned roles_sections
    **/
    _count?: true | Roles_sectionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Roles_sectionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Roles_sectionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Roles_sectionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Roles_sectionsMaxAggregateInputType
  }

  export type GetRoles_sectionsAggregateType<T extends Roles_sectionsAggregateArgs> = {
        [P in keyof T & keyof AggregateRoles_sections]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRoles_sections[P]>
      : GetScalarType<T[P], AggregateRoles_sections[P]>
  }




  export type roles_sectionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: roles_sectionsWhereInput
    orderBy?: roles_sectionsOrderByWithAggregationInput | roles_sectionsOrderByWithAggregationInput[]
    by: Roles_sectionsScalarFieldEnum[] | Roles_sectionsScalarFieldEnum
    having?: roles_sectionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Roles_sectionsCountAggregateInputType | true
    _avg?: Roles_sectionsAvgAggregateInputType
    _sum?: Roles_sectionsSumAggregateInputType
    _min?: Roles_sectionsMinAggregateInputType
    _max?: Roles_sectionsMaxAggregateInputType
  }

  export type Roles_sectionsGroupByOutputType = {
    id: number
    id_section: number | null
    id_rol: number | null
    _count: Roles_sectionsCountAggregateOutputType | null
    _avg: Roles_sectionsAvgAggregateOutputType | null
    _sum: Roles_sectionsSumAggregateOutputType | null
    _min: Roles_sectionsMinAggregateOutputType | null
    _max: Roles_sectionsMaxAggregateOutputType | null
  }

  type GetRoles_sectionsGroupByPayload<T extends roles_sectionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Roles_sectionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Roles_sectionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Roles_sectionsGroupByOutputType[P]>
            : GetScalarType<T[P], Roles_sectionsGroupByOutputType[P]>
        }
      >
    >


  export type roles_sectionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_section?: boolean
    id_rol?: boolean
    sections?: boolean | roles_sections$sectionsArgs<ExtArgs>
    roles?: boolean | roles_sections$rolesArgs<ExtArgs>
  }, ExtArgs["result"]["roles_sections"]>



  export type roles_sectionsSelectScalar = {
    id?: boolean
    id_section?: boolean
    id_rol?: boolean
  }

  export type roles_sectionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "id_section" | "id_rol", ExtArgs["result"]["roles_sections"]>
  export type roles_sectionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sections?: boolean | roles_sections$sectionsArgs<ExtArgs>
    roles?: boolean | roles_sections$rolesArgs<ExtArgs>
  }

  export type $roles_sectionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "roles_sections"
    objects: {
      sections: Prisma.$sectionsPayload<ExtArgs> | null
      roles: Prisma.$rolesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_section: number | null
      id_rol: number | null
    }, ExtArgs["result"]["roles_sections"]>
    composites: {}
  }

  type roles_sectionsGetPayload<S extends boolean | null | undefined | roles_sectionsDefaultArgs> = $Result.GetResult<Prisma.$roles_sectionsPayload, S>

  type roles_sectionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<roles_sectionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Roles_sectionsCountAggregateInputType | true
    }

  export interface roles_sectionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['roles_sections'], meta: { name: 'roles_sections' } }
    /**
     * Find zero or one Roles_sections that matches the filter.
     * @param {roles_sectionsFindUniqueArgs} args - Arguments to find a Roles_sections
     * @example
     * // Get one Roles_sections
     * const roles_sections = await prisma.roles_sections.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends roles_sectionsFindUniqueArgs>(args: SelectSubset<T, roles_sectionsFindUniqueArgs<ExtArgs>>): Prisma__roles_sectionsClient<$Result.GetResult<Prisma.$roles_sectionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Roles_sections that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {roles_sectionsFindUniqueOrThrowArgs} args - Arguments to find a Roles_sections
     * @example
     * // Get one Roles_sections
     * const roles_sections = await prisma.roles_sections.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends roles_sectionsFindUniqueOrThrowArgs>(args: SelectSubset<T, roles_sectionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__roles_sectionsClient<$Result.GetResult<Prisma.$roles_sectionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Roles_sections that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {roles_sectionsFindFirstArgs} args - Arguments to find a Roles_sections
     * @example
     * // Get one Roles_sections
     * const roles_sections = await prisma.roles_sections.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends roles_sectionsFindFirstArgs>(args?: SelectSubset<T, roles_sectionsFindFirstArgs<ExtArgs>>): Prisma__roles_sectionsClient<$Result.GetResult<Prisma.$roles_sectionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Roles_sections that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {roles_sectionsFindFirstOrThrowArgs} args - Arguments to find a Roles_sections
     * @example
     * // Get one Roles_sections
     * const roles_sections = await prisma.roles_sections.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends roles_sectionsFindFirstOrThrowArgs>(args?: SelectSubset<T, roles_sectionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__roles_sectionsClient<$Result.GetResult<Prisma.$roles_sectionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Roles_sections that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {roles_sectionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Roles_sections
     * const roles_sections = await prisma.roles_sections.findMany()
     * 
     * // Get first 10 Roles_sections
     * const roles_sections = await prisma.roles_sections.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const roles_sectionsWithIdOnly = await prisma.roles_sections.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends roles_sectionsFindManyArgs>(args?: SelectSubset<T, roles_sectionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$roles_sectionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Roles_sections.
     * @param {roles_sectionsCreateArgs} args - Arguments to create a Roles_sections.
     * @example
     * // Create one Roles_sections
     * const Roles_sections = await prisma.roles_sections.create({
     *   data: {
     *     // ... data to create a Roles_sections
     *   }
     * })
     * 
     */
    create<T extends roles_sectionsCreateArgs>(args: SelectSubset<T, roles_sectionsCreateArgs<ExtArgs>>): Prisma__roles_sectionsClient<$Result.GetResult<Prisma.$roles_sectionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Roles_sections.
     * @param {roles_sectionsCreateManyArgs} args - Arguments to create many Roles_sections.
     * @example
     * // Create many Roles_sections
     * const roles_sections = await prisma.roles_sections.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends roles_sectionsCreateManyArgs>(args?: SelectSubset<T, roles_sectionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Roles_sections.
     * @param {roles_sectionsDeleteArgs} args - Arguments to delete one Roles_sections.
     * @example
     * // Delete one Roles_sections
     * const Roles_sections = await prisma.roles_sections.delete({
     *   where: {
     *     // ... filter to delete one Roles_sections
     *   }
     * })
     * 
     */
    delete<T extends roles_sectionsDeleteArgs>(args: SelectSubset<T, roles_sectionsDeleteArgs<ExtArgs>>): Prisma__roles_sectionsClient<$Result.GetResult<Prisma.$roles_sectionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Roles_sections.
     * @param {roles_sectionsUpdateArgs} args - Arguments to update one Roles_sections.
     * @example
     * // Update one Roles_sections
     * const roles_sections = await prisma.roles_sections.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends roles_sectionsUpdateArgs>(args: SelectSubset<T, roles_sectionsUpdateArgs<ExtArgs>>): Prisma__roles_sectionsClient<$Result.GetResult<Prisma.$roles_sectionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Roles_sections.
     * @param {roles_sectionsDeleteManyArgs} args - Arguments to filter Roles_sections to delete.
     * @example
     * // Delete a few Roles_sections
     * const { count } = await prisma.roles_sections.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends roles_sectionsDeleteManyArgs>(args?: SelectSubset<T, roles_sectionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Roles_sections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {roles_sectionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Roles_sections
     * const roles_sections = await prisma.roles_sections.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends roles_sectionsUpdateManyArgs>(args: SelectSubset<T, roles_sectionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Roles_sections.
     * @param {roles_sectionsUpsertArgs} args - Arguments to update or create a Roles_sections.
     * @example
     * // Update or create a Roles_sections
     * const roles_sections = await prisma.roles_sections.upsert({
     *   create: {
     *     // ... data to create a Roles_sections
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Roles_sections we want to update
     *   }
     * })
     */
    upsert<T extends roles_sectionsUpsertArgs>(args: SelectSubset<T, roles_sectionsUpsertArgs<ExtArgs>>): Prisma__roles_sectionsClient<$Result.GetResult<Prisma.$roles_sectionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Roles_sections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {roles_sectionsCountArgs} args - Arguments to filter Roles_sections to count.
     * @example
     * // Count the number of Roles_sections
     * const count = await prisma.roles_sections.count({
     *   where: {
     *     // ... the filter for the Roles_sections we want to count
     *   }
     * })
    **/
    count<T extends roles_sectionsCountArgs>(
      args?: Subset<T, roles_sectionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Roles_sectionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Roles_sections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Roles_sectionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Roles_sectionsAggregateArgs>(args: Subset<T, Roles_sectionsAggregateArgs>): Prisma.PrismaPromise<GetRoles_sectionsAggregateType<T>>

    /**
     * Group by Roles_sections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {roles_sectionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends roles_sectionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: roles_sectionsGroupByArgs['orderBy'] }
        : { orderBy?: roles_sectionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, roles_sectionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRoles_sectionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the roles_sections model
   */
  readonly fields: roles_sectionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for roles_sections.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__roles_sectionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sections<T extends roles_sections$sectionsArgs<ExtArgs> = {}>(args?: Subset<T, roles_sections$sectionsArgs<ExtArgs>>): Prisma__sectionsClient<$Result.GetResult<Prisma.$sectionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    roles<T extends roles_sections$rolesArgs<ExtArgs> = {}>(args?: Subset<T, roles_sections$rolesArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the roles_sections model
   */
  interface roles_sectionsFieldRefs {
    readonly id: FieldRef<"roles_sections", 'Int'>
    readonly id_section: FieldRef<"roles_sections", 'Int'>
    readonly id_rol: FieldRef<"roles_sections", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * roles_sections findUnique
   */
  export type roles_sectionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles_sections
     */
    select?: roles_sectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles_sections
     */
    omit?: roles_sectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roles_sectionsInclude<ExtArgs> | null
    /**
     * Filter, which roles_sections to fetch.
     */
    where: roles_sectionsWhereUniqueInput
  }

  /**
   * roles_sections findUniqueOrThrow
   */
  export type roles_sectionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles_sections
     */
    select?: roles_sectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles_sections
     */
    omit?: roles_sectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roles_sectionsInclude<ExtArgs> | null
    /**
     * Filter, which roles_sections to fetch.
     */
    where: roles_sectionsWhereUniqueInput
  }

  /**
   * roles_sections findFirst
   */
  export type roles_sectionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles_sections
     */
    select?: roles_sectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles_sections
     */
    omit?: roles_sectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roles_sectionsInclude<ExtArgs> | null
    /**
     * Filter, which roles_sections to fetch.
     */
    where?: roles_sectionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles_sections to fetch.
     */
    orderBy?: roles_sectionsOrderByWithRelationInput | roles_sectionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for roles_sections.
     */
    cursor?: roles_sectionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles_sections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles_sections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of roles_sections.
     */
    distinct?: Roles_sectionsScalarFieldEnum | Roles_sectionsScalarFieldEnum[]
  }

  /**
   * roles_sections findFirstOrThrow
   */
  export type roles_sectionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles_sections
     */
    select?: roles_sectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles_sections
     */
    omit?: roles_sectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roles_sectionsInclude<ExtArgs> | null
    /**
     * Filter, which roles_sections to fetch.
     */
    where?: roles_sectionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles_sections to fetch.
     */
    orderBy?: roles_sectionsOrderByWithRelationInput | roles_sectionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for roles_sections.
     */
    cursor?: roles_sectionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles_sections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles_sections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of roles_sections.
     */
    distinct?: Roles_sectionsScalarFieldEnum | Roles_sectionsScalarFieldEnum[]
  }

  /**
   * roles_sections findMany
   */
  export type roles_sectionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles_sections
     */
    select?: roles_sectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles_sections
     */
    omit?: roles_sectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roles_sectionsInclude<ExtArgs> | null
    /**
     * Filter, which roles_sections to fetch.
     */
    where?: roles_sectionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of roles_sections to fetch.
     */
    orderBy?: roles_sectionsOrderByWithRelationInput | roles_sectionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing roles_sections.
     */
    cursor?: roles_sectionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` roles_sections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` roles_sections.
     */
    skip?: number
    distinct?: Roles_sectionsScalarFieldEnum | Roles_sectionsScalarFieldEnum[]
  }

  /**
   * roles_sections create
   */
  export type roles_sectionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles_sections
     */
    select?: roles_sectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles_sections
     */
    omit?: roles_sectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roles_sectionsInclude<ExtArgs> | null
    /**
     * The data needed to create a roles_sections.
     */
    data?: XOR<roles_sectionsCreateInput, roles_sectionsUncheckedCreateInput>
  }

  /**
   * roles_sections createMany
   */
  export type roles_sectionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many roles_sections.
     */
    data: roles_sectionsCreateManyInput | roles_sectionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * roles_sections update
   */
  export type roles_sectionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles_sections
     */
    select?: roles_sectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles_sections
     */
    omit?: roles_sectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roles_sectionsInclude<ExtArgs> | null
    /**
     * The data needed to update a roles_sections.
     */
    data: XOR<roles_sectionsUpdateInput, roles_sectionsUncheckedUpdateInput>
    /**
     * Choose, which roles_sections to update.
     */
    where: roles_sectionsWhereUniqueInput
  }

  /**
   * roles_sections updateMany
   */
  export type roles_sectionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update roles_sections.
     */
    data: XOR<roles_sectionsUpdateManyMutationInput, roles_sectionsUncheckedUpdateManyInput>
    /**
     * Filter which roles_sections to update
     */
    where?: roles_sectionsWhereInput
    /**
     * Limit how many roles_sections to update.
     */
    limit?: number
  }

  /**
   * roles_sections upsert
   */
  export type roles_sectionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles_sections
     */
    select?: roles_sectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles_sections
     */
    omit?: roles_sectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roles_sectionsInclude<ExtArgs> | null
    /**
     * The filter to search for the roles_sections to update in case it exists.
     */
    where: roles_sectionsWhereUniqueInput
    /**
     * In case the roles_sections found by the `where` argument doesn't exist, create a new roles_sections with this data.
     */
    create: XOR<roles_sectionsCreateInput, roles_sectionsUncheckedCreateInput>
    /**
     * In case the roles_sections was found with the provided `where` argument, update it with this data.
     */
    update: XOR<roles_sectionsUpdateInput, roles_sectionsUncheckedUpdateInput>
  }

  /**
   * roles_sections delete
   */
  export type roles_sectionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles_sections
     */
    select?: roles_sectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles_sections
     */
    omit?: roles_sectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roles_sectionsInclude<ExtArgs> | null
    /**
     * Filter which roles_sections to delete.
     */
    where: roles_sectionsWhereUniqueInput
  }

  /**
   * roles_sections deleteMany
   */
  export type roles_sectionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which roles_sections to delete
     */
    where?: roles_sectionsWhereInput
    /**
     * Limit how many roles_sections to delete.
     */
    limit?: number
  }

  /**
   * roles_sections.sections
   */
  export type roles_sections$sectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sections
     */
    select?: sectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sections
     */
    omit?: sectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sectionsInclude<ExtArgs> | null
    where?: sectionsWhereInput
  }

  /**
   * roles_sections.roles
   */
  export type roles_sections$rolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles
     */
    select?: rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles
     */
    omit?: rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rolesInclude<ExtArgs> | null
    where?: rolesWhereInput
  }

  /**
   * roles_sections without action
   */
  export type roles_sectionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles_sections
     */
    select?: roles_sectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles_sections
     */
    omit?: roles_sectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roles_sectionsInclude<ExtArgs> | null
  }


  /**
   * Model sections
   */

  export type AggregateSections = {
    _count: SectionsCountAggregateOutputType | null
    _avg: SectionsAvgAggregateOutputType | null
    _sum: SectionsSumAggregateOutputType | null
    _min: SectionsMinAggregateOutputType | null
    _max: SectionsMaxAggregateOutputType | null
  }

  export type SectionsAvgAggregateOutputType = {
    id: number | null
    display_order: number | null
  }

  export type SectionsSumAggregateOutputType = {
    id: number | null
    display_order: number | null
  }

  export type SectionsMinAggregateOutputType = {
    id: number | null
    name: string | null
    url: string | null
    image: string | null
    display_order: number | null
  }

  export type SectionsMaxAggregateOutputType = {
    id: number | null
    name: string | null
    url: string | null
    image: string | null
    display_order: number | null
  }

  export type SectionsCountAggregateOutputType = {
    id: number
    name: number
    url: number
    image: number
    display_order: number
    _all: number
  }


  export type SectionsAvgAggregateInputType = {
    id?: true
    display_order?: true
  }

  export type SectionsSumAggregateInputType = {
    id?: true
    display_order?: true
  }

  export type SectionsMinAggregateInputType = {
    id?: true
    name?: true
    url?: true
    image?: true
    display_order?: true
  }

  export type SectionsMaxAggregateInputType = {
    id?: true
    name?: true
    url?: true
    image?: true
    display_order?: true
  }

  export type SectionsCountAggregateInputType = {
    id?: true
    name?: true
    url?: true
    image?: true
    display_order?: true
    _all?: true
  }

  export type SectionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sections to aggregate.
     */
    where?: sectionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sections to fetch.
     */
    orderBy?: sectionsOrderByWithRelationInput | sectionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sectionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sections
    **/
    _count?: true | SectionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SectionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SectionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SectionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SectionsMaxAggregateInputType
  }

  export type GetSectionsAggregateType<T extends SectionsAggregateArgs> = {
        [P in keyof T & keyof AggregateSections]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSections[P]>
      : GetScalarType<T[P], AggregateSections[P]>
  }




  export type sectionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sectionsWhereInput
    orderBy?: sectionsOrderByWithAggregationInput | sectionsOrderByWithAggregationInput[]
    by: SectionsScalarFieldEnum[] | SectionsScalarFieldEnum
    having?: sectionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SectionsCountAggregateInputType | true
    _avg?: SectionsAvgAggregateInputType
    _sum?: SectionsSumAggregateInputType
    _min?: SectionsMinAggregateInputType
    _max?: SectionsMaxAggregateInputType
  }

  export type SectionsGroupByOutputType = {
    id: number
    name: string | null
    url: string | null
    image: string | null
    display_order: number | null
    _count: SectionsCountAggregateOutputType | null
    _avg: SectionsAvgAggregateOutputType | null
    _sum: SectionsSumAggregateOutputType | null
    _min: SectionsMinAggregateOutputType | null
    _max: SectionsMaxAggregateOutputType | null
  }

  type GetSectionsGroupByPayload<T extends sectionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SectionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SectionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SectionsGroupByOutputType[P]>
            : GetScalarType<T[P], SectionsGroupByOutputType[P]>
        }
      >
    >


  export type sectionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    url?: boolean
    image?: boolean
    display_order?: boolean
    roles_sections?: boolean | sections$roles_sectionsArgs<ExtArgs>
    _count?: boolean | SectionsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sections"]>



  export type sectionsSelectScalar = {
    id?: boolean
    name?: boolean
    url?: boolean
    image?: boolean
    display_order?: boolean
  }

  export type sectionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "url" | "image" | "display_order", ExtArgs["result"]["sections"]>
  export type sectionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    roles_sections?: boolean | sections$roles_sectionsArgs<ExtArgs>
    _count?: boolean | SectionsCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $sectionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sections"
    objects: {
      roles_sections: Prisma.$roles_sectionsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string | null
      url: string | null
      image: string | null
      display_order: number | null
    }, ExtArgs["result"]["sections"]>
    composites: {}
  }

  type sectionsGetPayload<S extends boolean | null | undefined | sectionsDefaultArgs> = $Result.GetResult<Prisma.$sectionsPayload, S>

  type sectionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sectionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SectionsCountAggregateInputType | true
    }

  export interface sectionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sections'], meta: { name: 'sections' } }
    /**
     * Find zero or one Sections that matches the filter.
     * @param {sectionsFindUniqueArgs} args - Arguments to find a Sections
     * @example
     * // Get one Sections
     * const sections = await prisma.sections.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sectionsFindUniqueArgs>(args: SelectSubset<T, sectionsFindUniqueArgs<ExtArgs>>): Prisma__sectionsClient<$Result.GetResult<Prisma.$sectionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sections that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sectionsFindUniqueOrThrowArgs} args - Arguments to find a Sections
     * @example
     * // Get one Sections
     * const sections = await prisma.sections.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sectionsFindUniqueOrThrowArgs>(args: SelectSubset<T, sectionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sectionsClient<$Result.GetResult<Prisma.$sectionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sections that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sectionsFindFirstArgs} args - Arguments to find a Sections
     * @example
     * // Get one Sections
     * const sections = await prisma.sections.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sectionsFindFirstArgs>(args?: SelectSubset<T, sectionsFindFirstArgs<ExtArgs>>): Prisma__sectionsClient<$Result.GetResult<Prisma.$sectionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sections that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sectionsFindFirstOrThrowArgs} args - Arguments to find a Sections
     * @example
     * // Get one Sections
     * const sections = await prisma.sections.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sectionsFindFirstOrThrowArgs>(args?: SelectSubset<T, sectionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__sectionsClient<$Result.GetResult<Prisma.$sectionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sections that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sectionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sections
     * const sections = await prisma.sections.findMany()
     * 
     * // Get first 10 Sections
     * const sections = await prisma.sections.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sectionsWithIdOnly = await prisma.sections.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sectionsFindManyArgs>(args?: SelectSubset<T, sectionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sectionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sections.
     * @param {sectionsCreateArgs} args - Arguments to create a Sections.
     * @example
     * // Create one Sections
     * const Sections = await prisma.sections.create({
     *   data: {
     *     // ... data to create a Sections
     *   }
     * })
     * 
     */
    create<T extends sectionsCreateArgs>(args: SelectSubset<T, sectionsCreateArgs<ExtArgs>>): Prisma__sectionsClient<$Result.GetResult<Prisma.$sectionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sections.
     * @param {sectionsCreateManyArgs} args - Arguments to create many Sections.
     * @example
     * // Create many Sections
     * const sections = await prisma.sections.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sectionsCreateManyArgs>(args?: SelectSubset<T, sectionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Sections.
     * @param {sectionsDeleteArgs} args - Arguments to delete one Sections.
     * @example
     * // Delete one Sections
     * const Sections = await prisma.sections.delete({
     *   where: {
     *     // ... filter to delete one Sections
     *   }
     * })
     * 
     */
    delete<T extends sectionsDeleteArgs>(args: SelectSubset<T, sectionsDeleteArgs<ExtArgs>>): Prisma__sectionsClient<$Result.GetResult<Prisma.$sectionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sections.
     * @param {sectionsUpdateArgs} args - Arguments to update one Sections.
     * @example
     * // Update one Sections
     * const sections = await prisma.sections.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sectionsUpdateArgs>(args: SelectSubset<T, sectionsUpdateArgs<ExtArgs>>): Prisma__sectionsClient<$Result.GetResult<Prisma.$sectionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sections.
     * @param {sectionsDeleteManyArgs} args - Arguments to filter Sections to delete.
     * @example
     * // Delete a few Sections
     * const { count } = await prisma.sections.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sectionsDeleteManyArgs>(args?: SelectSubset<T, sectionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sectionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sections
     * const sections = await prisma.sections.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sectionsUpdateManyArgs>(args: SelectSubset<T, sectionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Sections.
     * @param {sectionsUpsertArgs} args - Arguments to update or create a Sections.
     * @example
     * // Update or create a Sections
     * const sections = await prisma.sections.upsert({
     *   create: {
     *     // ... data to create a Sections
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sections we want to update
     *   }
     * })
     */
    upsert<T extends sectionsUpsertArgs>(args: SelectSubset<T, sectionsUpsertArgs<ExtArgs>>): Prisma__sectionsClient<$Result.GetResult<Prisma.$sectionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sectionsCountArgs} args - Arguments to filter Sections to count.
     * @example
     * // Count the number of Sections
     * const count = await prisma.sections.count({
     *   where: {
     *     // ... the filter for the Sections we want to count
     *   }
     * })
    **/
    count<T extends sectionsCountArgs>(
      args?: Subset<T, sectionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SectionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SectionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SectionsAggregateArgs>(args: Subset<T, SectionsAggregateArgs>): Prisma.PrismaPromise<GetSectionsAggregateType<T>>

    /**
     * Group by Sections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sectionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sectionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sectionsGroupByArgs['orderBy'] }
        : { orderBy?: sectionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sectionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSectionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sections model
   */
  readonly fields: sectionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sections.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sectionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    roles_sections<T extends sections$roles_sectionsArgs<ExtArgs> = {}>(args?: Subset<T, sections$roles_sectionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$roles_sectionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sections model
   */
  interface sectionsFieldRefs {
    readonly id: FieldRef<"sections", 'Int'>
    readonly name: FieldRef<"sections", 'String'>
    readonly url: FieldRef<"sections", 'String'>
    readonly image: FieldRef<"sections", 'String'>
    readonly display_order: FieldRef<"sections", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * sections findUnique
   */
  export type sectionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sections
     */
    select?: sectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sections
     */
    omit?: sectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sectionsInclude<ExtArgs> | null
    /**
     * Filter, which sections to fetch.
     */
    where: sectionsWhereUniqueInput
  }

  /**
   * sections findUniqueOrThrow
   */
  export type sectionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sections
     */
    select?: sectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sections
     */
    omit?: sectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sectionsInclude<ExtArgs> | null
    /**
     * Filter, which sections to fetch.
     */
    where: sectionsWhereUniqueInput
  }

  /**
   * sections findFirst
   */
  export type sectionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sections
     */
    select?: sectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sections
     */
    omit?: sectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sectionsInclude<ExtArgs> | null
    /**
     * Filter, which sections to fetch.
     */
    where?: sectionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sections to fetch.
     */
    orderBy?: sectionsOrderByWithRelationInput | sectionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sections.
     */
    cursor?: sectionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sections.
     */
    distinct?: SectionsScalarFieldEnum | SectionsScalarFieldEnum[]
  }

  /**
   * sections findFirstOrThrow
   */
  export type sectionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sections
     */
    select?: sectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sections
     */
    omit?: sectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sectionsInclude<ExtArgs> | null
    /**
     * Filter, which sections to fetch.
     */
    where?: sectionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sections to fetch.
     */
    orderBy?: sectionsOrderByWithRelationInput | sectionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sections.
     */
    cursor?: sectionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sections.
     */
    distinct?: SectionsScalarFieldEnum | SectionsScalarFieldEnum[]
  }

  /**
   * sections findMany
   */
  export type sectionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sections
     */
    select?: sectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sections
     */
    omit?: sectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sectionsInclude<ExtArgs> | null
    /**
     * Filter, which sections to fetch.
     */
    where?: sectionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sections to fetch.
     */
    orderBy?: sectionsOrderByWithRelationInput | sectionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sections.
     */
    cursor?: sectionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sections.
     */
    skip?: number
    distinct?: SectionsScalarFieldEnum | SectionsScalarFieldEnum[]
  }

  /**
   * sections create
   */
  export type sectionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sections
     */
    select?: sectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sections
     */
    omit?: sectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sectionsInclude<ExtArgs> | null
    /**
     * The data needed to create a sections.
     */
    data?: XOR<sectionsCreateInput, sectionsUncheckedCreateInput>
  }

  /**
   * sections createMany
   */
  export type sectionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sections.
     */
    data: sectionsCreateManyInput | sectionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sections update
   */
  export type sectionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sections
     */
    select?: sectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sections
     */
    omit?: sectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sectionsInclude<ExtArgs> | null
    /**
     * The data needed to update a sections.
     */
    data: XOR<sectionsUpdateInput, sectionsUncheckedUpdateInput>
    /**
     * Choose, which sections to update.
     */
    where: sectionsWhereUniqueInput
  }

  /**
   * sections updateMany
   */
  export type sectionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sections.
     */
    data: XOR<sectionsUpdateManyMutationInput, sectionsUncheckedUpdateManyInput>
    /**
     * Filter which sections to update
     */
    where?: sectionsWhereInput
    /**
     * Limit how many sections to update.
     */
    limit?: number
  }

  /**
   * sections upsert
   */
  export type sectionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sections
     */
    select?: sectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sections
     */
    omit?: sectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sectionsInclude<ExtArgs> | null
    /**
     * The filter to search for the sections to update in case it exists.
     */
    where: sectionsWhereUniqueInput
    /**
     * In case the sections found by the `where` argument doesn't exist, create a new sections with this data.
     */
    create: XOR<sectionsCreateInput, sectionsUncheckedCreateInput>
    /**
     * In case the sections was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sectionsUpdateInput, sectionsUncheckedUpdateInput>
  }

  /**
   * sections delete
   */
  export type sectionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sections
     */
    select?: sectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sections
     */
    omit?: sectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sectionsInclude<ExtArgs> | null
    /**
     * Filter which sections to delete.
     */
    where: sectionsWhereUniqueInput
  }

  /**
   * sections deleteMany
   */
  export type sectionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sections to delete
     */
    where?: sectionsWhereInput
    /**
     * Limit how many sections to delete.
     */
    limit?: number
  }

  /**
   * sections.roles_sections
   */
  export type sections$roles_sectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the roles_sections
     */
    select?: roles_sectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the roles_sections
     */
    omit?: roles_sectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: roles_sectionsInclude<ExtArgs> | null
    where?: roles_sectionsWhereInput
    orderBy?: roles_sectionsOrderByWithRelationInput | roles_sectionsOrderByWithRelationInput[]
    cursor?: roles_sectionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Roles_sectionsScalarFieldEnum | Roles_sectionsScalarFieldEnum[]
  }

  /**
   * sections without action
   */
  export type sectionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sections
     */
    select?: sectionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sections
     */
    omit?: sectionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sectionsInclude<ExtArgs> | null
  }


  /**
   * Model services
   */

  export type AggregateServices = {
    _count: ServicesCountAggregateOutputType | null
    _avg: ServicesAvgAggregateOutputType | null
    _sum: ServicesSumAggregateOutputType | null
    _min: ServicesMinAggregateOutputType | null
    _max: ServicesMaxAggregateOutputType | null
  }

  export type ServicesAvgAggregateOutputType = {
    id: number | null
    display_order: number | null
  }

  export type ServicesSumAggregateOutputType = {
    id: number | null
    display_order: number | null
  }

  export type ServicesMinAggregateOutputType = {
    id: number | null
    title: string | null
    subtitle: string | null
    image_url: string | null
    slug: string | null
    description: string | null
    created_at: Date | null
    updated_at: Date | null
    display_order: number | null
  }

  export type ServicesMaxAggregateOutputType = {
    id: number | null
    title: string | null
    subtitle: string | null
    image_url: string | null
    slug: string | null
    description: string | null
    created_at: Date | null
    updated_at: Date | null
    display_order: number | null
  }

  export type ServicesCountAggregateOutputType = {
    id: number
    title: number
    subtitle: number
    image_url: number
    slug: number
    description: number
    created_at: number
    updated_at: number
    display_order: number
    _all: number
  }


  export type ServicesAvgAggregateInputType = {
    id?: true
    display_order?: true
  }

  export type ServicesSumAggregateInputType = {
    id?: true
    display_order?: true
  }

  export type ServicesMinAggregateInputType = {
    id?: true
    title?: true
    subtitle?: true
    image_url?: true
    slug?: true
    description?: true
    created_at?: true
    updated_at?: true
    display_order?: true
  }

  export type ServicesMaxAggregateInputType = {
    id?: true
    title?: true
    subtitle?: true
    image_url?: true
    slug?: true
    description?: true
    created_at?: true
    updated_at?: true
    display_order?: true
  }

  export type ServicesCountAggregateInputType = {
    id?: true
    title?: true
    subtitle?: true
    image_url?: true
    slug?: true
    description?: true
    created_at?: true
    updated_at?: true
    display_order?: true
    _all?: true
  }

  export type ServicesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which services to aggregate.
     */
    where?: servicesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of services to fetch.
     */
    orderBy?: servicesOrderByWithRelationInput | servicesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: servicesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` services from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` services.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned services
    **/
    _count?: true | ServicesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ServicesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ServicesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ServicesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ServicesMaxAggregateInputType
  }

  export type GetServicesAggregateType<T extends ServicesAggregateArgs> = {
        [P in keyof T & keyof AggregateServices]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateServices[P]>
      : GetScalarType<T[P], AggregateServices[P]>
  }




  export type servicesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: servicesWhereInput
    orderBy?: servicesOrderByWithAggregationInput | servicesOrderByWithAggregationInput[]
    by: ServicesScalarFieldEnum[] | ServicesScalarFieldEnum
    having?: servicesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ServicesCountAggregateInputType | true
    _avg?: ServicesAvgAggregateInputType
    _sum?: ServicesSumAggregateInputType
    _min?: ServicesMinAggregateInputType
    _max?: ServicesMaxAggregateInputType
  }

  export type ServicesGroupByOutputType = {
    id: number
    title: string
    subtitle: string | null
    image_url: string | null
    slug: string | null
    description: string | null
    created_at: Date
    updated_at: Date
    display_order: number | null
    _count: ServicesCountAggregateOutputType | null
    _avg: ServicesAvgAggregateOutputType | null
    _sum: ServicesSumAggregateOutputType | null
    _min: ServicesMinAggregateOutputType | null
    _max: ServicesMaxAggregateOutputType | null
  }

  type GetServicesGroupByPayload<T extends servicesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ServicesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ServicesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ServicesGroupByOutputType[P]>
            : GetScalarType<T[P], ServicesGroupByOutputType[P]>
        }
      >
    >


  export type servicesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    subtitle?: boolean
    image_url?: boolean
    slug?: boolean
    description?: boolean
    created_at?: boolean
    updated_at?: boolean
    display_order?: boolean
    services_images?: boolean | services$services_imagesArgs<ExtArgs>
    _count?: boolean | ServicesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["services"]>



  export type servicesSelectScalar = {
    id?: boolean
    title?: boolean
    subtitle?: boolean
    image_url?: boolean
    slug?: boolean
    description?: boolean
    created_at?: boolean
    updated_at?: boolean
    display_order?: boolean
  }

  export type servicesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "subtitle" | "image_url" | "slug" | "description" | "created_at" | "updated_at" | "display_order", ExtArgs["result"]["services"]>
  export type servicesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    services_images?: boolean | services$services_imagesArgs<ExtArgs>
    _count?: boolean | ServicesCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $servicesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "services"
    objects: {
      services_images: Prisma.$services_imagesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      title: string
      subtitle: string | null
      image_url: string | null
      slug: string | null
      description: string | null
      created_at: Date
      updated_at: Date
      display_order: number | null
    }, ExtArgs["result"]["services"]>
    composites: {}
  }

  type servicesGetPayload<S extends boolean | null | undefined | servicesDefaultArgs> = $Result.GetResult<Prisma.$servicesPayload, S>

  type servicesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<servicesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ServicesCountAggregateInputType | true
    }

  export interface servicesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['services'], meta: { name: 'services' } }
    /**
     * Find zero or one Services that matches the filter.
     * @param {servicesFindUniqueArgs} args - Arguments to find a Services
     * @example
     * // Get one Services
     * const services = await prisma.services.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends servicesFindUniqueArgs>(args: SelectSubset<T, servicesFindUniqueArgs<ExtArgs>>): Prisma__servicesClient<$Result.GetResult<Prisma.$servicesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Services that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {servicesFindUniqueOrThrowArgs} args - Arguments to find a Services
     * @example
     * // Get one Services
     * const services = await prisma.services.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends servicesFindUniqueOrThrowArgs>(args: SelectSubset<T, servicesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__servicesClient<$Result.GetResult<Prisma.$servicesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Services that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {servicesFindFirstArgs} args - Arguments to find a Services
     * @example
     * // Get one Services
     * const services = await prisma.services.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends servicesFindFirstArgs>(args?: SelectSubset<T, servicesFindFirstArgs<ExtArgs>>): Prisma__servicesClient<$Result.GetResult<Prisma.$servicesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Services that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {servicesFindFirstOrThrowArgs} args - Arguments to find a Services
     * @example
     * // Get one Services
     * const services = await prisma.services.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends servicesFindFirstOrThrowArgs>(args?: SelectSubset<T, servicesFindFirstOrThrowArgs<ExtArgs>>): Prisma__servicesClient<$Result.GetResult<Prisma.$servicesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Services that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {servicesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Services
     * const services = await prisma.services.findMany()
     * 
     * // Get first 10 Services
     * const services = await prisma.services.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const servicesWithIdOnly = await prisma.services.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends servicesFindManyArgs>(args?: SelectSubset<T, servicesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$servicesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Services.
     * @param {servicesCreateArgs} args - Arguments to create a Services.
     * @example
     * // Create one Services
     * const Services = await prisma.services.create({
     *   data: {
     *     // ... data to create a Services
     *   }
     * })
     * 
     */
    create<T extends servicesCreateArgs>(args: SelectSubset<T, servicesCreateArgs<ExtArgs>>): Prisma__servicesClient<$Result.GetResult<Prisma.$servicesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Services.
     * @param {servicesCreateManyArgs} args - Arguments to create many Services.
     * @example
     * // Create many Services
     * const services = await prisma.services.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends servicesCreateManyArgs>(args?: SelectSubset<T, servicesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Services.
     * @param {servicesDeleteArgs} args - Arguments to delete one Services.
     * @example
     * // Delete one Services
     * const Services = await prisma.services.delete({
     *   where: {
     *     // ... filter to delete one Services
     *   }
     * })
     * 
     */
    delete<T extends servicesDeleteArgs>(args: SelectSubset<T, servicesDeleteArgs<ExtArgs>>): Prisma__servicesClient<$Result.GetResult<Prisma.$servicesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Services.
     * @param {servicesUpdateArgs} args - Arguments to update one Services.
     * @example
     * // Update one Services
     * const services = await prisma.services.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends servicesUpdateArgs>(args: SelectSubset<T, servicesUpdateArgs<ExtArgs>>): Prisma__servicesClient<$Result.GetResult<Prisma.$servicesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Services.
     * @param {servicesDeleteManyArgs} args - Arguments to filter Services to delete.
     * @example
     * // Delete a few Services
     * const { count } = await prisma.services.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends servicesDeleteManyArgs>(args?: SelectSubset<T, servicesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Services.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {servicesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Services
     * const services = await prisma.services.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends servicesUpdateManyArgs>(args: SelectSubset<T, servicesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Services.
     * @param {servicesUpsertArgs} args - Arguments to update or create a Services.
     * @example
     * // Update or create a Services
     * const services = await prisma.services.upsert({
     *   create: {
     *     // ... data to create a Services
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Services we want to update
     *   }
     * })
     */
    upsert<T extends servicesUpsertArgs>(args: SelectSubset<T, servicesUpsertArgs<ExtArgs>>): Prisma__servicesClient<$Result.GetResult<Prisma.$servicesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Services.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {servicesCountArgs} args - Arguments to filter Services to count.
     * @example
     * // Count the number of Services
     * const count = await prisma.services.count({
     *   where: {
     *     // ... the filter for the Services we want to count
     *   }
     * })
    **/
    count<T extends servicesCountArgs>(
      args?: Subset<T, servicesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ServicesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Services.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ServicesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ServicesAggregateArgs>(args: Subset<T, ServicesAggregateArgs>): Prisma.PrismaPromise<GetServicesAggregateType<T>>

    /**
     * Group by Services.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {servicesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends servicesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: servicesGroupByArgs['orderBy'] }
        : { orderBy?: servicesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, servicesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetServicesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the services model
   */
  readonly fields: servicesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for services.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__servicesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    services_images<T extends services$services_imagesArgs<ExtArgs> = {}>(args?: Subset<T, services$services_imagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$services_imagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the services model
   */
  interface servicesFieldRefs {
    readonly id: FieldRef<"services", 'Int'>
    readonly title: FieldRef<"services", 'String'>
    readonly subtitle: FieldRef<"services", 'String'>
    readonly image_url: FieldRef<"services", 'String'>
    readonly slug: FieldRef<"services", 'String'>
    readonly description: FieldRef<"services", 'String'>
    readonly created_at: FieldRef<"services", 'DateTime'>
    readonly updated_at: FieldRef<"services", 'DateTime'>
    readonly display_order: FieldRef<"services", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * services findUnique
   */
  export type servicesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the services
     */
    select?: servicesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the services
     */
    omit?: servicesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: servicesInclude<ExtArgs> | null
    /**
     * Filter, which services to fetch.
     */
    where: servicesWhereUniqueInput
  }

  /**
   * services findUniqueOrThrow
   */
  export type servicesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the services
     */
    select?: servicesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the services
     */
    omit?: servicesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: servicesInclude<ExtArgs> | null
    /**
     * Filter, which services to fetch.
     */
    where: servicesWhereUniqueInput
  }

  /**
   * services findFirst
   */
  export type servicesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the services
     */
    select?: servicesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the services
     */
    omit?: servicesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: servicesInclude<ExtArgs> | null
    /**
     * Filter, which services to fetch.
     */
    where?: servicesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of services to fetch.
     */
    orderBy?: servicesOrderByWithRelationInput | servicesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for services.
     */
    cursor?: servicesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` services from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` services.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of services.
     */
    distinct?: ServicesScalarFieldEnum | ServicesScalarFieldEnum[]
  }

  /**
   * services findFirstOrThrow
   */
  export type servicesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the services
     */
    select?: servicesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the services
     */
    omit?: servicesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: servicesInclude<ExtArgs> | null
    /**
     * Filter, which services to fetch.
     */
    where?: servicesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of services to fetch.
     */
    orderBy?: servicesOrderByWithRelationInput | servicesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for services.
     */
    cursor?: servicesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` services from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` services.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of services.
     */
    distinct?: ServicesScalarFieldEnum | ServicesScalarFieldEnum[]
  }

  /**
   * services findMany
   */
  export type servicesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the services
     */
    select?: servicesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the services
     */
    omit?: servicesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: servicesInclude<ExtArgs> | null
    /**
     * Filter, which services to fetch.
     */
    where?: servicesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of services to fetch.
     */
    orderBy?: servicesOrderByWithRelationInput | servicesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing services.
     */
    cursor?: servicesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` services from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` services.
     */
    skip?: number
    distinct?: ServicesScalarFieldEnum | ServicesScalarFieldEnum[]
  }

  /**
   * services create
   */
  export type servicesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the services
     */
    select?: servicesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the services
     */
    omit?: servicesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: servicesInclude<ExtArgs> | null
    /**
     * The data needed to create a services.
     */
    data: XOR<servicesCreateInput, servicesUncheckedCreateInput>
  }

  /**
   * services createMany
   */
  export type servicesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many services.
     */
    data: servicesCreateManyInput | servicesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * services update
   */
  export type servicesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the services
     */
    select?: servicesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the services
     */
    omit?: servicesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: servicesInclude<ExtArgs> | null
    /**
     * The data needed to update a services.
     */
    data: XOR<servicesUpdateInput, servicesUncheckedUpdateInput>
    /**
     * Choose, which services to update.
     */
    where: servicesWhereUniqueInput
  }

  /**
   * services updateMany
   */
  export type servicesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update services.
     */
    data: XOR<servicesUpdateManyMutationInput, servicesUncheckedUpdateManyInput>
    /**
     * Filter which services to update
     */
    where?: servicesWhereInput
    /**
     * Limit how many services to update.
     */
    limit?: number
  }

  /**
   * services upsert
   */
  export type servicesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the services
     */
    select?: servicesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the services
     */
    omit?: servicesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: servicesInclude<ExtArgs> | null
    /**
     * The filter to search for the services to update in case it exists.
     */
    where: servicesWhereUniqueInput
    /**
     * In case the services found by the `where` argument doesn't exist, create a new services with this data.
     */
    create: XOR<servicesCreateInput, servicesUncheckedCreateInput>
    /**
     * In case the services was found with the provided `where` argument, update it with this data.
     */
    update: XOR<servicesUpdateInput, servicesUncheckedUpdateInput>
  }

  /**
   * services delete
   */
  export type servicesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the services
     */
    select?: servicesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the services
     */
    omit?: servicesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: servicesInclude<ExtArgs> | null
    /**
     * Filter which services to delete.
     */
    where: servicesWhereUniqueInput
  }

  /**
   * services deleteMany
   */
  export type servicesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which services to delete
     */
    where?: servicesWhereInput
    /**
     * Limit how many services to delete.
     */
    limit?: number
  }

  /**
   * services.services_images
   */
  export type services$services_imagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the services_images
     */
    select?: services_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the services_images
     */
    omit?: services_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: services_imagesInclude<ExtArgs> | null
    where?: services_imagesWhereInput
    orderBy?: services_imagesOrderByWithRelationInput | services_imagesOrderByWithRelationInput[]
    cursor?: services_imagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Services_imagesScalarFieldEnum | Services_imagesScalarFieldEnum[]
  }

  /**
   * services without action
   */
  export type servicesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the services
     */
    select?: servicesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the services
     */
    omit?: servicesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: servicesInclude<ExtArgs> | null
  }


  /**
   * Model services_images
   */

  export type AggregateServices_images = {
    _count: Services_imagesCountAggregateOutputType | null
    _avg: Services_imagesAvgAggregateOutputType | null
    _sum: Services_imagesSumAggregateOutputType | null
    _min: Services_imagesMinAggregateOutputType | null
    _max: Services_imagesMaxAggregateOutputType | null
  }

  export type Services_imagesAvgAggregateOutputType = {
    id: number | null
    display_order: number | null
    id_service: number | null
  }

  export type Services_imagesSumAggregateOutputType = {
    id: number | null
    display_order: number | null
    id_service: number | null
  }

  export type Services_imagesMinAggregateOutputType = {
    id: number | null
    title: string | null
    subtitle: string | null
    description: string | null
    created_at: Date | null
    updated_at: Date | null
    display_order: number | null
    id_service: number | null
    image_url: string | null
  }

  export type Services_imagesMaxAggregateOutputType = {
    id: number | null
    title: string | null
    subtitle: string | null
    description: string | null
    created_at: Date | null
    updated_at: Date | null
    display_order: number | null
    id_service: number | null
    image_url: string | null
  }

  export type Services_imagesCountAggregateOutputType = {
    id: number
    title: number
    subtitle: number
    description: number
    created_at: number
    updated_at: number
    display_order: number
    id_service: number
    image_url: number
    _all: number
  }


  export type Services_imagesAvgAggregateInputType = {
    id?: true
    display_order?: true
    id_service?: true
  }

  export type Services_imagesSumAggregateInputType = {
    id?: true
    display_order?: true
    id_service?: true
  }

  export type Services_imagesMinAggregateInputType = {
    id?: true
    title?: true
    subtitle?: true
    description?: true
    created_at?: true
    updated_at?: true
    display_order?: true
    id_service?: true
    image_url?: true
  }

  export type Services_imagesMaxAggregateInputType = {
    id?: true
    title?: true
    subtitle?: true
    description?: true
    created_at?: true
    updated_at?: true
    display_order?: true
    id_service?: true
    image_url?: true
  }

  export type Services_imagesCountAggregateInputType = {
    id?: true
    title?: true
    subtitle?: true
    description?: true
    created_at?: true
    updated_at?: true
    display_order?: true
    id_service?: true
    image_url?: true
    _all?: true
  }

  export type Services_imagesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which services_images to aggregate.
     */
    where?: services_imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of services_images to fetch.
     */
    orderBy?: services_imagesOrderByWithRelationInput | services_imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: services_imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` services_images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` services_images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned services_images
    **/
    _count?: true | Services_imagesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Services_imagesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Services_imagesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Services_imagesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Services_imagesMaxAggregateInputType
  }

  export type GetServices_imagesAggregateType<T extends Services_imagesAggregateArgs> = {
        [P in keyof T & keyof AggregateServices_images]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateServices_images[P]>
      : GetScalarType<T[P], AggregateServices_images[P]>
  }




  export type services_imagesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: services_imagesWhereInput
    orderBy?: services_imagesOrderByWithAggregationInput | services_imagesOrderByWithAggregationInput[]
    by: Services_imagesScalarFieldEnum[] | Services_imagesScalarFieldEnum
    having?: services_imagesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Services_imagesCountAggregateInputType | true
    _avg?: Services_imagesAvgAggregateInputType
    _sum?: Services_imagesSumAggregateInputType
    _min?: Services_imagesMinAggregateInputType
    _max?: Services_imagesMaxAggregateInputType
  }

  export type Services_imagesGroupByOutputType = {
    id: number
    title: string | null
    subtitle: string | null
    description: string | null
    created_at: Date
    updated_at: Date
    display_order: number | null
    id_service: number | null
    image_url: string | null
    _count: Services_imagesCountAggregateOutputType | null
    _avg: Services_imagesAvgAggregateOutputType | null
    _sum: Services_imagesSumAggregateOutputType | null
    _min: Services_imagesMinAggregateOutputType | null
    _max: Services_imagesMaxAggregateOutputType | null
  }

  type GetServices_imagesGroupByPayload<T extends services_imagesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Services_imagesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Services_imagesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Services_imagesGroupByOutputType[P]>
            : GetScalarType<T[P], Services_imagesGroupByOutputType[P]>
        }
      >
    >


  export type services_imagesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    subtitle?: boolean
    description?: boolean
    created_at?: boolean
    updated_at?: boolean
    display_order?: boolean
    id_service?: boolean
    image_url?: boolean
    services?: boolean | services_images$servicesArgs<ExtArgs>
  }, ExtArgs["result"]["services_images"]>



  export type services_imagesSelectScalar = {
    id?: boolean
    title?: boolean
    subtitle?: boolean
    description?: boolean
    created_at?: boolean
    updated_at?: boolean
    display_order?: boolean
    id_service?: boolean
    image_url?: boolean
  }

  export type services_imagesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "subtitle" | "description" | "created_at" | "updated_at" | "display_order" | "id_service" | "image_url", ExtArgs["result"]["services_images"]>
  export type services_imagesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    services?: boolean | services_images$servicesArgs<ExtArgs>
  }

  export type $services_imagesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "services_images"
    objects: {
      services: Prisma.$servicesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      title: string | null
      subtitle: string | null
      description: string | null
      created_at: Date
      updated_at: Date
      display_order: number | null
      id_service: number | null
      image_url: string | null
    }, ExtArgs["result"]["services_images"]>
    composites: {}
  }

  type services_imagesGetPayload<S extends boolean | null | undefined | services_imagesDefaultArgs> = $Result.GetResult<Prisma.$services_imagesPayload, S>

  type services_imagesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<services_imagesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Services_imagesCountAggregateInputType | true
    }

  export interface services_imagesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['services_images'], meta: { name: 'services_images' } }
    /**
     * Find zero or one Services_images that matches the filter.
     * @param {services_imagesFindUniqueArgs} args - Arguments to find a Services_images
     * @example
     * // Get one Services_images
     * const services_images = await prisma.services_images.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends services_imagesFindUniqueArgs>(args: SelectSubset<T, services_imagesFindUniqueArgs<ExtArgs>>): Prisma__services_imagesClient<$Result.GetResult<Prisma.$services_imagesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Services_images that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {services_imagesFindUniqueOrThrowArgs} args - Arguments to find a Services_images
     * @example
     * // Get one Services_images
     * const services_images = await prisma.services_images.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends services_imagesFindUniqueOrThrowArgs>(args: SelectSubset<T, services_imagesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__services_imagesClient<$Result.GetResult<Prisma.$services_imagesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Services_images that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {services_imagesFindFirstArgs} args - Arguments to find a Services_images
     * @example
     * // Get one Services_images
     * const services_images = await prisma.services_images.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends services_imagesFindFirstArgs>(args?: SelectSubset<T, services_imagesFindFirstArgs<ExtArgs>>): Prisma__services_imagesClient<$Result.GetResult<Prisma.$services_imagesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Services_images that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {services_imagesFindFirstOrThrowArgs} args - Arguments to find a Services_images
     * @example
     * // Get one Services_images
     * const services_images = await prisma.services_images.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends services_imagesFindFirstOrThrowArgs>(args?: SelectSubset<T, services_imagesFindFirstOrThrowArgs<ExtArgs>>): Prisma__services_imagesClient<$Result.GetResult<Prisma.$services_imagesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Services_images that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {services_imagesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Services_images
     * const services_images = await prisma.services_images.findMany()
     * 
     * // Get first 10 Services_images
     * const services_images = await prisma.services_images.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const services_imagesWithIdOnly = await prisma.services_images.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends services_imagesFindManyArgs>(args?: SelectSubset<T, services_imagesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$services_imagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Services_images.
     * @param {services_imagesCreateArgs} args - Arguments to create a Services_images.
     * @example
     * // Create one Services_images
     * const Services_images = await prisma.services_images.create({
     *   data: {
     *     // ... data to create a Services_images
     *   }
     * })
     * 
     */
    create<T extends services_imagesCreateArgs>(args: SelectSubset<T, services_imagesCreateArgs<ExtArgs>>): Prisma__services_imagesClient<$Result.GetResult<Prisma.$services_imagesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Services_images.
     * @param {services_imagesCreateManyArgs} args - Arguments to create many Services_images.
     * @example
     * // Create many Services_images
     * const services_images = await prisma.services_images.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends services_imagesCreateManyArgs>(args?: SelectSubset<T, services_imagesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Services_images.
     * @param {services_imagesDeleteArgs} args - Arguments to delete one Services_images.
     * @example
     * // Delete one Services_images
     * const Services_images = await prisma.services_images.delete({
     *   where: {
     *     // ... filter to delete one Services_images
     *   }
     * })
     * 
     */
    delete<T extends services_imagesDeleteArgs>(args: SelectSubset<T, services_imagesDeleteArgs<ExtArgs>>): Prisma__services_imagesClient<$Result.GetResult<Prisma.$services_imagesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Services_images.
     * @param {services_imagesUpdateArgs} args - Arguments to update one Services_images.
     * @example
     * // Update one Services_images
     * const services_images = await prisma.services_images.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends services_imagesUpdateArgs>(args: SelectSubset<T, services_imagesUpdateArgs<ExtArgs>>): Prisma__services_imagesClient<$Result.GetResult<Prisma.$services_imagesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Services_images.
     * @param {services_imagesDeleteManyArgs} args - Arguments to filter Services_images to delete.
     * @example
     * // Delete a few Services_images
     * const { count } = await prisma.services_images.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends services_imagesDeleteManyArgs>(args?: SelectSubset<T, services_imagesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Services_images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {services_imagesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Services_images
     * const services_images = await prisma.services_images.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends services_imagesUpdateManyArgs>(args: SelectSubset<T, services_imagesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Services_images.
     * @param {services_imagesUpsertArgs} args - Arguments to update or create a Services_images.
     * @example
     * // Update or create a Services_images
     * const services_images = await prisma.services_images.upsert({
     *   create: {
     *     // ... data to create a Services_images
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Services_images we want to update
     *   }
     * })
     */
    upsert<T extends services_imagesUpsertArgs>(args: SelectSubset<T, services_imagesUpsertArgs<ExtArgs>>): Prisma__services_imagesClient<$Result.GetResult<Prisma.$services_imagesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Services_images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {services_imagesCountArgs} args - Arguments to filter Services_images to count.
     * @example
     * // Count the number of Services_images
     * const count = await prisma.services_images.count({
     *   where: {
     *     // ... the filter for the Services_images we want to count
     *   }
     * })
    **/
    count<T extends services_imagesCountArgs>(
      args?: Subset<T, services_imagesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Services_imagesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Services_images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Services_imagesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Services_imagesAggregateArgs>(args: Subset<T, Services_imagesAggregateArgs>): Prisma.PrismaPromise<GetServices_imagesAggregateType<T>>

    /**
     * Group by Services_images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {services_imagesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends services_imagesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: services_imagesGroupByArgs['orderBy'] }
        : { orderBy?: services_imagesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, services_imagesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetServices_imagesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the services_images model
   */
  readonly fields: services_imagesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for services_images.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__services_imagesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    services<T extends services_images$servicesArgs<ExtArgs> = {}>(args?: Subset<T, services_images$servicesArgs<ExtArgs>>): Prisma__servicesClient<$Result.GetResult<Prisma.$servicesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the services_images model
   */
  interface services_imagesFieldRefs {
    readonly id: FieldRef<"services_images", 'Int'>
    readonly title: FieldRef<"services_images", 'String'>
    readonly subtitle: FieldRef<"services_images", 'String'>
    readonly description: FieldRef<"services_images", 'String'>
    readonly created_at: FieldRef<"services_images", 'DateTime'>
    readonly updated_at: FieldRef<"services_images", 'DateTime'>
    readonly display_order: FieldRef<"services_images", 'Int'>
    readonly id_service: FieldRef<"services_images", 'Int'>
    readonly image_url: FieldRef<"services_images", 'String'>
  }
    

  // Custom InputTypes
  /**
   * services_images findUnique
   */
  export type services_imagesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the services_images
     */
    select?: services_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the services_images
     */
    omit?: services_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: services_imagesInclude<ExtArgs> | null
    /**
     * Filter, which services_images to fetch.
     */
    where: services_imagesWhereUniqueInput
  }

  /**
   * services_images findUniqueOrThrow
   */
  export type services_imagesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the services_images
     */
    select?: services_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the services_images
     */
    omit?: services_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: services_imagesInclude<ExtArgs> | null
    /**
     * Filter, which services_images to fetch.
     */
    where: services_imagesWhereUniqueInput
  }

  /**
   * services_images findFirst
   */
  export type services_imagesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the services_images
     */
    select?: services_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the services_images
     */
    omit?: services_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: services_imagesInclude<ExtArgs> | null
    /**
     * Filter, which services_images to fetch.
     */
    where?: services_imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of services_images to fetch.
     */
    orderBy?: services_imagesOrderByWithRelationInput | services_imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for services_images.
     */
    cursor?: services_imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` services_images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` services_images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of services_images.
     */
    distinct?: Services_imagesScalarFieldEnum | Services_imagesScalarFieldEnum[]
  }

  /**
   * services_images findFirstOrThrow
   */
  export type services_imagesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the services_images
     */
    select?: services_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the services_images
     */
    omit?: services_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: services_imagesInclude<ExtArgs> | null
    /**
     * Filter, which services_images to fetch.
     */
    where?: services_imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of services_images to fetch.
     */
    orderBy?: services_imagesOrderByWithRelationInput | services_imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for services_images.
     */
    cursor?: services_imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` services_images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` services_images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of services_images.
     */
    distinct?: Services_imagesScalarFieldEnum | Services_imagesScalarFieldEnum[]
  }

  /**
   * services_images findMany
   */
  export type services_imagesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the services_images
     */
    select?: services_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the services_images
     */
    omit?: services_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: services_imagesInclude<ExtArgs> | null
    /**
     * Filter, which services_images to fetch.
     */
    where?: services_imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of services_images to fetch.
     */
    orderBy?: services_imagesOrderByWithRelationInput | services_imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing services_images.
     */
    cursor?: services_imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` services_images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` services_images.
     */
    skip?: number
    distinct?: Services_imagesScalarFieldEnum | Services_imagesScalarFieldEnum[]
  }

  /**
   * services_images create
   */
  export type services_imagesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the services_images
     */
    select?: services_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the services_images
     */
    omit?: services_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: services_imagesInclude<ExtArgs> | null
    /**
     * The data needed to create a services_images.
     */
    data?: XOR<services_imagesCreateInput, services_imagesUncheckedCreateInput>
  }

  /**
   * services_images createMany
   */
  export type services_imagesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many services_images.
     */
    data: services_imagesCreateManyInput | services_imagesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * services_images update
   */
  export type services_imagesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the services_images
     */
    select?: services_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the services_images
     */
    omit?: services_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: services_imagesInclude<ExtArgs> | null
    /**
     * The data needed to update a services_images.
     */
    data: XOR<services_imagesUpdateInput, services_imagesUncheckedUpdateInput>
    /**
     * Choose, which services_images to update.
     */
    where: services_imagesWhereUniqueInput
  }

  /**
   * services_images updateMany
   */
  export type services_imagesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update services_images.
     */
    data: XOR<services_imagesUpdateManyMutationInput, services_imagesUncheckedUpdateManyInput>
    /**
     * Filter which services_images to update
     */
    where?: services_imagesWhereInput
    /**
     * Limit how many services_images to update.
     */
    limit?: number
  }

  /**
   * services_images upsert
   */
  export type services_imagesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the services_images
     */
    select?: services_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the services_images
     */
    omit?: services_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: services_imagesInclude<ExtArgs> | null
    /**
     * The filter to search for the services_images to update in case it exists.
     */
    where: services_imagesWhereUniqueInput
    /**
     * In case the services_images found by the `where` argument doesn't exist, create a new services_images with this data.
     */
    create: XOR<services_imagesCreateInput, services_imagesUncheckedCreateInput>
    /**
     * In case the services_images was found with the provided `where` argument, update it with this data.
     */
    update: XOR<services_imagesUpdateInput, services_imagesUncheckedUpdateInput>
  }

  /**
   * services_images delete
   */
  export type services_imagesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the services_images
     */
    select?: services_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the services_images
     */
    omit?: services_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: services_imagesInclude<ExtArgs> | null
    /**
     * Filter which services_images to delete.
     */
    where: services_imagesWhereUniqueInput
  }

  /**
   * services_images deleteMany
   */
  export type services_imagesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which services_images to delete
     */
    where?: services_imagesWhereInput
    /**
     * Limit how many services_images to delete.
     */
    limit?: number
  }

  /**
   * services_images.services
   */
  export type services_images$servicesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the services
     */
    select?: servicesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the services
     */
    omit?: servicesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: servicesInclude<ExtArgs> | null
    where?: servicesWhereInput
  }

  /**
   * services_images without action
   */
  export type services_imagesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the services_images
     */
    select?: services_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the services_images
     */
    omit?: services_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: services_imagesInclude<ExtArgs> | null
  }


  /**
   * Model users
   */

  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersAvgAggregateOutputType = {
    id: number | null
    role_id: number | null
  }

  export type UsersSumAggregateOutputType = {
    id: number | null
    role_id: number | null
  }

  export type UsersMinAggregateOutputType = {
    id: number | null
    username: string | null
    email: string | null
    password: string | null
    role_id: number | null
    is_active: boolean | null
    created_at: Date | null
    updated_at: Date | null
    lastname: string | null
    photo: string | null
  }

  export type UsersMaxAggregateOutputType = {
    id: number | null
    username: string | null
    email: string | null
    password: string | null
    role_id: number | null
    is_active: boolean | null
    created_at: Date | null
    updated_at: Date | null
    lastname: string | null
    photo: string | null
  }

  export type UsersCountAggregateOutputType = {
    id: number
    username: number
    email: number
    password: number
    role_id: number
    is_active: number
    created_at: number
    updated_at: number
    lastname: number
    photo: number
    _all: number
  }


  export type UsersAvgAggregateInputType = {
    id?: true
    role_id?: true
  }

  export type UsersSumAggregateInputType = {
    id?: true
    role_id?: true
  }

  export type UsersMinAggregateInputType = {
    id?: true
    username?: true
    email?: true
    password?: true
    role_id?: true
    is_active?: true
    created_at?: true
    updated_at?: true
    lastname?: true
    photo?: true
  }

  export type UsersMaxAggregateInputType = {
    id?: true
    username?: true
    email?: true
    password?: true
    role_id?: true
    is_active?: true
    created_at?: true
    updated_at?: true
    lastname?: true
    photo?: true
  }

  export type UsersCountAggregateInputType = {
    id?: true
    username?: true
    email?: true
    password?: true
    role_id?: true
    is_active?: true
    created_at?: true
    updated_at?: true
    lastname?: true
    photo?: true
    _all?: true
  }

  export type UsersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to aggregate.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type usersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usersWhereInput
    orderBy?: usersOrderByWithAggregationInput | usersOrderByWithAggregationInput[]
    by: UsersScalarFieldEnum[] | UsersScalarFieldEnum
    having?: usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _avg?: UsersAvgAggregateInputType
    _sum?: UsersSumAggregateInputType
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }

  export type UsersGroupByOutputType = {
    id: number
    username: string
    email: string
    password: string
    role_id: number
    is_active: boolean | null
    created_at: Date
    updated_at: Date
    lastname: string
    photo: string | null
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends usersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type usersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    email?: boolean
    password?: boolean
    role_id?: boolean
    is_active?: boolean
    created_at?: boolean
    updated_at?: boolean
    lastname?: boolean
    photo?: boolean
    roles?: boolean | rolesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>



  export type usersSelectScalar = {
    id?: boolean
    username?: boolean
    email?: boolean
    password?: boolean
    role_id?: boolean
    is_active?: boolean
    created_at?: boolean
    updated_at?: boolean
    lastname?: boolean
    photo?: boolean
  }

  export type usersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "username" | "email" | "password" | "role_id" | "is_active" | "created_at" | "updated_at" | "lastname" | "photo", ExtArgs["result"]["users"]>
  export type usersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    roles?: boolean | rolesDefaultArgs<ExtArgs>
  }

  export type $usersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "users"
    objects: {
      roles: Prisma.$rolesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      username: string
      email: string
      password: string
      role_id: number
      is_active: boolean | null
      created_at: Date
      updated_at: Date
      lastname: string
      photo: string | null
    }, ExtArgs["result"]["users"]>
    composites: {}
  }

  type usersGetPayload<S extends boolean | null | undefined | usersDefaultArgs> = $Result.GetResult<Prisma.$usersPayload, S>

  type usersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<usersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsersCountAggregateInputType | true
    }

  export interface usersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['users'], meta: { name: 'users' } }
    /**
     * Find zero or one Users that matches the filter.
     * @param {usersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends usersFindUniqueArgs>(args: SelectSubset<T, usersFindUniqueArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Users that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {usersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends usersFindUniqueOrThrowArgs>(args: SelectSubset<T, usersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends usersFindFirstArgs>(args?: SelectSubset<T, usersFindFirstArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends usersFindFirstOrThrowArgs>(args?: SelectSubset<T, usersFindFirstOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usersWithIdOnly = await prisma.users.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends usersFindManyArgs>(args?: SelectSubset<T, usersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Users.
     * @param {usersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
     */
    create<T extends usersCreateArgs>(args: SelectSubset<T, usersCreateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {usersCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends usersCreateManyArgs>(args?: SelectSubset<T, usersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Users.
     * @param {usersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
     */
    delete<T extends usersDeleteArgs>(args: SelectSubset<T, usersDeleteArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Users.
     * @param {usersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends usersUpdateArgs>(args: SelectSubset<T, usersUpdateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {usersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends usersDeleteManyArgs>(args?: SelectSubset<T, usersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends usersUpdateManyArgs>(args: SelectSubset<T, usersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Users.
     * @param {usersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
     */
    upsert<T extends usersUpsertArgs>(args: SelectSubset<T, usersUpsertArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends usersCountArgs>(
      args?: Subset<T, usersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): Prisma.PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usersGroupByArgs['orderBy'] }
        : { orderBy?: usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the users model
   */
  readonly fields: usersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    roles<T extends rolesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, rolesDefaultArgs<ExtArgs>>): Prisma__rolesClient<$Result.GetResult<Prisma.$rolesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the users model
   */
  interface usersFieldRefs {
    readonly id: FieldRef<"users", 'Int'>
    readonly username: FieldRef<"users", 'String'>
    readonly email: FieldRef<"users", 'String'>
    readonly password: FieldRef<"users", 'String'>
    readonly role_id: FieldRef<"users", 'Int'>
    readonly is_active: FieldRef<"users", 'Boolean'>
    readonly created_at: FieldRef<"users", 'DateTime'>
    readonly updated_at: FieldRef<"users", 'DateTime'>
    readonly lastname: FieldRef<"users", 'String'>
    readonly photo: FieldRef<"users", 'String'>
  }
    

  // Custom InputTypes
  /**
   * users findUnique
   */
  export type usersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findUniqueOrThrow
   */
  export type usersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findFirst
   */
  export type usersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findFirstOrThrow
   */
  export type usersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findMany
   */
  export type usersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users create
   */
  export type usersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to create a users.
     */
    data: XOR<usersCreateInput, usersUncheckedCreateInput>
  }

  /**
   * users createMany
   */
  export type usersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * users update
   */
  export type usersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to update a users.
     */
    data: XOR<usersUpdateInput, usersUncheckedUpdateInput>
    /**
     * Choose, which users to update.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users updateMany
   */
  export type usersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
  }

  /**
   * users upsert
   */
  export type usersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The filter to search for the users to update in case it exists.
     */
    where: usersWhereUniqueInput
    /**
     * In case the users found by the `where` argument doesn't exist, create a new users with this data.
     */
    create: XOR<usersCreateInput, usersUncheckedCreateInput>
    /**
     * In case the users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usersUpdateInput, usersUncheckedUpdateInput>
  }

  /**
   * users delete
   */
  export type usersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter which users to delete.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users deleteMany
   */
  export type usersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to delete
     */
    where?: usersWhereInput
    /**
     * Limit how many users to delete.
     */
    limit?: number
  }

  /**
   * users without action
   */
  export type usersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
  }


  /**
   * Model variant_attribute_options
   */

  export type AggregateVariant_attribute_options = {
    _count: Variant_attribute_optionsCountAggregateOutputType | null
    _avg: Variant_attribute_optionsAvgAggregateOutputType | null
    _sum: Variant_attribute_optionsSumAggregateOutputType | null
    _min: Variant_attribute_optionsMinAggregateOutputType | null
    _max: Variant_attribute_optionsMaxAggregateOutputType | null
  }

  export type Variant_attribute_optionsAvgAggregateOutputType = {
    variant_id: number | null
    attribute_option_id: number | null
  }

  export type Variant_attribute_optionsSumAggregateOutputType = {
    variant_id: number | null
    attribute_option_id: number | null
  }

  export type Variant_attribute_optionsMinAggregateOutputType = {
    variant_id: number | null
    attribute_option_id: number | null
  }

  export type Variant_attribute_optionsMaxAggregateOutputType = {
    variant_id: number | null
    attribute_option_id: number | null
  }

  export type Variant_attribute_optionsCountAggregateOutputType = {
    variant_id: number
    attribute_option_id: number
    _all: number
  }


  export type Variant_attribute_optionsAvgAggregateInputType = {
    variant_id?: true
    attribute_option_id?: true
  }

  export type Variant_attribute_optionsSumAggregateInputType = {
    variant_id?: true
    attribute_option_id?: true
  }

  export type Variant_attribute_optionsMinAggregateInputType = {
    variant_id?: true
    attribute_option_id?: true
  }

  export type Variant_attribute_optionsMaxAggregateInputType = {
    variant_id?: true
    attribute_option_id?: true
  }

  export type Variant_attribute_optionsCountAggregateInputType = {
    variant_id?: true
    attribute_option_id?: true
    _all?: true
  }

  export type Variant_attribute_optionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which variant_attribute_options to aggregate.
     */
    where?: variant_attribute_optionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of variant_attribute_options to fetch.
     */
    orderBy?: variant_attribute_optionsOrderByWithRelationInput | variant_attribute_optionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: variant_attribute_optionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` variant_attribute_options from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` variant_attribute_options.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned variant_attribute_options
    **/
    _count?: true | Variant_attribute_optionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Variant_attribute_optionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Variant_attribute_optionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Variant_attribute_optionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Variant_attribute_optionsMaxAggregateInputType
  }

  export type GetVariant_attribute_optionsAggregateType<T extends Variant_attribute_optionsAggregateArgs> = {
        [P in keyof T & keyof AggregateVariant_attribute_options]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVariant_attribute_options[P]>
      : GetScalarType<T[P], AggregateVariant_attribute_options[P]>
  }




  export type variant_attribute_optionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: variant_attribute_optionsWhereInput
    orderBy?: variant_attribute_optionsOrderByWithAggregationInput | variant_attribute_optionsOrderByWithAggregationInput[]
    by: Variant_attribute_optionsScalarFieldEnum[] | Variant_attribute_optionsScalarFieldEnum
    having?: variant_attribute_optionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Variant_attribute_optionsCountAggregateInputType | true
    _avg?: Variant_attribute_optionsAvgAggregateInputType
    _sum?: Variant_attribute_optionsSumAggregateInputType
    _min?: Variant_attribute_optionsMinAggregateInputType
    _max?: Variant_attribute_optionsMaxAggregateInputType
  }

  export type Variant_attribute_optionsGroupByOutputType = {
    variant_id: number
    attribute_option_id: number
    _count: Variant_attribute_optionsCountAggregateOutputType | null
    _avg: Variant_attribute_optionsAvgAggregateOutputType | null
    _sum: Variant_attribute_optionsSumAggregateOutputType | null
    _min: Variant_attribute_optionsMinAggregateOutputType | null
    _max: Variant_attribute_optionsMaxAggregateOutputType | null
  }

  type GetVariant_attribute_optionsGroupByPayload<T extends variant_attribute_optionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Variant_attribute_optionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Variant_attribute_optionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Variant_attribute_optionsGroupByOutputType[P]>
            : GetScalarType<T[P], Variant_attribute_optionsGroupByOutputType[P]>
        }
      >
    >


  export type variant_attribute_optionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    variant_id?: boolean
    attribute_option_id?: boolean
    attribute_options?: boolean | attribute_optionsDefaultArgs<ExtArgs>
    product_variants?: boolean | product_variantsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["variant_attribute_options"]>



  export type variant_attribute_optionsSelectScalar = {
    variant_id?: boolean
    attribute_option_id?: boolean
  }

  export type variant_attribute_optionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"variant_id" | "attribute_option_id", ExtArgs["result"]["variant_attribute_options"]>
  export type variant_attribute_optionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    attribute_options?: boolean | attribute_optionsDefaultArgs<ExtArgs>
    product_variants?: boolean | product_variantsDefaultArgs<ExtArgs>
  }

  export type $variant_attribute_optionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "variant_attribute_options"
    objects: {
      attribute_options: Prisma.$attribute_optionsPayload<ExtArgs>
      product_variants: Prisma.$product_variantsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      variant_id: number
      attribute_option_id: number
    }, ExtArgs["result"]["variant_attribute_options"]>
    composites: {}
  }

  type variant_attribute_optionsGetPayload<S extends boolean | null | undefined | variant_attribute_optionsDefaultArgs> = $Result.GetResult<Prisma.$variant_attribute_optionsPayload, S>

  type variant_attribute_optionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<variant_attribute_optionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Variant_attribute_optionsCountAggregateInputType | true
    }

  export interface variant_attribute_optionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['variant_attribute_options'], meta: { name: 'variant_attribute_options' } }
    /**
     * Find zero or one Variant_attribute_options that matches the filter.
     * @param {variant_attribute_optionsFindUniqueArgs} args - Arguments to find a Variant_attribute_options
     * @example
     * // Get one Variant_attribute_options
     * const variant_attribute_options = await prisma.variant_attribute_options.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends variant_attribute_optionsFindUniqueArgs>(args: SelectSubset<T, variant_attribute_optionsFindUniqueArgs<ExtArgs>>): Prisma__variant_attribute_optionsClient<$Result.GetResult<Prisma.$variant_attribute_optionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Variant_attribute_options that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {variant_attribute_optionsFindUniqueOrThrowArgs} args - Arguments to find a Variant_attribute_options
     * @example
     * // Get one Variant_attribute_options
     * const variant_attribute_options = await prisma.variant_attribute_options.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends variant_attribute_optionsFindUniqueOrThrowArgs>(args: SelectSubset<T, variant_attribute_optionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__variant_attribute_optionsClient<$Result.GetResult<Prisma.$variant_attribute_optionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Variant_attribute_options that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {variant_attribute_optionsFindFirstArgs} args - Arguments to find a Variant_attribute_options
     * @example
     * // Get one Variant_attribute_options
     * const variant_attribute_options = await prisma.variant_attribute_options.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends variant_attribute_optionsFindFirstArgs>(args?: SelectSubset<T, variant_attribute_optionsFindFirstArgs<ExtArgs>>): Prisma__variant_attribute_optionsClient<$Result.GetResult<Prisma.$variant_attribute_optionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Variant_attribute_options that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {variant_attribute_optionsFindFirstOrThrowArgs} args - Arguments to find a Variant_attribute_options
     * @example
     * // Get one Variant_attribute_options
     * const variant_attribute_options = await prisma.variant_attribute_options.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends variant_attribute_optionsFindFirstOrThrowArgs>(args?: SelectSubset<T, variant_attribute_optionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__variant_attribute_optionsClient<$Result.GetResult<Prisma.$variant_attribute_optionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Variant_attribute_options that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {variant_attribute_optionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Variant_attribute_options
     * const variant_attribute_options = await prisma.variant_attribute_options.findMany()
     * 
     * // Get first 10 Variant_attribute_options
     * const variant_attribute_options = await prisma.variant_attribute_options.findMany({ take: 10 })
     * 
     * // Only select the `variant_id`
     * const variant_attribute_optionsWithVariant_idOnly = await prisma.variant_attribute_options.findMany({ select: { variant_id: true } })
     * 
     */
    findMany<T extends variant_attribute_optionsFindManyArgs>(args?: SelectSubset<T, variant_attribute_optionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$variant_attribute_optionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Variant_attribute_options.
     * @param {variant_attribute_optionsCreateArgs} args - Arguments to create a Variant_attribute_options.
     * @example
     * // Create one Variant_attribute_options
     * const Variant_attribute_options = await prisma.variant_attribute_options.create({
     *   data: {
     *     // ... data to create a Variant_attribute_options
     *   }
     * })
     * 
     */
    create<T extends variant_attribute_optionsCreateArgs>(args: SelectSubset<T, variant_attribute_optionsCreateArgs<ExtArgs>>): Prisma__variant_attribute_optionsClient<$Result.GetResult<Prisma.$variant_attribute_optionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Variant_attribute_options.
     * @param {variant_attribute_optionsCreateManyArgs} args - Arguments to create many Variant_attribute_options.
     * @example
     * // Create many Variant_attribute_options
     * const variant_attribute_options = await prisma.variant_attribute_options.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends variant_attribute_optionsCreateManyArgs>(args?: SelectSubset<T, variant_attribute_optionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Variant_attribute_options.
     * @param {variant_attribute_optionsDeleteArgs} args - Arguments to delete one Variant_attribute_options.
     * @example
     * // Delete one Variant_attribute_options
     * const Variant_attribute_options = await prisma.variant_attribute_options.delete({
     *   where: {
     *     // ... filter to delete one Variant_attribute_options
     *   }
     * })
     * 
     */
    delete<T extends variant_attribute_optionsDeleteArgs>(args: SelectSubset<T, variant_attribute_optionsDeleteArgs<ExtArgs>>): Prisma__variant_attribute_optionsClient<$Result.GetResult<Prisma.$variant_attribute_optionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Variant_attribute_options.
     * @param {variant_attribute_optionsUpdateArgs} args - Arguments to update one Variant_attribute_options.
     * @example
     * // Update one Variant_attribute_options
     * const variant_attribute_options = await prisma.variant_attribute_options.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends variant_attribute_optionsUpdateArgs>(args: SelectSubset<T, variant_attribute_optionsUpdateArgs<ExtArgs>>): Prisma__variant_attribute_optionsClient<$Result.GetResult<Prisma.$variant_attribute_optionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Variant_attribute_options.
     * @param {variant_attribute_optionsDeleteManyArgs} args - Arguments to filter Variant_attribute_options to delete.
     * @example
     * // Delete a few Variant_attribute_options
     * const { count } = await prisma.variant_attribute_options.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends variant_attribute_optionsDeleteManyArgs>(args?: SelectSubset<T, variant_attribute_optionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Variant_attribute_options.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {variant_attribute_optionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Variant_attribute_options
     * const variant_attribute_options = await prisma.variant_attribute_options.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends variant_attribute_optionsUpdateManyArgs>(args: SelectSubset<T, variant_attribute_optionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Variant_attribute_options.
     * @param {variant_attribute_optionsUpsertArgs} args - Arguments to update or create a Variant_attribute_options.
     * @example
     * // Update or create a Variant_attribute_options
     * const variant_attribute_options = await prisma.variant_attribute_options.upsert({
     *   create: {
     *     // ... data to create a Variant_attribute_options
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Variant_attribute_options we want to update
     *   }
     * })
     */
    upsert<T extends variant_attribute_optionsUpsertArgs>(args: SelectSubset<T, variant_attribute_optionsUpsertArgs<ExtArgs>>): Prisma__variant_attribute_optionsClient<$Result.GetResult<Prisma.$variant_attribute_optionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Variant_attribute_options.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {variant_attribute_optionsCountArgs} args - Arguments to filter Variant_attribute_options to count.
     * @example
     * // Count the number of Variant_attribute_options
     * const count = await prisma.variant_attribute_options.count({
     *   where: {
     *     // ... the filter for the Variant_attribute_options we want to count
     *   }
     * })
    **/
    count<T extends variant_attribute_optionsCountArgs>(
      args?: Subset<T, variant_attribute_optionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Variant_attribute_optionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Variant_attribute_options.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Variant_attribute_optionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Variant_attribute_optionsAggregateArgs>(args: Subset<T, Variant_attribute_optionsAggregateArgs>): Prisma.PrismaPromise<GetVariant_attribute_optionsAggregateType<T>>

    /**
     * Group by Variant_attribute_options.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {variant_attribute_optionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends variant_attribute_optionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: variant_attribute_optionsGroupByArgs['orderBy'] }
        : { orderBy?: variant_attribute_optionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, variant_attribute_optionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVariant_attribute_optionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the variant_attribute_options model
   */
  readonly fields: variant_attribute_optionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for variant_attribute_options.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__variant_attribute_optionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    attribute_options<T extends attribute_optionsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, attribute_optionsDefaultArgs<ExtArgs>>): Prisma__attribute_optionsClient<$Result.GetResult<Prisma.$attribute_optionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    product_variants<T extends product_variantsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, product_variantsDefaultArgs<ExtArgs>>): Prisma__product_variantsClient<$Result.GetResult<Prisma.$product_variantsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the variant_attribute_options model
   */
  interface variant_attribute_optionsFieldRefs {
    readonly variant_id: FieldRef<"variant_attribute_options", 'Int'>
    readonly attribute_option_id: FieldRef<"variant_attribute_options", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * variant_attribute_options findUnique
   */
  export type variant_attribute_optionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_attribute_options
     */
    select?: variant_attribute_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_attribute_options
     */
    omit?: variant_attribute_optionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_attribute_optionsInclude<ExtArgs> | null
    /**
     * Filter, which variant_attribute_options to fetch.
     */
    where: variant_attribute_optionsWhereUniqueInput
  }

  /**
   * variant_attribute_options findUniqueOrThrow
   */
  export type variant_attribute_optionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_attribute_options
     */
    select?: variant_attribute_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_attribute_options
     */
    omit?: variant_attribute_optionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_attribute_optionsInclude<ExtArgs> | null
    /**
     * Filter, which variant_attribute_options to fetch.
     */
    where: variant_attribute_optionsWhereUniqueInput
  }

  /**
   * variant_attribute_options findFirst
   */
  export type variant_attribute_optionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_attribute_options
     */
    select?: variant_attribute_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_attribute_options
     */
    omit?: variant_attribute_optionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_attribute_optionsInclude<ExtArgs> | null
    /**
     * Filter, which variant_attribute_options to fetch.
     */
    where?: variant_attribute_optionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of variant_attribute_options to fetch.
     */
    orderBy?: variant_attribute_optionsOrderByWithRelationInput | variant_attribute_optionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for variant_attribute_options.
     */
    cursor?: variant_attribute_optionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` variant_attribute_options from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` variant_attribute_options.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of variant_attribute_options.
     */
    distinct?: Variant_attribute_optionsScalarFieldEnum | Variant_attribute_optionsScalarFieldEnum[]
  }

  /**
   * variant_attribute_options findFirstOrThrow
   */
  export type variant_attribute_optionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_attribute_options
     */
    select?: variant_attribute_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_attribute_options
     */
    omit?: variant_attribute_optionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_attribute_optionsInclude<ExtArgs> | null
    /**
     * Filter, which variant_attribute_options to fetch.
     */
    where?: variant_attribute_optionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of variant_attribute_options to fetch.
     */
    orderBy?: variant_attribute_optionsOrderByWithRelationInput | variant_attribute_optionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for variant_attribute_options.
     */
    cursor?: variant_attribute_optionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` variant_attribute_options from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` variant_attribute_options.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of variant_attribute_options.
     */
    distinct?: Variant_attribute_optionsScalarFieldEnum | Variant_attribute_optionsScalarFieldEnum[]
  }

  /**
   * variant_attribute_options findMany
   */
  export type variant_attribute_optionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_attribute_options
     */
    select?: variant_attribute_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_attribute_options
     */
    omit?: variant_attribute_optionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_attribute_optionsInclude<ExtArgs> | null
    /**
     * Filter, which variant_attribute_options to fetch.
     */
    where?: variant_attribute_optionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of variant_attribute_options to fetch.
     */
    orderBy?: variant_attribute_optionsOrderByWithRelationInput | variant_attribute_optionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing variant_attribute_options.
     */
    cursor?: variant_attribute_optionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` variant_attribute_options from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` variant_attribute_options.
     */
    skip?: number
    distinct?: Variant_attribute_optionsScalarFieldEnum | Variant_attribute_optionsScalarFieldEnum[]
  }

  /**
   * variant_attribute_options create
   */
  export type variant_attribute_optionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_attribute_options
     */
    select?: variant_attribute_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_attribute_options
     */
    omit?: variant_attribute_optionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_attribute_optionsInclude<ExtArgs> | null
    /**
     * The data needed to create a variant_attribute_options.
     */
    data: XOR<variant_attribute_optionsCreateInput, variant_attribute_optionsUncheckedCreateInput>
  }

  /**
   * variant_attribute_options createMany
   */
  export type variant_attribute_optionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many variant_attribute_options.
     */
    data: variant_attribute_optionsCreateManyInput | variant_attribute_optionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * variant_attribute_options update
   */
  export type variant_attribute_optionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_attribute_options
     */
    select?: variant_attribute_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_attribute_options
     */
    omit?: variant_attribute_optionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_attribute_optionsInclude<ExtArgs> | null
    /**
     * The data needed to update a variant_attribute_options.
     */
    data: XOR<variant_attribute_optionsUpdateInput, variant_attribute_optionsUncheckedUpdateInput>
    /**
     * Choose, which variant_attribute_options to update.
     */
    where: variant_attribute_optionsWhereUniqueInput
  }

  /**
   * variant_attribute_options updateMany
   */
  export type variant_attribute_optionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update variant_attribute_options.
     */
    data: XOR<variant_attribute_optionsUpdateManyMutationInput, variant_attribute_optionsUncheckedUpdateManyInput>
    /**
     * Filter which variant_attribute_options to update
     */
    where?: variant_attribute_optionsWhereInput
    /**
     * Limit how many variant_attribute_options to update.
     */
    limit?: number
  }

  /**
   * variant_attribute_options upsert
   */
  export type variant_attribute_optionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_attribute_options
     */
    select?: variant_attribute_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_attribute_options
     */
    omit?: variant_attribute_optionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_attribute_optionsInclude<ExtArgs> | null
    /**
     * The filter to search for the variant_attribute_options to update in case it exists.
     */
    where: variant_attribute_optionsWhereUniqueInput
    /**
     * In case the variant_attribute_options found by the `where` argument doesn't exist, create a new variant_attribute_options with this data.
     */
    create: XOR<variant_attribute_optionsCreateInput, variant_attribute_optionsUncheckedCreateInput>
    /**
     * In case the variant_attribute_options was found with the provided `where` argument, update it with this data.
     */
    update: XOR<variant_attribute_optionsUpdateInput, variant_attribute_optionsUncheckedUpdateInput>
  }

  /**
   * variant_attribute_options delete
   */
  export type variant_attribute_optionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_attribute_options
     */
    select?: variant_attribute_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_attribute_options
     */
    omit?: variant_attribute_optionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_attribute_optionsInclude<ExtArgs> | null
    /**
     * Filter which variant_attribute_options to delete.
     */
    where: variant_attribute_optionsWhereUniqueInput
  }

  /**
   * variant_attribute_options deleteMany
   */
  export type variant_attribute_optionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which variant_attribute_options to delete
     */
    where?: variant_attribute_optionsWhereInput
    /**
     * Limit how many variant_attribute_options to delete.
     */
    limit?: number
  }

  /**
   * variant_attribute_options without action
   */
  export type variant_attribute_optionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_attribute_options
     */
    select?: variant_attribute_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_attribute_options
     */
    omit?: variant_attribute_optionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_attribute_optionsInclude<ExtArgs> | null
  }


  /**
   * Model variant_images
   */

  export type AggregateVariant_images = {
    _count: Variant_imagesCountAggregateOutputType | null
    _avg: Variant_imagesAvgAggregateOutputType | null
    _sum: Variant_imagesSumAggregateOutputType | null
    _min: Variant_imagesMinAggregateOutputType | null
    _max: Variant_imagesMaxAggregateOutputType | null
  }

  export type Variant_imagesAvgAggregateOutputType = {
    id: number | null
    variant_id: number | null
    display_order: number | null
  }

  export type Variant_imagesSumAggregateOutputType = {
    id: number | null
    variant_id: number | null
    display_order: number | null
  }

  export type Variant_imagesMinAggregateOutputType = {
    id: number | null
    variant_id: number | null
    image_type: $Enums.variant_images_image_type | null
    image_url_thumb: string | null
    image_url_normal: string | null
    image_url_zoom: string | null
    is_primary: boolean | null
    display_order: number | null
    alt_text: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Variant_imagesMaxAggregateOutputType = {
    id: number | null
    variant_id: number | null
    image_type: $Enums.variant_images_image_type | null
    image_url_thumb: string | null
    image_url_normal: string | null
    image_url_zoom: string | null
    is_primary: boolean | null
    display_order: number | null
    alt_text: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Variant_imagesCountAggregateOutputType = {
    id: number
    variant_id: number
    image_type: number
    image_url_thumb: number
    image_url_normal: number
    image_url_zoom: number
    is_primary: number
    display_order: number
    alt_text: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Variant_imagesAvgAggregateInputType = {
    id?: true
    variant_id?: true
    display_order?: true
  }

  export type Variant_imagesSumAggregateInputType = {
    id?: true
    variant_id?: true
    display_order?: true
  }

  export type Variant_imagesMinAggregateInputType = {
    id?: true
    variant_id?: true
    image_type?: true
    image_url_thumb?: true
    image_url_normal?: true
    image_url_zoom?: true
    is_primary?: true
    display_order?: true
    alt_text?: true
    created_at?: true
    updated_at?: true
  }

  export type Variant_imagesMaxAggregateInputType = {
    id?: true
    variant_id?: true
    image_type?: true
    image_url_thumb?: true
    image_url_normal?: true
    image_url_zoom?: true
    is_primary?: true
    display_order?: true
    alt_text?: true
    created_at?: true
    updated_at?: true
  }

  export type Variant_imagesCountAggregateInputType = {
    id?: true
    variant_id?: true
    image_type?: true
    image_url_thumb?: true
    image_url_normal?: true
    image_url_zoom?: true
    is_primary?: true
    display_order?: true
    alt_text?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Variant_imagesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which variant_images to aggregate.
     */
    where?: variant_imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of variant_images to fetch.
     */
    orderBy?: variant_imagesOrderByWithRelationInput | variant_imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: variant_imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` variant_images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` variant_images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned variant_images
    **/
    _count?: true | Variant_imagesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Variant_imagesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Variant_imagesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Variant_imagesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Variant_imagesMaxAggregateInputType
  }

  export type GetVariant_imagesAggregateType<T extends Variant_imagesAggregateArgs> = {
        [P in keyof T & keyof AggregateVariant_images]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVariant_images[P]>
      : GetScalarType<T[P], AggregateVariant_images[P]>
  }




  export type variant_imagesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: variant_imagesWhereInput
    orderBy?: variant_imagesOrderByWithAggregationInput | variant_imagesOrderByWithAggregationInput[]
    by: Variant_imagesScalarFieldEnum[] | Variant_imagesScalarFieldEnum
    having?: variant_imagesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Variant_imagesCountAggregateInputType | true
    _avg?: Variant_imagesAvgAggregateInputType
    _sum?: Variant_imagesSumAggregateInputType
    _min?: Variant_imagesMinAggregateInputType
    _max?: Variant_imagesMaxAggregateInputType
  }

  export type Variant_imagesGroupByOutputType = {
    id: number
    variant_id: number
    image_type: $Enums.variant_images_image_type
    image_url_thumb: string
    image_url_normal: string
    image_url_zoom: string
    is_primary: boolean | null
    display_order: number | null
    alt_text: string | null
    created_at: Date
    updated_at: Date
    _count: Variant_imagesCountAggregateOutputType | null
    _avg: Variant_imagesAvgAggregateOutputType | null
    _sum: Variant_imagesSumAggregateOutputType | null
    _min: Variant_imagesMinAggregateOutputType | null
    _max: Variant_imagesMaxAggregateOutputType | null
  }

  type GetVariant_imagesGroupByPayload<T extends variant_imagesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Variant_imagesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Variant_imagesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Variant_imagesGroupByOutputType[P]>
            : GetScalarType<T[P], Variant_imagesGroupByOutputType[P]>
        }
      >
    >


  export type variant_imagesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    variant_id?: boolean
    image_type?: boolean
    image_url_thumb?: boolean
    image_url_normal?: boolean
    image_url_zoom?: boolean
    is_primary?: boolean
    display_order?: boolean
    alt_text?: boolean
    created_at?: boolean
    updated_at?: boolean
    product_variants?: boolean | product_variantsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["variant_images"]>



  export type variant_imagesSelectScalar = {
    id?: boolean
    variant_id?: boolean
    image_type?: boolean
    image_url_thumb?: boolean
    image_url_normal?: boolean
    image_url_zoom?: boolean
    is_primary?: boolean
    display_order?: boolean
    alt_text?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type variant_imagesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "variant_id" | "image_type" | "image_url_thumb" | "image_url_normal" | "image_url_zoom" | "is_primary" | "display_order" | "alt_text" | "created_at" | "updated_at", ExtArgs["result"]["variant_images"]>
  export type variant_imagesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product_variants?: boolean | product_variantsDefaultArgs<ExtArgs>
  }

  export type $variant_imagesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "variant_images"
    objects: {
      product_variants: Prisma.$product_variantsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      variant_id: number
      image_type: $Enums.variant_images_image_type
      image_url_thumb: string
      image_url_normal: string
      image_url_zoom: string
      is_primary: boolean | null
      display_order: number | null
      alt_text: string | null
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["variant_images"]>
    composites: {}
  }

  type variant_imagesGetPayload<S extends boolean | null | undefined | variant_imagesDefaultArgs> = $Result.GetResult<Prisma.$variant_imagesPayload, S>

  type variant_imagesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<variant_imagesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Variant_imagesCountAggregateInputType | true
    }

  export interface variant_imagesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['variant_images'], meta: { name: 'variant_images' } }
    /**
     * Find zero or one Variant_images that matches the filter.
     * @param {variant_imagesFindUniqueArgs} args - Arguments to find a Variant_images
     * @example
     * // Get one Variant_images
     * const variant_images = await prisma.variant_images.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends variant_imagesFindUniqueArgs>(args: SelectSubset<T, variant_imagesFindUniqueArgs<ExtArgs>>): Prisma__variant_imagesClient<$Result.GetResult<Prisma.$variant_imagesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Variant_images that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {variant_imagesFindUniqueOrThrowArgs} args - Arguments to find a Variant_images
     * @example
     * // Get one Variant_images
     * const variant_images = await prisma.variant_images.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends variant_imagesFindUniqueOrThrowArgs>(args: SelectSubset<T, variant_imagesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__variant_imagesClient<$Result.GetResult<Prisma.$variant_imagesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Variant_images that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {variant_imagesFindFirstArgs} args - Arguments to find a Variant_images
     * @example
     * // Get one Variant_images
     * const variant_images = await prisma.variant_images.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends variant_imagesFindFirstArgs>(args?: SelectSubset<T, variant_imagesFindFirstArgs<ExtArgs>>): Prisma__variant_imagesClient<$Result.GetResult<Prisma.$variant_imagesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Variant_images that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {variant_imagesFindFirstOrThrowArgs} args - Arguments to find a Variant_images
     * @example
     * // Get one Variant_images
     * const variant_images = await prisma.variant_images.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends variant_imagesFindFirstOrThrowArgs>(args?: SelectSubset<T, variant_imagesFindFirstOrThrowArgs<ExtArgs>>): Prisma__variant_imagesClient<$Result.GetResult<Prisma.$variant_imagesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Variant_images that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {variant_imagesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Variant_images
     * const variant_images = await prisma.variant_images.findMany()
     * 
     * // Get first 10 Variant_images
     * const variant_images = await prisma.variant_images.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const variant_imagesWithIdOnly = await prisma.variant_images.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends variant_imagesFindManyArgs>(args?: SelectSubset<T, variant_imagesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$variant_imagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Variant_images.
     * @param {variant_imagesCreateArgs} args - Arguments to create a Variant_images.
     * @example
     * // Create one Variant_images
     * const Variant_images = await prisma.variant_images.create({
     *   data: {
     *     // ... data to create a Variant_images
     *   }
     * })
     * 
     */
    create<T extends variant_imagesCreateArgs>(args: SelectSubset<T, variant_imagesCreateArgs<ExtArgs>>): Prisma__variant_imagesClient<$Result.GetResult<Prisma.$variant_imagesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Variant_images.
     * @param {variant_imagesCreateManyArgs} args - Arguments to create many Variant_images.
     * @example
     * // Create many Variant_images
     * const variant_images = await prisma.variant_images.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends variant_imagesCreateManyArgs>(args?: SelectSubset<T, variant_imagesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Variant_images.
     * @param {variant_imagesDeleteArgs} args - Arguments to delete one Variant_images.
     * @example
     * // Delete one Variant_images
     * const Variant_images = await prisma.variant_images.delete({
     *   where: {
     *     // ... filter to delete one Variant_images
     *   }
     * })
     * 
     */
    delete<T extends variant_imagesDeleteArgs>(args: SelectSubset<T, variant_imagesDeleteArgs<ExtArgs>>): Prisma__variant_imagesClient<$Result.GetResult<Prisma.$variant_imagesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Variant_images.
     * @param {variant_imagesUpdateArgs} args - Arguments to update one Variant_images.
     * @example
     * // Update one Variant_images
     * const variant_images = await prisma.variant_images.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends variant_imagesUpdateArgs>(args: SelectSubset<T, variant_imagesUpdateArgs<ExtArgs>>): Prisma__variant_imagesClient<$Result.GetResult<Prisma.$variant_imagesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Variant_images.
     * @param {variant_imagesDeleteManyArgs} args - Arguments to filter Variant_images to delete.
     * @example
     * // Delete a few Variant_images
     * const { count } = await prisma.variant_images.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends variant_imagesDeleteManyArgs>(args?: SelectSubset<T, variant_imagesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Variant_images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {variant_imagesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Variant_images
     * const variant_images = await prisma.variant_images.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends variant_imagesUpdateManyArgs>(args: SelectSubset<T, variant_imagesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Variant_images.
     * @param {variant_imagesUpsertArgs} args - Arguments to update or create a Variant_images.
     * @example
     * // Update or create a Variant_images
     * const variant_images = await prisma.variant_images.upsert({
     *   create: {
     *     // ... data to create a Variant_images
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Variant_images we want to update
     *   }
     * })
     */
    upsert<T extends variant_imagesUpsertArgs>(args: SelectSubset<T, variant_imagesUpsertArgs<ExtArgs>>): Prisma__variant_imagesClient<$Result.GetResult<Prisma.$variant_imagesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Variant_images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {variant_imagesCountArgs} args - Arguments to filter Variant_images to count.
     * @example
     * // Count the number of Variant_images
     * const count = await prisma.variant_images.count({
     *   where: {
     *     // ... the filter for the Variant_images we want to count
     *   }
     * })
    **/
    count<T extends variant_imagesCountArgs>(
      args?: Subset<T, variant_imagesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Variant_imagesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Variant_images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Variant_imagesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Variant_imagesAggregateArgs>(args: Subset<T, Variant_imagesAggregateArgs>): Prisma.PrismaPromise<GetVariant_imagesAggregateType<T>>

    /**
     * Group by Variant_images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {variant_imagesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends variant_imagesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: variant_imagesGroupByArgs['orderBy'] }
        : { orderBy?: variant_imagesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, variant_imagesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVariant_imagesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the variant_images model
   */
  readonly fields: variant_imagesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for variant_images.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__variant_imagesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product_variants<T extends product_variantsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, product_variantsDefaultArgs<ExtArgs>>): Prisma__product_variantsClient<$Result.GetResult<Prisma.$product_variantsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the variant_images model
   */
  interface variant_imagesFieldRefs {
    readonly id: FieldRef<"variant_images", 'Int'>
    readonly variant_id: FieldRef<"variant_images", 'Int'>
    readonly image_type: FieldRef<"variant_images", 'variant_images_image_type'>
    readonly image_url_thumb: FieldRef<"variant_images", 'String'>
    readonly image_url_normal: FieldRef<"variant_images", 'String'>
    readonly image_url_zoom: FieldRef<"variant_images", 'String'>
    readonly is_primary: FieldRef<"variant_images", 'Boolean'>
    readonly display_order: FieldRef<"variant_images", 'Int'>
    readonly alt_text: FieldRef<"variant_images", 'String'>
    readonly created_at: FieldRef<"variant_images", 'DateTime'>
    readonly updated_at: FieldRef<"variant_images", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * variant_images findUnique
   */
  export type variant_imagesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_images
     */
    select?: variant_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_images
     */
    omit?: variant_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_imagesInclude<ExtArgs> | null
    /**
     * Filter, which variant_images to fetch.
     */
    where: variant_imagesWhereUniqueInput
  }

  /**
   * variant_images findUniqueOrThrow
   */
  export type variant_imagesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_images
     */
    select?: variant_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_images
     */
    omit?: variant_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_imagesInclude<ExtArgs> | null
    /**
     * Filter, which variant_images to fetch.
     */
    where: variant_imagesWhereUniqueInput
  }

  /**
   * variant_images findFirst
   */
  export type variant_imagesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_images
     */
    select?: variant_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_images
     */
    omit?: variant_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_imagesInclude<ExtArgs> | null
    /**
     * Filter, which variant_images to fetch.
     */
    where?: variant_imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of variant_images to fetch.
     */
    orderBy?: variant_imagesOrderByWithRelationInput | variant_imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for variant_images.
     */
    cursor?: variant_imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` variant_images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` variant_images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of variant_images.
     */
    distinct?: Variant_imagesScalarFieldEnum | Variant_imagesScalarFieldEnum[]
  }

  /**
   * variant_images findFirstOrThrow
   */
  export type variant_imagesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_images
     */
    select?: variant_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_images
     */
    omit?: variant_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_imagesInclude<ExtArgs> | null
    /**
     * Filter, which variant_images to fetch.
     */
    where?: variant_imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of variant_images to fetch.
     */
    orderBy?: variant_imagesOrderByWithRelationInput | variant_imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for variant_images.
     */
    cursor?: variant_imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` variant_images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` variant_images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of variant_images.
     */
    distinct?: Variant_imagesScalarFieldEnum | Variant_imagesScalarFieldEnum[]
  }

  /**
   * variant_images findMany
   */
  export type variant_imagesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_images
     */
    select?: variant_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_images
     */
    omit?: variant_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_imagesInclude<ExtArgs> | null
    /**
     * Filter, which variant_images to fetch.
     */
    where?: variant_imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of variant_images to fetch.
     */
    orderBy?: variant_imagesOrderByWithRelationInput | variant_imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing variant_images.
     */
    cursor?: variant_imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` variant_images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` variant_images.
     */
    skip?: number
    distinct?: Variant_imagesScalarFieldEnum | Variant_imagesScalarFieldEnum[]
  }

  /**
   * variant_images create
   */
  export type variant_imagesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_images
     */
    select?: variant_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_images
     */
    omit?: variant_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_imagesInclude<ExtArgs> | null
    /**
     * The data needed to create a variant_images.
     */
    data: XOR<variant_imagesCreateInput, variant_imagesUncheckedCreateInput>
  }

  /**
   * variant_images createMany
   */
  export type variant_imagesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many variant_images.
     */
    data: variant_imagesCreateManyInput | variant_imagesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * variant_images update
   */
  export type variant_imagesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_images
     */
    select?: variant_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_images
     */
    omit?: variant_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_imagesInclude<ExtArgs> | null
    /**
     * The data needed to update a variant_images.
     */
    data: XOR<variant_imagesUpdateInput, variant_imagesUncheckedUpdateInput>
    /**
     * Choose, which variant_images to update.
     */
    where: variant_imagesWhereUniqueInput
  }

  /**
   * variant_images updateMany
   */
  export type variant_imagesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update variant_images.
     */
    data: XOR<variant_imagesUpdateManyMutationInput, variant_imagesUncheckedUpdateManyInput>
    /**
     * Filter which variant_images to update
     */
    where?: variant_imagesWhereInput
    /**
     * Limit how many variant_images to update.
     */
    limit?: number
  }

  /**
   * variant_images upsert
   */
  export type variant_imagesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_images
     */
    select?: variant_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_images
     */
    omit?: variant_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_imagesInclude<ExtArgs> | null
    /**
     * The filter to search for the variant_images to update in case it exists.
     */
    where: variant_imagesWhereUniqueInput
    /**
     * In case the variant_images found by the `where` argument doesn't exist, create a new variant_images with this data.
     */
    create: XOR<variant_imagesCreateInput, variant_imagesUncheckedCreateInput>
    /**
     * In case the variant_images was found with the provided `where` argument, update it with this data.
     */
    update: XOR<variant_imagesUpdateInput, variant_imagesUncheckedUpdateInput>
  }

  /**
   * variant_images delete
   */
  export type variant_imagesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_images
     */
    select?: variant_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_images
     */
    omit?: variant_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_imagesInclude<ExtArgs> | null
    /**
     * Filter which variant_images to delete.
     */
    where: variant_imagesWhereUniqueInput
  }

  /**
   * variant_images deleteMany
   */
  export type variant_imagesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which variant_images to delete
     */
    where?: variant_imagesWhereInput
    /**
     * Limit how many variant_images to delete.
     */
    limit?: number
  }

  /**
   * variant_images without action
   */
  export type variant_imagesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_images
     */
    select?: variant_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_images
     */
    omit?: variant_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_imagesInclude<ExtArgs> | null
  }


  /**
   * Model variant_ratings
   */

  export type AggregateVariant_ratings = {
    _count: Variant_ratingsCountAggregateOutputType | null
    _avg: Variant_ratingsAvgAggregateOutputType | null
    _sum: Variant_ratingsSumAggregateOutputType | null
    _min: Variant_ratingsMinAggregateOutputType | null
    _max: Variant_ratingsMaxAggregateOutputType | null
  }

  export type Variant_ratingsAvgAggregateOutputType = {
    id: number | null
    variant_id: number | null
    customer_id: number | null
    rating: number | null
  }

  export type Variant_ratingsSumAggregateOutputType = {
    id: number | null
    variant_id: number | null
    customer_id: number | null
    rating: number | null
  }

  export type Variant_ratingsMinAggregateOutputType = {
    id: number | null
    variant_id: number | null
    customer_id: number | null
    rating: number | null
    review: string | null
    title: string | null
    verified_purchase: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Variant_ratingsMaxAggregateOutputType = {
    id: number | null
    variant_id: number | null
    customer_id: number | null
    rating: number | null
    review: string | null
    title: string | null
    verified_purchase: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Variant_ratingsCountAggregateOutputType = {
    id: number
    variant_id: number
    customer_id: number
    rating: number
    review: number
    title: number
    verified_purchase: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Variant_ratingsAvgAggregateInputType = {
    id?: true
    variant_id?: true
    customer_id?: true
    rating?: true
  }

  export type Variant_ratingsSumAggregateInputType = {
    id?: true
    variant_id?: true
    customer_id?: true
    rating?: true
  }

  export type Variant_ratingsMinAggregateInputType = {
    id?: true
    variant_id?: true
    customer_id?: true
    rating?: true
    review?: true
    title?: true
    verified_purchase?: true
    created_at?: true
    updated_at?: true
  }

  export type Variant_ratingsMaxAggregateInputType = {
    id?: true
    variant_id?: true
    customer_id?: true
    rating?: true
    review?: true
    title?: true
    verified_purchase?: true
    created_at?: true
    updated_at?: true
  }

  export type Variant_ratingsCountAggregateInputType = {
    id?: true
    variant_id?: true
    customer_id?: true
    rating?: true
    review?: true
    title?: true
    verified_purchase?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Variant_ratingsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which variant_ratings to aggregate.
     */
    where?: variant_ratingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of variant_ratings to fetch.
     */
    orderBy?: variant_ratingsOrderByWithRelationInput | variant_ratingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: variant_ratingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` variant_ratings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` variant_ratings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned variant_ratings
    **/
    _count?: true | Variant_ratingsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Variant_ratingsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Variant_ratingsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Variant_ratingsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Variant_ratingsMaxAggregateInputType
  }

  export type GetVariant_ratingsAggregateType<T extends Variant_ratingsAggregateArgs> = {
        [P in keyof T & keyof AggregateVariant_ratings]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVariant_ratings[P]>
      : GetScalarType<T[P], AggregateVariant_ratings[P]>
  }




  export type variant_ratingsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: variant_ratingsWhereInput
    orderBy?: variant_ratingsOrderByWithAggregationInput | variant_ratingsOrderByWithAggregationInput[]
    by: Variant_ratingsScalarFieldEnum[] | Variant_ratingsScalarFieldEnum
    having?: variant_ratingsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Variant_ratingsCountAggregateInputType | true
    _avg?: Variant_ratingsAvgAggregateInputType
    _sum?: Variant_ratingsSumAggregateInputType
    _min?: Variant_ratingsMinAggregateInputType
    _max?: Variant_ratingsMaxAggregateInputType
  }

  export type Variant_ratingsGroupByOutputType = {
    id: number
    variant_id: number
    customer_id: number
    rating: number
    review: string | null
    title: string | null
    verified_purchase: boolean
    created_at: Date
    updated_at: Date
    _count: Variant_ratingsCountAggregateOutputType | null
    _avg: Variant_ratingsAvgAggregateOutputType | null
    _sum: Variant_ratingsSumAggregateOutputType | null
    _min: Variant_ratingsMinAggregateOutputType | null
    _max: Variant_ratingsMaxAggregateOutputType | null
  }

  type GetVariant_ratingsGroupByPayload<T extends variant_ratingsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Variant_ratingsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Variant_ratingsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Variant_ratingsGroupByOutputType[P]>
            : GetScalarType<T[P], Variant_ratingsGroupByOutputType[P]>
        }
      >
    >


  export type variant_ratingsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    variant_id?: boolean
    customer_id?: boolean
    rating?: boolean
    review?: boolean
    title?: boolean
    verified_purchase?: boolean
    created_at?: boolean
    updated_at?: boolean
    rating_images?: boolean | variant_ratings$rating_imagesArgs<ExtArgs>
    customers?: boolean | customersDefaultArgs<ExtArgs>
    product_variants?: boolean | product_variantsDefaultArgs<ExtArgs>
    _count?: boolean | Variant_ratingsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["variant_ratings"]>



  export type variant_ratingsSelectScalar = {
    id?: boolean
    variant_id?: boolean
    customer_id?: boolean
    rating?: boolean
    review?: boolean
    title?: boolean
    verified_purchase?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type variant_ratingsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "variant_id" | "customer_id" | "rating" | "review" | "title" | "verified_purchase" | "created_at" | "updated_at", ExtArgs["result"]["variant_ratings"]>
  export type variant_ratingsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    rating_images?: boolean | variant_ratings$rating_imagesArgs<ExtArgs>
    customers?: boolean | customersDefaultArgs<ExtArgs>
    product_variants?: boolean | product_variantsDefaultArgs<ExtArgs>
    _count?: boolean | Variant_ratingsCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $variant_ratingsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "variant_ratings"
    objects: {
      rating_images: Prisma.$rating_imagesPayload<ExtArgs>[]
      customers: Prisma.$customersPayload<ExtArgs>
      product_variants: Prisma.$product_variantsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      variant_id: number
      customer_id: number
      rating: number
      review: string | null
      title: string | null
      verified_purchase: boolean
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["variant_ratings"]>
    composites: {}
  }

  type variant_ratingsGetPayload<S extends boolean | null | undefined | variant_ratingsDefaultArgs> = $Result.GetResult<Prisma.$variant_ratingsPayload, S>

  type variant_ratingsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<variant_ratingsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Variant_ratingsCountAggregateInputType | true
    }

  export interface variant_ratingsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['variant_ratings'], meta: { name: 'variant_ratings' } }
    /**
     * Find zero or one Variant_ratings that matches the filter.
     * @param {variant_ratingsFindUniqueArgs} args - Arguments to find a Variant_ratings
     * @example
     * // Get one Variant_ratings
     * const variant_ratings = await prisma.variant_ratings.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends variant_ratingsFindUniqueArgs>(args: SelectSubset<T, variant_ratingsFindUniqueArgs<ExtArgs>>): Prisma__variant_ratingsClient<$Result.GetResult<Prisma.$variant_ratingsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Variant_ratings that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {variant_ratingsFindUniqueOrThrowArgs} args - Arguments to find a Variant_ratings
     * @example
     * // Get one Variant_ratings
     * const variant_ratings = await prisma.variant_ratings.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends variant_ratingsFindUniqueOrThrowArgs>(args: SelectSubset<T, variant_ratingsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__variant_ratingsClient<$Result.GetResult<Prisma.$variant_ratingsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Variant_ratings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {variant_ratingsFindFirstArgs} args - Arguments to find a Variant_ratings
     * @example
     * // Get one Variant_ratings
     * const variant_ratings = await prisma.variant_ratings.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends variant_ratingsFindFirstArgs>(args?: SelectSubset<T, variant_ratingsFindFirstArgs<ExtArgs>>): Prisma__variant_ratingsClient<$Result.GetResult<Prisma.$variant_ratingsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Variant_ratings that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {variant_ratingsFindFirstOrThrowArgs} args - Arguments to find a Variant_ratings
     * @example
     * // Get one Variant_ratings
     * const variant_ratings = await prisma.variant_ratings.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends variant_ratingsFindFirstOrThrowArgs>(args?: SelectSubset<T, variant_ratingsFindFirstOrThrowArgs<ExtArgs>>): Prisma__variant_ratingsClient<$Result.GetResult<Prisma.$variant_ratingsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Variant_ratings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {variant_ratingsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Variant_ratings
     * const variant_ratings = await prisma.variant_ratings.findMany()
     * 
     * // Get first 10 Variant_ratings
     * const variant_ratings = await prisma.variant_ratings.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const variant_ratingsWithIdOnly = await prisma.variant_ratings.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends variant_ratingsFindManyArgs>(args?: SelectSubset<T, variant_ratingsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$variant_ratingsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Variant_ratings.
     * @param {variant_ratingsCreateArgs} args - Arguments to create a Variant_ratings.
     * @example
     * // Create one Variant_ratings
     * const Variant_ratings = await prisma.variant_ratings.create({
     *   data: {
     *     // ... data to create a Variant_ratings
     *   }
     * })
     * 
     */
    create<T extends variant_ratingsCreateArgs>(args: SelectSubset<T, variant_ratingsCreateArgs<ExtArgs>>): Prisma__variant_ratingsClient<$Result.GetResult<Prisma.$variant_ratingsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Variant_ratings.
     * @param {variant_ratingsCreateManyArgs} args - Arguments to create many Variant_ratings.
     * @example
     * // Create many Variant_ratings
     * const variant_ratings = await prisma.variant_ratings.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends variant_ratingsCreateManyArgs>(args?: SelectSubset<T, variant_ratingsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Variant_ratings.
     * @param {variant_ratingsDeleteArgs} args - Arguments to delete one Variant_ratings.
     * @example
     * // Delete one Variant_ratings
     * const Variant_ratings = await prisma.variant_ratings.delete({
     *   where: {
     *     // ... filter to delete one Variant_ratings
     *   }
     * })
     * 
     */
    delete<T extends variant_ratingsDeleteArgs>(args: SelectSubset<T, variant_ratingsDeleteArgs<ExtArgs>>): Prisma__variant_ratingsClient<$Result.GetResult<Prisma.$variant_ratingsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Variant_ratings.
     * @param {variant_ratingsUpdateArgs} args - Arguments to update one Variant_ratings.
     * @example
     * // Update one Variant_ratings
     * const variant_ratings = await prisma.variant_ratings.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends variant_ratingsUpdateArgs>(args: SelectSubset<T, variant_ratingsUpdateArgs<ExtArgs>>): Prisma__variant_ratingsClient<$Result.GetResult<Prisma.$variant_ratingsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Variant_ratings.
     * @param {variant_ratingsDeleteManyArgs} args - Arguments to filter Variant_ratings to delete.
     * @example
     * // Delete a few Variant_ratings
     * const { count } = await prisma.variant_ratings.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends variant_ratingsDeleteManyArgs>(args?: SelectSubset<T, variant_ratingsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Variant_ratings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {variant_ratingsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Variant_ratings
     * const variant_ratings = await prisma.variant_ratings.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends variant_ratingsUpdateManyArgs>(args: SelectSubset<T, variant_ratingsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Variant_ratings.
     * @param {variant_ratingsUpsertArgs} args - Arguments to update or create a Variant_ratings.
     * @example
     * // Update or create a Variant_ratings
     * const variant_ratings = await prisma.variant_ratings.upsert({
     *   create: {
     *     // ... data to create a Variant_ratings
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Variant_ratings we want to update
     *   }
     * })
     */
    upsert<T extends variant_ratingsUpsertArgs>(args: SelectSubset<T, variant_ratingsUpsertArgs<ExtArgs>>): Prisma__variant_ratingsClient<$Result.GetResult<Prisma.$variant_ratingsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Variant_ratings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {variant_ratingsCountArgs} args - Arguments to filter Variant_ratings to count.
     * @example
     * // Count the number of Variant_ratings
     * const count = await prisma.variant_ratings.count({
     *   where: {
     *     // ... the filter for the Variant_ratings we want to count
     *   }
     * })
    **/
    count<T extends variant_ratingsCountArgs>(
      args?: Subset<T, variant_ratingsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Variant_ratingsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Variant_ratings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Variant_ratingsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Variant_ratingsAggregateArgs>(args: Subset<T, Variant_ratingsAggregateArgs>): Prisma.PrismaPromise<GetVariant_ratingsAggregateType<T>>

    /**
     * Group by Variant_ratings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {variant_ratingsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends variant_ratingsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: variant_ratingsGroupByArgs['orderBy'] }
        : { orderBy?: variant_ratingsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, variant_ratingsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVariant_ratingsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the variant_ratings model
   */
  readonly fields: variant_ratingsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for variant_ratings.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__variant_ratingsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    rating_images<T extends variant_ratings$rating_imagesArgs<ExtArgs> = {}>(args?: Subset<T, variant_ratings$rating_imagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$rating_imagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    customers<T extends customersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, customersDefaultArgs<ExtArgs>>): Prisma__customersClient<$Result.GetResult<Prisma.$customersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    product_variants<T extends product_variantsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, product_variantsDefaultArgs<ExtArgs>>): Prisma__product_variantsClient<$Result.GetResult<Prisma.$product_variantsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the variant_ratings model
   */
  interface variant_ratingsFieldRefs {
    readonly id: FieldRef<"variant_ratings", 'Int'>
    readonly variant_id: FieldRef<"variant_ratings", 'Int'>
    readonly customer_id: FieldRef<"variant_ratings", 'Int'>
    readonly rating: FieldRef<"variant_ratings", 'Int'>
    readonly review: FieldRef<"variant_ratings", 'String'>
    readonly title: FieldRef<"variant_ratings", 'String'>
    readonly verified_purchase: FieldRef<"variant_ratings", 'Boolean'>
    readonly created_at: FieldRef<"variant_ratings", 'DateTime'>
    readonly updated_at: FieldRef<"variant_ratings", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * variant_ratings findUnique
   */
  export type variant_ratingsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_ratings
     */
    select?: variant_ratingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_ratings
     */
    omit?: variant_ratingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_ratingsInclude<ExtArgs> | null
    /**
     * Filter, which variant_ratings to fetch.
     */
    where: variant_ratingsWhereUniqueInput
  }

  /**
   * variant_ratings findUniqueOrThrow
   */
  export type variant_ratingsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_ratings
     */
    select?: variant_ratingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_ratings
     */
    omit?: variant_ratingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_ratingsInclude<ExtArgs> | null
    /**
     * Filter, which variant_ratings to fetch.
     */
    where: variant_ratingsWhereUniqueInput
  }

  /**
   * variant_ratings findFirst
   */
  export type variant_ratingsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_ratings
     */
    select?: variant_ratingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_ratings
     */
    omit?: variant_ratingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_ratingsInclude<ExtArgs> | null
    /**
     * Filter, which variant_ratings to fetch.
     */
    where?: variant_ratingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of variant_ratings to fetch.
     */
    orderBy?: variant_ratingsOrderByWithRelationInput | variant_ratingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for variant_ratings.
     */
    cursor?: variant_ratingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` variant_ratings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` variant_ratings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of variant_ratings.
     */
    distinct?: Variant_ratingsScalarFieldEnum | Variant_ratingsScalarFieldEnum[]
  }

  /**
   * variant_ratings findFirstOrThrow
   */
  export type variant_ratingsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_ratings
     */
    select?: variant_ratingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_ratings
     */
    omit?: variant_ratingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_ratingsInclude<ExtArgs> | null
    /**
     * Filter, which variant_ratings to fetch.
     */
    where?: variant_ratingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of variant_ratings to fetch.
     */
    orderBy?: variant_ratingsOrderByWithRelationInput | variant_ratingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for variant_ratings.
     */
    cursor?: variant_ratingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` variant_ratings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` variant_ratings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of variant_ratings.
     */
    distinct?: Variant_ratingsScalarFieldEnum | Variant_ratingsScalarFieldEnum[]
  }

  /**
   * variant_ratings findMany
   */
  export type variant_ratingsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_ratings
     */
    select?: variant_ratingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_ratings
     */
    omit?: variant_ratingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_ratingsInclude<ExtArgs> | null
    /**
     * Filter, which variant_ratings to fetch.
     */
    where?: variant_ratingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of variant_ratings to fetch.
     */
    orderBy?: variant_ratingsOrderByWithRelationInput | variant_ratingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing variant_ratings.
     */
    cursor?: variant_ratingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` variant_ratings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` variant_ratings.
     */
    skip?: number
    distinct?: Variant_ratingsScalarFieldEnum | Variant_ratingsScalarFieldEnum[]
  }

  /**
   * variant_ratings create
   */
  export type variant_ratingsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_ratings
     */
    select?: variant_ratingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_ratings
     */
    omit?: variant_ratingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_ratingsInclude<ExtArgs> | null
    /**
     * The data needed to create a variant_ratings.
     */
    data: XOR<variant_ratingsCreateInput, variant_ratingsUncheckedCreateInput>
  }

  /**
   * variant_ratings createMany
   */
  export type variant_ratingsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many variant_ratings.
     */
    data: variant_ratingsCreateManyInput | variant_ratingsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * variant_ratings update
   */
  export type variant_ratingsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_ratings
     */
    select?: variant_ratingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_ratings
     */
    omit?: variant_ratingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_ratingsInclude<ExtArgs> | null
    /**
     * The data needed to update a variant_ratings.
     */
    data: XOR<variant_ratingsUpdateInput, variant_ratingsUncheckedUpdateInput>
    /**
     * Choose, which variant_ratings to update.
     */
    where: variant_ratingsWhereUniqueInput
  }

  /**
   * variant_ratings updateMany
   */
  export type variant_ratingsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update variant_ratings.
     */
    data: XOR<variant_ratingsUpdateManyMutationInput, variant_ratingsUncheckedUpdateManyInput>
    /**
     * Filter which variant_ratings to update
     */
    where?: variant_ratingsWhereInput
    /**
     * Limit how many variant_ratings to update.
     */
    limit?: number
  }

  /**
   * variant_ratings upsert
   */
  export type variant_ratingsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_ratings
     */
    select?: variant_ratingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_ratings
     */
    omit?: variant_ratingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_ratingsInclude<ExtArgs> | null
    /**
     * The filter to search for the variant_ratings to update in case it exists.
     */
    where: variant_ratingsWhereUniqueInput
    /**
     * In case the variant_ratings found by the `where` argument doesn't exist, create a new variant_ratings with this data.
     */
    create: XOR<variant_ratingsCreateInput, variant_ratingsUncheckedCreateInput>
    /**
     * In case the variant_ratings was found with the provided `where` argument, update it with this data.
     */
    update: XOR<variant_ratingsUpdateInput, variant_ratingsUncheckedUpdateInput>
  }

  /**
   * variant_ratings delete
   */
  export type variant_ratingsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_ratings
     */
    select?: variant_ratingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_ratings
     */
    omit?: variant_ratingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_ratingsInclude<ExtArgs> | null
    /**
     * Filter which variant_ratings to delete.
     */
    where: variant_ratingsWhereUniqueInput
  }

  /**
   * variant_ratings deleteMany
   */
  export type variant_ratingsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which variant_ratings to delete
     */
    where?: variant_ratingsWhereInput
    /**
     * Limit how many variant_ratings to delete.
     */
    limit?: number
  }

  /**
   * variant_ratings.rating_images
   */
  export type variant_ratings$rating_imagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the rating_images
     */
    select?: rating_imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the rating_images
     */
    omit?: rating_imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: rating_imagesInclude<ExtArgs> | null
    where?: rating_imagesWhereInput
    orderBy?: rating_imagesOrderByWithRelationInput | rating_imagesOrderByWithRelationInput[]
    cursor?: rating_imagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Rating_imagesScalarFieldEnum | Rating_imagesScalarFieldEnum[]
  }

  /**
   * variant_ratings without action
   */
  export type variant_ratingsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_ratings
     */
    select?: variant_ratingsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_ratings
     */
    omit?: variant_ratingsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_ratingsInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const Attribute_option_imagesScalarFieldEnum: {
    id: 'id',
    attribute_option_id: 'attribute_option_id',
    image_type: 'image_type',
    display_order: 'display_order',
    image_url_thumb: 'image_url_thumb',
    image_url_normal: 'image_url_normal',
    image_url_zoom: 'image_url_zoom',
    alt_text: 'alt_text',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Attribute_option_imagesScalarFieldEnum = (typeof Attribute_option_imagesScalarFieldEnum)[keyof typeof Attribute_option_imagesScalarFieldEnum]


  export const Attribute_optionsScalarFieldEnum: {
    id: 'id',
    attribute_id: 'attribute_id',
    value: 'value',
    additional_cost: 'additional_cost'
  };

  export type Attribute_optionsScalarFieldEnum = (typeof Attribute_optionsScalarFieldEnum)[keyof typeof Attribute_optionsScalarFieldEnum]


  export const AttributesScalarFieldEnum: {
    id: 'id',
    name: 'name',
    display_type: 'display_type'
  };

  export type AttributesScalarFieldEnum = (typeof AttributesScalarFieldEnum)[keyof typeof AttributesScalarFieldEnum]


  export const BannerScalarFieldEnum: {
    id: 'id',
    title: 'title',
    subtitle: 'subtitle',
    description: 'description',
    created_at: 'created_at',
    updated_at: 'updated_at',
    display_order: 'display_order',
    link: 'link',
    image_url: 'image_url'
  };

  export type BannerScalarFieldEnum = (typeof BannerScalarFieldEnum)[keyof typeof BannerScalarFieldEnum]


  export const BrandsScalarFieldEnum: {
    id: 'id',
    name: 'name'
  };

  export type BrandsScalarFieldEnum = (typeof BrandsScalarFieldEnum)[keyof typeof BrandsScalarFieldEnum]


  export const CategoriesScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    parent_id: 'parent_id',
    image_url: 'image_url'
  };

  export type CategoriesScalarFieldEnum = (typeof CategoriesScalarFieldEnum)[keyof typeof CategoriesScalarFieldEnum]


  export const CustomersScalarFieldEnum: {
    id: 'id',
    username: 'username',
    email: 'email',
    password: 'password',
    address_id: 'address_id',
    is_active: 'is_active',
    created_at: 'created_at',
    updated_at: 'updated_at',
    lastname: 'lastname',
    photo: 'photo',
    name: 'name'
  };

  export type CustomersScalarFieldEnum = (typeof CustomersScalarFieldEnum)[keyof typeof CustomersScalarFieldEnum]


  export const Customers_addressesScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    id_customer: 'id_customer',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Customers_addressesScalarFieldEnum = (typeof Customers_addressesScalarFieldEnum)[keyof typeof Customers_addressesScalarFieldEnum]


  export const PermissionsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type PermissionsScalarFieldEnum = (typeof PermissionsScalarFieldEnum)[keyof typeof PermissionsScalarFieldEnum]


  export const Product_categoriesScalarFieldEnum: {
    product_id: 'product_id',
    category_id: 'category_id'
  };

  export type Product_categoriesScalarFieldEnum = (typeof Product_categoriesScalarFieldEnum)[keyof typeof Product_categoriesScalarFieldEnum]


  export const Product_variantsScalarFieldEnum: {
    id: 'id',
    product_id: 'product_id',
    sku: 'sku',
    price: 'price',
    stock: 'stock',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Product_variantsScalarFieldEnum = (typeof Product_variantsScalarFieldEnum)[keyof typeof Product_variantsScalarFieldEnum]


  export const ProductsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    brand_id: 'brand_id',
    created_at: 'created_at',
    updated_at: 'updated_at',
    base_price: 'base_price'
  };

  export type ProductsScalarFieldEnum = (typeof ProductsScalarFieldEnum)[keyof typeof ProductsScalarFieldEnum]


  export const Promotion_variantsScalarFieldEnum: {
    promotion_id: 'promotion_id',
    variant_id: 'variant_id',
    promotion_price: 'promotion_price',
    stock_limit: 'stock_limit',
    created_at: 'created_at'
  };

  export type Promotion_variantsScalarFieldEnum = (typeof Promotion_variantsScalarFieldEnum)[keyof typeof Promotion_variantsScalarFieldEnum]


  export const PromotionsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    start_date: 'start_date',
    end_date: 'end_date',
    discount_type: 'discount_type',
    discount_value: 'discount_value',
    min_purchase_amount: 'min_purchase_amount',
    is_active: 'is_active',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type PromotionsScalarFieldEnum = (typeof PromotionsScalarFieldEnum)[keyof typeof PromotionsScalarFieldEnum]


  export const Rating_imagesScalarFieldEnum: {
    id: 'id',
    rating_id: 'rating_id',
    image_url: 'image_url',
    created_at: 'created_at'
  };

  export type Rating_imagesScalarFieldEnum = (typeof Rating_imagesScalarFieldEnum)[keyof typeof Rating_imagesScalarFieldEnum]


  export const RolesScalarFieldEnum: {
    id: 'id',
    name: 'name',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type RolesScalarFieldEnum = (typeof RolesScalarFieldEnum)[keyof typeof RolesScalarFieldEnum]


  export const Roles_sectionsScalarFieldEnum: {
    id: 'id',
    id_section: 'id_section',
    id_rol: 'id_rol'
  };

  export type Roles_sectionsScalarFieldEnum = (typeof Roles_sectionsScalarFieldEnum)[keyof typeof Roles_sectionsScalarFieldEnum]


  export const SectionsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    url: 'url',
    image: 'image',
    display_order: 'display_order'
  };

  export type SectionsScalarFieldEnum = (typeof SectionsScalarFieldEnum)[keyof typeof SectionsScalarFieldEnum]


  export const ServicesScalarFieldEnum: {
    id: 'id',
    title: 'title',
    subtitle: 'subtitle',
    image_url: 'image_url',
    slug: 'slug',
    description: 'description',
    created_at: 'created_at',
    updated_at: 'updated_at',
    display_order: 'display_order'
  };

  export type ServicesScalarFieldEnum = (typeof ServicesScalarFieldEnum)[keyof typeof ServicesScalarFieldEnum]


  export const Services_imagesScalarFieldEnum: {
    id: 'id',
    title: 'title',
    subtitle: 'subtitle',
    description: 'description',
    created_at: 'created_at',
    updated_at: 'updated_at',
    display_order: 'display_order',
    id_service: 'id_service',
    image_url: 'image_url'
  };

  export type Services_imagesScalarFieldEnum = (typeof Services_imagesScalarFieldEnum)[keyof typeof Services_imagesScalarFieldEnum]


  export const UsersScalarFieldEnum: {
    id: 'id',
    username: 'username',
    email: 'email',
    password: 'password',
    role_id: 'role_id',
    is_active: 'is_active',
    created_at: 'created_at',
    updated_at: 'updated_at',
    lastname: 'lastname',
    photo: 'photo'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const Variant_attribute_optionsScalarFieldEnum: {
    variant_id: 'variant_id',
    attribute_option_id: 'attribute_option_id'
  };

  export type Variant_attribute_optionsScalarFieldEnum = (typeof Variant_attribute_optionsScalarFieldEnum)[keyof typeof Variant_attribute_optionsScalarFieldEnum]


  export const Variant_imagesScalarFieldEnum: {
    id: 'id',
    variant_id: 'variant_id',
    image_type: 'image_type',
    image_url_thumb: 'image_url_thumb',
    image_url_normal: 'image_url_normal',
    image_url_zoom: 'image_url_zoom',
    is_primary: 'is_primary',
    display_order: 'display_order',
    alt_text: 'alt_text',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Variant_imagesScalarFieldEnum = (typeof Variant_imagesScalarFieldEnum)[keyof typeof Variant_imagesScalarFieldEnum]


  export const Variant_ratingsScalarFieldEnum: {
    id: 'id',
    variant_id: 'variant_id',
    customer_id: 'customer_id',
    rating: 'rating',
    review: 'review',
    title: 'title',
    verified_purchase: 'verified_purchase',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Variant_ratingsScalarFieldEnum = (typeof Variant_ratingsScalarFieldEnum)[keyof typeof Variant_ratingsScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const attribute_option_imagesOrderByRelevanceFieldEnum: {
    image_url_thumb: 'image_url_thumb',
    image_url_normal: 'image_url_normal',
    image_url_zoom: 'image_url_zoom',
    alt_text: 'alt_text'
  };

  export type attribute_option_imagesOrderByRelevanceFieldEnum = (typeof attribute_option_imagesOrderByRelevanceFieldEnum)[keyof typeof attribute_option_imagesOrderByRelevanceFieldEnum]


  export const attribute_optionsOrderByRelevanceFieldEnum: {
    value: 'value'
  };

  export type attribute_optionsOrderByRelevanceFieldEnum = (typeof attribute_optionsOrderByRelevanceFieldEnum)[keyof typeof attribute_optionsOrderByRelevanceFieldEnum]


  export const attributesOrderByRelevanceFieldEnum: {
    name: 'name'
  };

  export type attributesOrderByRelevanceFieldEnum = (typeof attributesOrderByRelevanceFieldEnum)[keyof typeof attributesOrderByRelevanceFieldEnum]


  export const bannerOrderByRelevanceFieldEnum: {
    title: 'title',
    subtitle: 'subtitle',
    description: 'description',
    link: 'link',
    image_url: 'image_url'
  };

  export type bannerOrderByRelevanceFieldEnum = (typeof bannerOrderByRelevanceFieldEnum)[keyof typeof bannerOrderByRelevanceFieldEnum]


  export const brandsOrderByRelevanceFieldEnum: {
    name: 'name'
  };

  export type brandsOrderByRelevanceFieldEnum = (typeof brandsOrderByRelevanceFieldEnum)[keyof typeof brandsOrderByRelevanceFieldEnum]


  export const categoriesOrderByRelevanceFieldEnum: {
    name: 'name',
    description: 'description',
    image_url: 'image_url'
  };

  export type categoriesOrderByRelevanceFieldEnum = (typeof categoriesOrderByRelevanceFieldEnum)[keyof typeof categoriesOrderByRelevanceFieldEnum]


  export const customersOrderByRelevanceFieldEnum: {
    username: 'username',
    email: 'email',
    password: 'password',
    lastname: 'lastname',
    photo: 'photo',
    name: 'name'
  };

  export type customersOrderByRelevanceFieldEnum = (typeof customersOrderByRelevanceFieldEnum)[keyof typeof customersOrderByRelevanceFieldEnum]


  export const customers_addressesOrderByRelevanceFieldEnum: {
    name: 'name',
    description: 'description'
  };

  export type customers_addressesOrderByRelevanceFieldEnum = (typeof customers_addressesOrderByRelevanceFieldEnum)[keyof typeof customers_addressesOrderByRelevanceFieldEnum]


  export const permissionsOrderByRelevanceFieldEnum: {
    name: 'name'
  };

  export type permissionsOrderByRelevanceFieldEnum = (typeof permissionsOrderByRelevanceFieldEnum)[keyof typeof permissionsOrderByRelevanceFieldEnum]


  export const product_variantsOrderByRelevanceFieldEnum: {
    sku: 'sku'
  };

  export type product_variantsOrderByRelevanceFieldEnum = (typeof product_variantsOrderByRelevanceFieldEnum)[keyof typeof product_variantsOrderByRelevanceFieldEnum]


  export const productsOrderByRelevanceFieldEnum: {
    name: 'name',
    description: 'description'
  };

  export type productsOrderByRelevanceFieldEnum = (typeof productsOrderByRelevanceFieldEnum)[keyof typeof productsOrderByRelevanceFieldEnum]


  export const promotionsOrderByRelevanceFieldEnum: {
    name: 'name',
    description: 'description'
  };

  export type promotionsOrderByRelevanceFieldEnum = (typeof promotionsOrderByRelevanceFieldEnum)[keyof typeof promotionsOrderByRelevanceFieldEnum]


  export const rating_imagesOrderByRelevanceFieldEnum: {
    image_url: 'image_url'
  };

  export type rating_imagesOrderByRelevanceFieldEnum = (typeof rating_imagesOrderByRelevanceFieldEnum)[keyof typeof rating_imagesOrderByRelevanceFieldEnum]


  export const rolesOrderByRelevanceFieldEnum: {
    name: 'name'
  };

  export type rolesOrderByRelevanceFieldEnum = (typeof rolesOrderByRelevanceFieldEnum)[keyof typeof rolesOrderByRelevanceFieldEnum]


  export const sectionsOrderByRelevanceFieldEnum: {
    name: 'name',
    url: 'url',
    image: 'image'
  };

  export type sectionsOrderByRelevanceFieldEnum = (typeof sectionsOrderByRelevanceFieldEnum)[keyof typeof sectionsOrderByRelevanceFieldEnum]


  export const servicesOrderByRelevanceFieldEnum: {
    title: 'title',
    subtitle: 'subtitle',
    image_url: 'image_url',
    slug: 'slug',
    description: 'description'
  };

  export type servicesOrderByRelevanceFieldEnum = (typeof servicesOrderByRelevanceFieldEnum)[keyof typeof servicesOrderByRelevanceFieldEnum]


  export const services_imagesOrderByRelevanceFieldEnum: {
    title: 'title',
    subtitle: 'subtitle',
    description: 'description',
    image_url: 'image_url'
  };

  export type services_imagesOrderByRelevanceFieldEnum = (typeof services_imagesOrderByRelevanceFieldEnum)[keyof typeof services_imagesOrderByRelevanceFieldEnum]


  export const usersOrderByRelevanceFieldEnum: {
    username: 'username',
    email: 'email',
    password: 'password',
    lastname: 'lastname',
    photo: 'photo'
  };

  export type usersOrderByRelevanceFieldEnum = (typeof usersOrderByRelevanceFieldEnum)[keyof typeof usersOrderByRelevanceFieldEnum]


  export const variant_imagesOrderByRelevanceFieldEnum: {
    image_url_thumb: 'image_url_thumb',
    image_url_normal: 'image_url_normal',
    image_url_zoom: 'image_url_zoom',
    alt_text: 'alt_text'
  };

  export type variant_imagesOrderByRelevanceFieldEnum = (typeof variant_imagesOrderByRelevanceFieldEnum)[keyof typeof variant_imagesOrderByRelevanceFieldEnum]


  export const variant_ratingsOrderByRelevanceFieldEnum: {
    review: 'review',
    title: 'title'
  };

  export type variant_ratingsOrderByRelevanceFieldEnum = (typeof variant_ratingsOrderByRelevanceFieldEnum)[keyof typeof variant_ratingsOrderByRelevanceFieldEnum]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'attribute_option_images_image_type'
   */
  export type Enumattribute_option_images_image_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'attribute_option_images_image_type'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'attributes_display_type'
   */
  export type Enumattributes_display_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'attributes_display_type'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'promotions_discount_type'
   */
  export type Enumpromotions_discount_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'promotions_discount_type'>
    


  /**
   * Reference to a field of type 'variant_images_image_type'
   */
  export type Enumvariant_images_image_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'variant_images_image_type'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type attribute_option_imagesWhereInput = {
    AND?: attribute_option_imagesWhereInput | attribute_option_imagesWhereInput[]
    OR?: attribute_option_imagesWhereInput[]
    NOT?: attribute_option_imagesWhereInput | attribute_option_imagesWhereInput[]
    id?: IntFilter<"attribute_option_images"> | number
    attribute_option_id?: IntFilter<"attribute_option_images"> | number
    image_type?: Enumattribute_option_images_image_typeFilter<"attribute_option_images"> | $Enums.attribute_option_images_image_type
    display_order?: IntNullableFilter<"attribute_option_images"> | number | null
    image_url_thumb?: StringFilter<"attribute_option_images"> | string
    image_url_normal?: StringNullableFilter<"attribute_option_images"> | string | null
    image_url_zoom?: StringNullableFilter<"attribute_option_images"> | string | null
    alt_text?: StringNullableFilter<"attribute_option_images"> | string | null
    created_at?: DateTimeFilter<"attribute_option_images"> | Date | string
    updated_at?: DateTimeFilter<"attribute_option_images"> | Date | string
    attribute_options?: XOR<Attribute_optionsScalarRelationFilter, attribute_optionsWhereInput>
  }

  export type attribute_option_imagesOrderByWithRelationInput = {
    id?: SortOrder
    attribute_option_id?: SortOrder
    image_type?: SortOrder
    display_order?: SortOrderInput | SortOrder
    image_url_thumb?: SortOrder
    image_url_normal?: SortOrderInput | SortOrder
    image_url_zoom?: SortOrderInput | SortOrder
    alt_text?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    attribute_options?: attribute_optionsOrderByWithRelationInput
    _relevance?: attribute_option_imagesOrderByRelevanceInput
  }

  export type attribute_option_imagesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    attribute_option_id_image_type?: attribute_option_imagesAttribute_option_idImage_typeCompoundUniqueInput
    AND?: attribute_option_imagesWhereInput | attribute_option_imagesWhereInput[]
    OR?: attribute_option_imagesWhereInput[]
    NOT?: attribute_option_imagesWhereInput | attribute_option_imagesWhereInput[]
    attribute_option_id?: IntFilter<"attribute_option_images"> | number
    image_type?: Enumattribute_option_images_image_typeFilter<"attribute_option_images"> | $Enums.attribute_option_images_image_type
    display_order?: IntNullableFilter<"attribute_option_images"> | number | null
    image_url_thumb?: StringFilter<"attribute_option_images"> | string
    image_url_normal?: StringNullableFilter<"attribute_option_images"> | string | null
    image_url_zoom?: StringNullableFilter<"attribute_option_images"> | string | null
    alt_text?: StringNullableFilter<"attribute_option_images"> | string | null
    created_at?: DateTimeFilter<"attribute_option_images"> | Date | string
    updated_at?: DateTimeFilter<"attribute_option_images"> | Date | string
    attribute_options?: XOR<Attribute_optionsScalarRelationFilter, attribute_optionsWhereInput>
  }, "id" | "attribute_option_id_image_type">

  export type attribute_option_imagesOrderByWithAggregationInput = {
    id?: SortOrder
    attribute_option_id?: SortOrder
    image_type?: SortOrder
    display_order?: SortOrderInput | SortOrder
    image_url_thumb?: SortOrder
    image_url_normal?: SortOrderInput | SortOrder
    image_url_zoom?: SortOrderInput | SortOrder
    alt_text?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: attribute_option_imagesCountOrderByAggregateInput
    _avg?: attribute_option_imagesAvgOrderByAggregateInput
    _max?: attribute_option_imagesMaxOrderByAggregateInput
    _min?: attribute_option_imagesMinOrderByAggregateInput
    _sum?: attribute_option_imagesSumOrderByAggregateInput
  }

  export type attribute_option_imagesScalarWhereWithAggregatesInput = {
    AND?: attribute_option_imagesScalarWhereWithAggregatesInput | attribute_option_imagesScalarWhereWithAggregatesInput[]
    OR?: attribute_option_imagesScalarWhereWithAggregatesInput[]
    NOT?: attribute_option_imagesScalarWhereWithAggregatesInput | attribute_option_imagesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"attribute_option_images"> | number
    attribute_option_id?: IntWithAggregatesFilter<"attribute_option_images"> | number
    image_type?: Enumattribute_option_images_image_typeWithAggregatesFilter<"attribute_option_images"> | $Enums.attribute_option_images_image_type
    display_order?: IntNullableWithAggregatesFilter<"attribute_option_images"> | number | null
    image_url_thumb?: StringWithAggregatesFilter<"attribute_option_images"> | string
    image_url_normal?: StringNullableWithAggregatesFilter<"attribute_option_images"> | string | null
    image_url_zoom?: StringNullableWithAggregatesFilter<"attribute_option_images"> | string | null
    alt_text?: StringNullableWithAggregatesFilter<"attribute_option_images"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"attribute_option_images"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"attribute_option_images"> | Date | string
  }

  export type attribute_optionsWhereInput = {
    AND?: attribute_optionsWhereInput | attribute_optionsWhereInput[]
    OR?: attribute_optionsWhereInput[]
    NOT?: attribute_optionsWhereInput | attribute_optionsWhereInput[]
    id?: IntFilter<"attribute_options"> | number
    attribute_id?: IntFilter<"attribute_options"> | number
    value?: StringFilter<"attribute_options"> | string
    additional_cost?: DecimalNullableFilter<"attribute_options"> | Decimal | DecimalJsLike | number | string | null
    attribute_option_images?: Attribute_option_imagesListRelationFilter
    variant_attribute_options?: Variant_attribute_optionsListRelationFilter
  }

  export type attribute_optionsOrderByWithRelationInput = {
    id?: SortOrder
    attribute_id?: SortOrder
    value?: SortOrder
    additional_cost?: SortOrderInput | SortOrder
    attribute_option_images?: attribute_option_imagesOrderByRelationAggregateInput
    variant_attribute_options?: variant_attribute_optionsOrderByRelationAggregateInput
    _relevance?: attribute_optionsOrderByRelevanceInput
  }

  export type attribute_optionsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: attribute_optionsWhereInput | attribute_optionsWhereInput[]
    OR?: attribute_optionsWhereInput[]
    NOT?: attribute_optionsWhereInput | attribute_optionsWhereInput[]
    attribute_id?: IntFilter<"attribute_options"> | number
    value?: StringFilter<"attribute_options"> | string
    additional_cost?: DecimalNullableFilter<"attribute_options"> | Decimal | DecimalJsLike | number | string | null
    attribute_option_images?: Attribute_option_imagesListRelationFilter
    variant_attribute_options?: Variant_attribute_optionsListRelationFilter
  }, "id">

  export type attribute_optionsOrderByWithAggregationInput = {
    id?: SortOrder
    attribute_id?: SortOrder
    value?: SortOrder
    additional_cost?: SortOrderInput | SortOrder
    _count?: attribute_optionsCountOrderByAggregateInput
    _avg?: attribute_optionsAvgOrderByAggregateInput
    _max?: attribute_optionsMaxOrderByAggregateInput
    _min?: attribute_optionsMinOrderByAggregateInput
    _sum?: attribute_optionsSumOrderByAggregateInput
  }

  export type attribute_optionsScalarWhereWithAggregatesInput = {
    AND?: attribute_optionsScalarWhereWithAggregatesInput | attribute_optionsScalarWhereWithAggregatesInput[]
    OR?: attribute_optionsScalarWhereWithAggregatesInput[]
    NOT?: attribute_optionsScalarWhereWithAggregatesInput | attribute_optionsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"attribute_options"> | number
    attribute_id?: IntWithAggregatesFilter<"attribute_options"> | number
    value?: StringWithAggregatesFilter<"attribute_options"> | string
    additional_cost?: DecimalNullableWithAggregatesFilter<"attribute_options"> | Decimal | DecimalJsLike | number | string | null
  }

  export type attributesWhereInput = {
    AND?: attributesWhereInput | attributesWhereInput[]
    OR?: attributesWhereInput[]
    NOT?: attributesWhereInput | attributesWhereInput[]
    id?: IntFilter<"attributes"> | number
    name?: StringFilter<"attributes"> | string
    display_type?: Enumattributes_display_typeFilter<"attributes"> | $Enums.attributes_display_type
  }

  export type attributesOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    display_type?: SortOrder
    _relevance?: attributesOrderByRelevanceInput
  }

  export type attributesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: attributesWhereInput | attributesWhereInput[]
    OR?: attributesWhereInput[]
    NOT?: attributesWhereInput | attributesWhereInput[]
    name?: StringFilter<"attributes"> | string
    display_type?: Enumattributes_display_typeFilter<"attributes"> | $Enums.attributes_display_type
  }, "id">

  export type attributesOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    display_type?: SortOrder
    _count?: attributesCountOrderByAggregateInput
    _avg?: attributesAvgOrderByAggregateInput
    _max?: attributesMaxOrderByAggregateInput
    _min?: attributesMinOrderByAggregateInput
    _sum?: attributesSumOrderByAggregateInput
  }

  export type attributesScalarWhereWithAggregatesInput = {
    AND?: attributesScalarWhereWithAggregatesInput | attributesScalarWhereWithAggregatesInput[]
    OR?: attributesScalarWhereWithAggregatesInput[]
    NOT?: attributesScalarWhereWithAggregatesInput | attributesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"attributes"> | number
    name?: StringWithAggregatesFilter<"attributes"> | string
    display_type?: Enumattributes_display_typeWithAggregatesFilter<"attributes"> | $Enums.attributes_display_type
  }

  export type bannerWhereInput = {
    AND?: bannerWhereInput | bannerWhereInput[]
    OR?: bannerWhereInput[]
    NOT?: bannerWhereInput | bannerWhereInput[]
    id?: IntFilter<"banner"> | number
    title?: StringFilter<"banner"> | string
    subtitle?: StringNullableFilter<"banner"> | string | null
    description?: StringNullableFilter<"banner"> | string | null
    created_at?: DateTimeFilter<"banner"> | Date | string
    updated_at?: DateTimeFilter<"banner"> | Date | string
    display_order?: IntNullableFilter<"banner"> | number | null
    link?: StringNullableFilter<"banner"> | string | null
    image_url?: StringNullableFilter<"banner"> | string | null
  }

  export type bannerOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    subtitle?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    display_order?: SortOrderInput | SortOrder
    link?: SortOrderInput | SortOrder
    image_url?: SortOrderInput | SortOrder
    _relevance?: bannerOrderByRelevanceInput
  }

  export type bannerWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: bannerWhereInput | bannerWhereInput[]
    OR?: bannerWhereInput[]
    NOT?: bannerWhereInput | bannerWhereInput[]
    title?: StringFilter<"banner"> | string
    subtitle?: StringNullableFilter<"banner"> | string | null
    description?: StringNullableFilter<"banner"> | string | null
    created_at?: DateTimeFilter<"banner"> | Date | string
    updated_at?: DateTimeFilter<"banner"> | Date | string
    display_order?: IntNullableFilter<"banner"> | number | null
    link?: StringNullableFilter<"banner"> | string | null
    image_url?: StringNullableFilter<"banner"> | string | null
  }, "id">

  export type bannerOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    subtitle?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    display_order?: SortOrderInput | SortOrder
    link?: SortOrderInput | SortOrder
    image_url?: SortOrderInput | SortOrder
    _count?: bannerCountOrderByAggregateInput
    _avg?: bannerAvgOrderByAggregateInput
    _max?: bannerMaxOrderByAggregateInput
    _min?: bannerMinOrderByAggregateInput
    _sum?: bannerSumOrderByAggregateInput
  }

  export type bannerScalarWhereWithAggregatesInput = {
    AND?: bannerScalarWhereWithAggregatesInput | bannerScalarWhereWithAggregatesInput[]
    OR?: bannerScalarWhereWithAggregatesInput[]
    NOT?: bannerScalarWhereWithAggregatesInput | bannerScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"banner"> | number
    title?: StringWithAggregatesFilter<"banner"> | string
    subtitle?: StringNullableWithAggregatesFilter<"banner"> | string | null
    description?: StringNullableWithAggregatesFilter<"banner"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"banner"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"banner"> | Date | string
    display_order?: IntNullableWithAggregatesFilter<"banner"> | number | null
    link?: StringNullableWithAggregatesFilter<"banner"> | string | null
    image_url?: StringNullableWithAggregatesFilter<"banner"> | string | null
  }

  export type brandsWhereInput = {
    AND?: brandsWhereInput | brandsWhereInput[]
    OR?: brandsWhereInput[]
    NOT?: brandsWhereInput | brandsWhereInput[]
    id?: IntFilter<"brands"> | number
    name?: StringFilter<"brands"> | string
    products?: ProductsListRelationFilter
  }

  export type brandsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    products?: productsOrderByRelationAggregateInput
    _relevance?: brandsOrderByRelevanceInput
  }

  export type brandsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: brandsWhereInput | brandsWhereInput[]
    OR?: brandsWhereInput[]
    NOT?: brandsWhereInput | brandsWhereInput[]
    name?: StringFilter<"brands"> | string
    products?: ProductsListRelationFilter
  }, "id">

  export type brandsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    _count?: brandsCountOrderByAggregateInput
    _avg?: brandsAvgOrderByAggregateInput
    _max?: brandsMaxOrderByAggregateInput
    _min?: brandsMinOrderByAggregateInput
    _sum?: brandsSumOrderByAggregateInput
  }

  export type brandsScalarWhereWithAggregatesInput = {
    AND?: brandsScalarWhereWithAggregatesInput | brandsScalarWhereWithAggregatesInput[]
    OR?: brandsScalarWhereWithAggregatesInput[]
    NOT?: brandsScalarWhereWithAggregatesInput | brandsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"brands"> | number
    name?: StringWithAggregatesFilter<"brands"> | string
  }

  export type categoriesWhereInput = {
    AND?: categoriesWhereInput | categoriesWhereInput[]
    OR?: categoriesWhereInput[]
    NOT?: categoriesWhereInput | categoriesWhereInput[]
    id?: IntFilter<"categories"> | number
    name?: StringFilter<"categories"> | string
    description?: StringNullableFilter<"categories"> | string | null
    parent_id?: IntNullableFilter<"categories"> | number | null
    image_url?: StringNullableFilter<"categories"> | string | null
  }

  export type categoriesOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    parent_id?: SortOrderInput | SortOrder
    image_url?: SortOrderInput | SortOrder
    _relevance?: categoriesOrderByRelevanceInput
  }

  export type categoriesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: categoriesWhereInput | categoriesWhereInput[]
    OR?: categoriesWhereInput[]
    NOT?: categoriesWhereInput | categoriesWhereInput[]
    name?: StringFilter<"categories"> | string
    description?: StringNullableFilter<"categories"> | string | null
    parent_id?: IntNullableFilter<"categories"> | number | null
    image_url?: StringNullableFilter<"categories"> | string | null
  }, "id">

  export type categoriesOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    parent_id?: SortOrderInput | SortOrder
    image_url?: SortOrderInput | SortOrder
    _count?: categoriesCountOrderByAggregateInput
    _avg?: categoriesAvgOrderByAggregateInput
    _max?: categoriesMaxOrderByAggregateInput
    _min?: categoriesMinOrderByAggregateInput
    _sum?: categoriesSumOrderByAggregateInput
  }

  export type categoriesScalarWhereWithAggregatesInput = {
    AND?: categoriesScalarWhereWithAggregatesInput | categoriesScalarWhereWithAggregatesInput[]
    OR?: categoriesScalarWhereWithAggregatesInput[]
    NOT?: categoriesScalarWhereWithAggregatesInput | categoriesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"categories"> | number
    name?: StringWithAggregatesFilter<"categories"> | string
    description?: StringNullableWithAggregatesFilter<"categories"> | string | null
    parent_id?: IntNullableWithAggregatesFilter<"categories"> | number | null
    image_url?: StringNullableWithAggregatesFilter<"categories"> | string | null
  }

  export type customersWhereInput = {
    AND?: customersWhereInput | customersWhereInput[]
    OR?: customersWhereInput[]
    NOT?: customersWhereInput | customersWhereInput[]
    id?: IntFilter<"customers"> | number
    username?: StringFilter<"customers"> | string
    email?: StringFilter<"customers"> | string
    password?: StringFilter<"customers"> | string
    address_id?: IntNullableFilter<"customers"> | number | null
    is_active?: BoolNullableFilter<"customers"> | boolean | null
    created_at?: DateTimeFilter<"customers"> | Date | string
    updated_at?: DateTimeFilter<"customers"> | Date | string
    lastname?: StringFilter<"customers"> | string
    photo?: StringNullableFilter<"customers"> | string | null
    name?: StringNullableFilter<"customers"> | string | null
    customers_addresses?: Customers_addressesListRelationFilter
    variant_ratings?: Variant_ratingsListRelationFilter
  }

  export type customersOrderByWithRelationInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    address_id?: SortOrderInput | SortOrder
    is_active?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    lastname?: SortOrder
    photo?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    customers_addresses?: customers_addressesOrderByRelationAggregateInput
    variant_ratings?: variant_ratingsOrderByRelationAggregateInput
    _relevance?: customersOrderByRelevanceInput
  }

  export type customersWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    AND?: customersWhereInput | customersWhereInput[]
    OR?: customersWhereInput[]
    NOT?: customersWhereInput | customersWhereInput[]
    username?: StringFilter<"customers"> | string
    password?: StringFilter<"customers"> | string
    address_id?: IntNullableFilter<"customers"> | number | null
    is_active?: BoolNullableFilter<"customers"> | boolean | null
    created_at?: DateTimeFilter<"customers"> | Date | string
    updated_at?: DateTimeFilter<"customers"> | Date | string
    lastname?: StringFilter<"customers"> | string
    photo?: StringNullableFilter<"customers"> | string | null
    name?: StringNullableFilter<"customers"> | string | null
    customers_addresses?: Customers_addressesListRelationFilter
    variant_ratings?: Variant_ratingsListRelationFilter
  }, "id" | "email">

  export type customersOrderByWithAggregationInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    address_id?: SortOrderInput | SortOrder
    is_active?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    lastname?: SortOrder
    photo?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    _count?: customersCountOrderByAggregateInput
    _avg?: customersAvgOrderByAggregateInput
    _max?: customersMaxOrderByAggregateInput
    _min?: customersMinOrderByAggregateInput
    _sum?: customersSumOrderByAggregateInput
  }

  export type customersScalarWhereWithAggregatesInput = {
    AND?: customersScalarWhereWithAggregatesInput | customersScalarWhereWithAggregatesInput[]
    OR?: customersScalarWhereWithAggregatesInput[]
    NOT?: customersScalarWhereWithAggregatesInput | customersScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"customers"> | number
    username?: StringWithAggregatesFilter<"customers"> | string
    email?: StringWithAggregatesFilter<"customers"> | string
    password?: StringWithAggregatesFilter<"customers"> | string
    address_id?: IntNullableWithAggregatesFilter<"customers"> | number | null
    is_active?: BoolNullableWithAggregatesFilter<"customers"> | boolean | null
    created_at?: DateTimeWithAggregatesFilter<"customers"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"customers"> | Date | string
    lastname?: StringWithAggregatesFilter<"customers"> | string
    photo?: StringNullableWithAggregatesFilter<"customers"> | string | null
    name?: StringNullableWithAggregatesFilter<"customers"> | string | null
  }

  export type customers_addressesWhereInput = {
    AND?: customers_addressesWhereInput | customers_addressesWhereInput[]
    OR?: customers_addressesWhereInput[]
    NOT?: customers_addressesWhereInput | customers_addressesWhereInput[]
    id?: IntFilter<"customers_addresses"> | number
    name?: StringNullableFilter<"customers_addresses"> | string | null
    description?: StringNullableFilter<"customers_addresses"> | string | null
    id_customer?: IntNullableFilter<"customers_addresses"> | number | null
    created_at?: DateTimeFilter<"customers_addresses"> | Date | string
    updated_at?: DateTimeFilter<"customers_addresses"> | Date | string
    customers?: XOR<CustomersNullableScalarRelationFilter, customersWhereInput> | null
  }

  export type customers_addressesOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    id_customer?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    customers?: customersOrderByWithRelationInput
    _relevance?: customers_addressesOrderByRelevanceInput
  }

  export type customers_addressesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: customers_addressesWhereInput | customers_addressesWhereInput[]
    OR?: customers_addressesWhereInput[]
    NOT?: customers_addressesWhereInput | customers_addressesWhereInput[]
    name?: StringNullableFilter<"customers_addresses"> | string | null
    description?: StringNullableFilter<"customers_addresses"> | string | null
    id_customer?: IntNullableFilter<"customers_addresses"> | number | null
    created_at?: DateTimeFilter<"customers_addresses"> | Date | string
    updated_at?: DateTimeFilter<"customers_addresses"> | Date | string
    customers?: XOR<CustomersNullableScalarRelationFilter, customersWhereInput> | null
  }, "id">

  export type customers_addressesOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    id_customer?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: customers_addressesCountOrderByAggregateInput
    _avg?: customers_addressesAvgOrderByAggregateInput
    _max?: customers_addressesMaxOrderByAggregateInput
    _min?: customers_addressesMinOrderByAggregateInput
    _sum?: customers_addressesSumOrderByAggregateInput
  }

  export type customers_addressesScalarWhereWithAggregatesInput = {
    AND?: customers_addressesScalarWhereWithAggregatesInput | customers_addressesScalarWhereWithAggregatesInput[]
    OR?: customers_addressesScalarWhereWithAggregatesInput[]
    NOT?: customers_addressesScalarWhereWithAggregatesInput | customers_addressesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"customers_addresses"> | number
    name?: StringNullableWithAggregatesFilter<"customers_addresses"> | string | null
    description?: StringNullableWithAggregatesFilter<"customers_addresses"> | string | null
    id_customer?: IntNullableWithAggregatesFilter<"customers_addresses"> | number | null
    created_at?: DateTimeWithAggregatesFilter<"customers_addresses"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"customers_addresses"> | Date | string
  }

  export type permissionsWhereInput = {
    AND?: permissionsWhereInput | permissionsWhereInput[]
    OR?: permissionsWhereInput[]
    NOT?: permissionsWhereInput | permissionsWhereInput[]
    id?: IntFilter<"permissions"> | number
    name?: StringFilter<"permissions"> | string
    created_at?: DateTimeFilter<"permissions"> | Date | string
    updated_at?: DateTimeFilter<"permissions"> | Date | string
  }

  export type permissionsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _relevance?: permissionsOrderByRelevanceInput
  }

  export type permissionsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: permissionsWhereInput | permissionsWhereInput[]
    OR?: permissionsWhereInput[]
    NOT?: permissionsWhereInput | permissionsWhereInput[]
    name?: StringFilter<"permissions"> | string
    created_at?: DateTimeFilter<"permissions"> | Date | string
    updated_at?: DateTimeFilter<"permissions"> | Date | string
  }, "id">

  export type permissionsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: permissionsCountOrderByAggregateInput
    _avg?: permissionsAvgOrderByAggregateInput
    _max?: permissionsMaxOrderByAggregateInput
    _min?: permissionsMinOrderByAggregateInput
    _sum?: permissionsSumOrderByAggregateInput
  }

  export type permissionsScalarWhereWithAggregatesInput = {
    AND?: permissionsScalarWhereWithAggregatesInput | permissionsScalarWhereWithAggregatesInput[]
    OR?: permissionsScalarWhereWithAggregatesInput[]
    NOT?: permissionsScalarWhereWithAggregatesInput | permissionsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"permissions"> | number
    name?: StringWithAggregatesFilter<"permissions"> | string
    created_at?: DateTimeWithAggregatesFilter<"permissions"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"permissions"> | Date | string
  }

  export type product_categoriesWhereInput = {
    AND?: product_categoriesWhereInput | product_categoriesWhereInput[]
    OR?: product_categoriesWhereInput[]
    NOT?: product_categoriesWhereInput | product_categoriesWhereInput[]
    product_id?: IntFilter<"product_categories"> | number
    category_id?: IntFilter<"product_categories"> | number
  }

  export type product_categoriesOrderByWithRelationInput = {
    product_id?: SortOrder
    category_id?: SortOrder
  }

  export type product_categoriesWhereUniqueInput = Prisma.AtLeast<{
    product_id_category_id?: product_categoriesProduct_idCategory_idCompoundUniqueInput
    AND?: product_categoriesWhereInput | product_categoriesWhereInput[]
    OR?: product_categoriesWhereInput[]
    NOT?: product_categoriesWhereInput | product_categoriesWhereInput[]
    product_id?: IntFilter<"product_categories"> | number
    category_id?: IntFilter<"product_categories"> | number
  }, "product_id_category_id">

  export type product_categoriesOrderByWithAggregationInput = {
    product_id?: SortOrder
    category_id?: SortOrder
    _count?: product_categoriesCountOrderByAggregateInput
    _avg?: product_categoriesAvgOrderByAggregateInput
    _max?: product_categoriesMaxOrderByAggregateInput
    _min?: product_categoriesMinOrderByAggregateInput
    _sum?: product_categoriesSumOrderByAggregateInput
  }

  export type product_categoriesScalarWhereWithAggregatesInput = {
    AND?: product_categoriesScalarWhereWithAggregatesInput | product_categoriesScalarWhereWithAggregatesInput[]
    OR?: product_categoriesScalarWhereWithAggregatesInput[]
    NOT?: product_categoriesScalarWhereWithAggregatesInput | product_categoriesScalarWhereWithAggregatesInput[]
    product_id?: IntWithAggregatesFilter<"product_categories"> | number
    category_id?: IntWithAggregatesFilter<"product_categories"> | number
  }

  export type product_variantsWhereInput = {
    AND?: product_variantsWhereInput | product_variantsWhereInput[]
    OR?: product_variantsWhereInput[]
    NOT?: product_variantsWhereInput | product_variantsWhereInput[]
    id?: IntFilter<"product_variants"> | number
    product_id?: IntFilter<"product_variants"> | number
    sku?: StringFilter<"product_variants"> | string
    price?: DecimalFilter<"product_variants"> | Decimal | DecimalJsLike | number | string
    stock?: IntFilter<"product_variants"> | number
    created_at?: DateTimeFilter<"product_variants"> | Date | string
    updated_at?: DateTimeFilter<"product_variants"> | Date | string
    products?: XOR<ProductsScalarRelationFilter, productsWhereInput>
    promotion_variants?: Promotion_variantsListRelationFilter
    variant_attribute_options?: Variant_attribute_optionsListRelationFilter
    variant_images?: Variant_imagesListRelationFilter
    variant_ratings?: Variant_ratingsListRelationFilter
  }

  export type product_variantsOrderByWithRelationInput = {
    id?: SortOrder
    product_id?: SortOrder
    sku?: SortOrder
    price?: SortOrder
    stock?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    products?: productsOrderByWithRelationInput
    promotion_variants?: promotion_variantsOrderByRelationAggregateInput
    variant_attribute_options?: variant_attribute_optionsOrderByRelationAggregateInput
    variant_images?: variant_imagesOrderByRelationAggregateInput
    variant_ratings?: variant_ratingsOrderByRelationAggregateInput
    _relevance?: product_variantsOrderByRelevanceInput
  }

  export type product_variantsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    sku?: string
    AND?: product_variantsWhereInput | product_variantsWhereInput[]
    OR?: product_variantsWhereInput[]
    NOT?: product_variantsWhereInput | product_variantsWhereInput[]
    product_id?: IntFilter<"product_variants"> | number
    price?: DecimalFilter<"product_variants"> | Decimal | DecimalJsLike | number | string
    stock?: IntFilter<"product_variants"> | number
    created_at?: DateTimeFilter<"product_variants"> | Date | string
    updated_at?: DateTimeFilter<"product_variants"> | Date | string
    products?: XOR<ProductsScalarRelationFilter, productsWhereInput>
    promotion_variants?: Promotion_variantsListRelationFilter
    variant_attribute_options?: Variant_attribute_optionsListRelationFilter
    variant_images?: Variant_imagesListRelationFilter
    variant_ratings?: Variant_ratingsListRelationFilter
  }, "id" | "sku">

  export type product_variantsOrderByWithAggregationInput = {
    id?: SortOrder
    product_id?: SortOrder
    sku?: SortOrder
    price?: SortOrder
    stock?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: product_variantsCountOrderByAggregateInput
    _avg?: product_variantsAvgOrderByAggregateInput
    _max?: product_variantsMaxOrderByAggregateInput
    _min?: product_variantsMinOrderByAggregateInput
    _sum?: product_variantsSumOrderByAggregateInput
  }

  export type product_variantsScalarWhereWithAggregatesInput = {
    AND?: product_variantsScalarWhereWithAggregatesInput | product_variantsScalarWhereWithAggregatesInput[]
    OR?: product_variantsScalarWhereWithAggregatesInput[]
    NOT?: product_variantsScalarWhereWithAggregatesInput | product_variantsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"product_variants"> | number
    product_id?: IntWithAggregatesFilter<"product_variants"> | number
    sku?: StringWithAggregatesFilter<"product_variants"> | string
    price?: DecimalWithAggregatesFilter<"product_variants"> | Decimal | DecimalJsLike | number | string
    stock?: IntWithAggregatesFilter<"product_variants"> | number
    created_at?: DateTimeWithAggregatesFilter<"product_variants"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"product_variants"> | Date | string
  }

  export type productsWhereInput = {
    AND?: productsWhereInput | productsWhereInput[]
    OR?: productsWhereInput[]
    NOT?: productsWhereInput | productsWhereInput[]
    id?: IntFilter<"products"> | number
    name?: StringFilter<"products"> | string
    description?: StringNullableFilter<"products"> | string | null
    brand_id?: IntNullableFilter<"products"> | number | null
    created_at?: DateTimeFilter<"products"> | Date | string
    updated_at?: DateTimeFilter<"products"> | Date | string
    base_price?: DecimalNullableFilter<"products"> | Decimal | DecimalJsLike | number | string | null
    product_variants?: Product_variantsListRelationFilter
    brands?: XOR<BrandsNullableScalarRelationFilter, brandsWhereInput> | null
  }

  export type productsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    brand_id?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    base_price?: SortOrderInput | SortOrder
    product_variants?: product_variantsOrderByRelationAggregateInput
    brands?: brandsOrderByWithRelationInput
    _relevance?: productsOrderByRelevanceInput
  }

  export type productsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: productsWhereInput | productsWhereInput[]
    OR?: productsWhereInput[]
    NOT?: productsWhereInput | productsWhereInput[]
    name?: StringFilter<"products"> | string
    description?: StringNullableFilter<"products"> | string | null
    brand_id?: IntNullableFilter<"products"> | number | null
    created_at?: DateTimeFilter<"products"> | Date | string
    updated_at?: DateTimeFilter<"products"> | Date | string
    base_price?: DecimalNullableFilter<"products"> | Decimal | DecimalJsLike | number | string | null
    product_variants?: Product_variantsListRelationFilter
    brands?: XOR<BrandsNullableScalarRelationFilter, brandsWhereInput> | null
  }, "id">

  export type productsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    brand_id?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    base_price?: SortOrderInput | SortOrder
    _count?: productsCountOrderByAggregateInput
    _avg?: productsAvgOrderByAggregateInput
    _max?: productsMaxOrderByAggregateInput
    _min?: productsMinOrderByAggregateInput
    _sum?: productsSumOrderByAggregateInput
  }

  export type productsScalarWhereWithAggregatesInput = {
    AND?: productsScalarWhereWithAggregatesInput | productsScalarWhereWithAggregatesInput[]
    OR?: productsScalarWhereWithAggregatesInput[]
    NOT?: productsScalarWhereWithAggregatesInput | productsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"products"> | number
    name?: StringWithAggregatesFilter<"products"> | string
    description?: StringNullableWithAggregatesFilter<"products"> | string | null
    brand_id?: IntNullableWithAggregatesFilter<"products"> | number | null
    created_at?: DateTimeWithAggregatesFilter<"products"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"products"> | Date | string
    base_price?: DecimalNullableWithAggregatesFilter<"products"> | Decimal | DecimalJsLike | number | string | null
  }

  export type promotion_variantsWhereInput = {
    AND?: promotion_variantsWhereInput | promotion_variantsWhereInput[]
    OR?: promotion_variantsWhereInput[]
    NOT?: promotion_variantsWhereInput | promotion_variantsWhereInput[]
    promotion_id?: IntFilter<"promotion_variants"> | number
    variant_id?: IntFilter<"promotion_variants"> | number
    promotion_price?: DecimalNullableFilter<"promotion_variants"> | Decimal | DecimalJsLike | number | string | null
    stock_limit?: IntNullableFilter<"promotion_variants"> | number | null
    created_at?: DateTimeFilter<"promotion_variants"> | Date | string
    promotions?: XOR<PromotionsScalarRelationFilter, promotionsWhereInput>
    product_variants?: XOR<Product_variantsScalarRelationFilter, product_variantsWhereInput>
  }

  export type promotion_variantsOrderByWithRelationInput = {
    promotion_id?: SortOrder
    variant_id?: SortOrder
    promotion_price?: SortOrderInput | SortOrder
    stock_limit?: SortOrderInput | SortOrder
    created_at?: SortOrder
    promotions?: promotionsOrderByWithRelationInput
    product_variants?: product_variantsOrderByWithRelationInput
  }

  export type promotion_variantsWhereUniqueInput = Prisma.AtLeast<{
    promotion_id_variant_id?: promotion_variantsPromotion_idVariant_idCompoundUniqueInput
    AND?: promotion_variantsWhereInput | promotion_variantsWhereInput[]
    OR?: promotion_variantsWhereInput[]
    NOT?: promotion_variantsWhereInput | promotion_variantsWhereInput[]
    promotion_id?: IntFilter<"promotion_variants"> | number
    variant_id?: IntFilter<"promotion_variants"> | number
    promotion_price?: DecimalNullableFilter<"promotion_variants"> | Decimal | DecimalJsLike | number | string | null
    stock_limit?: IntNullableFilter<"promotion_variants"> | number | null
    created_at?: DateTimeFilter<"promotion_variants"> | Date | string
    promotions?: XOR<PromotionsScalarRelationFilter, promotionsWhereInput>
    product_variants?: XOR<Product_variantsScalarRelationFilter, product_variantsWhereInput>
  }, "promotion_id_variant_id">

  export type promotion_variantsOrderByWithAggregationInput = {
    promotion_id?: SortOrder
    variant_id?: SortOrder
    promotion_price?: SortOrderInput | SortOrder
    stock_limit?: SortOrderInput | SortOrder
    created_at?: SortOrder
    _count?: promotion_variantsCountOrderByAggregateInput
    _avg?: promotion_variantsAvgOrderByAggregateInput
    _max?: promotion_variantsMaxOrderByAggregateInput
    _min?: promotion_variantsMinOrderByAggregateInput
    _sum?: promotion_variantsSumOrderByAggregateInput
  }

  export type promotion_variantsScalarWhereWithAggregatesInput = {
    AND?: promotion_variantsScalarWhereWithAggregatesInput | promotion_variantsScalarWhereWithAggregatesInput[]
    OR?: promotion_variantsScalarWhereWithAggregatesInput[]
    NOT?: promotion_variantsScalarWhereWithAggregatesInput | promotion_variantsScalarWhereWithAggregatesInput[]
    promotion_id?: IntWithAggregatesFilter<"promotion_variants"> | number
    variant_id?: IntWithAggregatesFilter<"promotion_variants"> | number
    promotion_price?: DecimalNullableWithAggregatesFilter<"promotion_variants"> | Decimal | DecimalJsLike | number | string | null
    stock_limit?: IntNullableWithAggregatesFilter<"promotion_variants"> | number | null
    created_at?: DateTimeWithAggregatesFilter<"promotion_variants"> | Date | string
  }

  export type promotionsWhereInput = {
    AND?: promotionsWhereInput | promotionsWhereInput[]
    OR?: promotionsWhereInput[]
    NOT?: promotionsWhereInput | promotionsWhereInput[]
    id?: IntFilter<"promotions"> | number
    name?: StringFilter<"promotions"> | string
    description?: StringNullableFilter<"promotions"> | string | null
    start_date?: DateTimeFilter<"promotions"> | Date | string
    end_date?: DateTimeFilter<"promotions"> | Date | string
    discount_type?: Enumpromotions_discount_typeFilter<"promotions"> | $Enums.promotions_discount_type
    discount_value?: DecimalFilter<"promotions"> | Decimal | DecimalJsLike | number | string
    min_purchase_amount?: DecimalNullableFilter<"promotions"> | Decimal | DecimalJsLike | number | string | null
    is_active?: BoolNullableFilter<"promotions"> | boolean | null
    created_at?: DateTimeFilter<"promotions"> | Date | string
    updated_at?: DateTimeFilter<"promotions"> | Date | string
    promotion_variants?: Promotion_variantsListRelationFilter
  }

  export type promotionsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    discount_type?: SortOrder
    discount_value?: SortOrder
    min_purchase_amount?: SortOrderInput | SortOrder
    is_active?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    promotion_variants?: promotion_variantsOrderByRelationAggregateInput
    _relevance?: promotionsOrderByRelevanceInput
  }

  export type promotionsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: promotionsWhereInput | promotionsWhereInput[]
    OR?: promotionsWhereInput[]
    NOT?: promotionsWhereInput | promotionsWhereInput[]
    name?: StringFilter<"promotions"> | string
    description?: StringNullableFilter<"promotions"> | string | null
    start_date?: DateTimeFilter<"promotions"> | Date | string
    end_date?: DateTimeFilter<"promotions"> | Date | string
    discount_type?: Enumpromotions_discount_typeFilter<"promotions"> | $Enums.promotions_discount_type
    discount_value?: DecimalFilter<"promotions"> | Decimal | DecimalJsLike | number | string
    min_purchase_amount?: DecimalNullableFilter<"promotions"> | Decimal | DecimalJsLike | number | string | null
    is_active?: BoolNullableFilter<"promotions"> | boolean | null
    created_at?: DateTimeFilter<"promotions"> | Date | string
    updated_at?: DateTimeFilter<"promotions"> | Date | string
    promotion_variants?: Promotion_variantsListRelationFilter
  }, "id">

  export type promotionsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    discount_type?: SortOrder
    discount_value?: SortOrder
    min_purchase_amount?: SortOrderInput | SortOrder
    is_active?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: promotionsCountOrderByAggregateInput
    _avg?: promotionsAvgOrderByAggregateInput
    _max?: promotionsMaxOrderByAggregateInput
    _min?: promotionsMinOrderByAggregateInput
    _sum?: promotionsSumOrderByAggregateInput
  }

  export type promotionsScalarWhereWithAggregatesInput = {
    AND?: promotionsScalarWhereWithAggregatesInput | promotionsScalarWhereWithAggregatesInput[]
    OR?: promotionsScalarWhereWithAggregatesInput[]
    NOT?: promotionsScalarWhereWithAggregatesInput | promotionsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"promotions"> | number
    name?: StringWithAggregatesFilter<"promotions"> | string
    description?: StringNullableWithAggregatesFilter<"promotions"> | string | null
    start_date?: DateTimeWithAggregatesFilter<"promotions"> | Date | string
    end_date?: DateTimeWithAggregatesFilter<"promotions"> | Date | string
    discount_type?: Enumpromotions_discount_typeWithAggregatesFilter<"promotions"> | $Enums.promotions_discount_type
    discount_value?: DecimalWithAggregatesFilter<"promotions"> | Decimal | DecimalJsLike | number | string
    min_purchase_amount?: DecimalNullableWithAggregatesFilter<"promotions"> | Decimal | DecimalJsLike | number | string | null
    is_active?: BoolNullableWithAggregatesFilter<"promotions"> | boolean | null
    created_at?: DateTimeWithAggregatesFilter<"promotions"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"promotions"> | Date | string
  }

  export type rating_imagesWhereInput = {
    AND?: rating_imagesWhereInput | rating_imagesWhereInput[]
    OR?: rating_imagesWhereInput[]
    NOT?: rating_imagesWhereInput | rating_imagesWhereInput[]
    id?: IntFilter<"rating_images"> | number
    rating_id?: IntFilter<"rating_images"> | number
    image_url?: StringFilter<"rating_images"> | string
    created_at?: DateTimeFilter<"rating_images"> | Date | string
    variant_ratings?: XOR<Variant_ratingsScalarRelationFilter, variant_ratingsWhereInput>
  }

  export type rating_imagesOrderByWithRelationInput = {
    id?: SortOrder
    rating_id?: SortOrder
    image_url?: SortOrder
    created_at?: SortOrder
    variant_ratings?: variant_ratingsOrderByWithRelationInput
    _relevance?: rating_imagesOrderByRelevanceInput
  }

  export type rating_imagesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: rating_imagesWhereInput | rating_imagesWhereInput[]
    OR?: rating_imagesWhereInput[]
    NOT?: rating_imagesWhereInput | rating_imagesWhereInput[]
    rating_id?: IntFilter<"rating_images"> | number
    image_url?: StringFilter<"rating_images"> | string
    created_at?: DateTimeFilter<"rating_images"> | Date | string
    variant_ratings?: XOR<Variant_ratingsScalarRelationFilter, variant_ratingsWhereInput>
  }, "id">

  export type rating_imagesOrderByWithAggregationInput = {
    id?: SortOrder
    rating_id?: SortOrder
    image_url?: SortOrder
    created_at?: SortOrder
    _count?: rating_imagesCountOrderByAggregateInput
    _avg?: rating_imagesAvgOrderByAggregateInput
    _max?: rating_imagesMaxOrderByAggregateInput
    _min?: rating_imagesMinOrderByAggregateInput
    _sum?: rating_imagesSumOrderByAggregateInput
  }

  export type rating_imagesScalarWhereWithAggregatesInput = {
    AND?: rating_imagesScalarWhereWithAggregatesInput | rating_imagesScalarWhereWithAggregatesInput[]
    OR?: rating_imagesScalarWhereWithAggregatesInput[]
    NOT?: rating_imagesScalarWhereWithAggregatesInput | rating_imagesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"rating_images"> | number
    rating_id?: IntWithAggregatesFilter<"rating_images"> | number
    image_url?: StringWithAggregatesFilter<"rating_images"> | string
    created_at?: DateTimeWithAggregatesFilter<"rating_images"> | Date | string
  }

  export type rolesWhereInput = {
    AND?: rolesWhereInput | rolesWhereInput[]
    OR?: rolesWhereInput[]
    NOT?: rolesWhereInput | rolesWhereInput[]
    id?: IntFilter<"roles"> | number
    name?: StringFilter<"roles"> | string
    created_at?: DateTimeFilter<"roles"> | Date | string
    updated_at?: DateTimeFilter<"roles"> | Date | string
    roles_sections?: Roles_sectionsListRelationFilter
    users?: UsersListRelationFilter
  }

  export type rolesOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    roles_sections?: roles_sectionsOrderByRelationAggregateInput
    users?: usersOrderByRelationAggregateInput
    _relevance?: rolesOrderByRelevanceInput
  }

  export type rolesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: rolesWhereInput | rolesWhereInput[]
    OR?: rolesWhereInput[]
    NOT?: rolesWhereInput | rolesWhereInput[]
    name?: StringFilter<"roles"> | string
    created_at?: DateTimeFilter<"roles"> | Date | string
    updated_at?: DateTimeFilter<"roles"> | Date | string
    roles_sections?: Roles_sectionsListRelationFilter
    users?: UsersListRelationFilter
  }, "id">

  export type rolesOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: rolesCountOrderByAggregateInput
    _avg?: rolesAvgOrderByAggregateInput
    _max?: rolesMaxOrderByAggregateInput
    _min?: rolesMinOrderByAggregateInput
    _sum?: rolesSumOrderByAggregateInput
  }

  export type rolesScalarWhereWithAggregatesInput = {
    AND?: rolesScalarWhereWithAggregatesInput | rolesScalarWhereWithAggregatesInput[]
    OR?: rolesScalarWhereWithAggregatesInput[]
    NOT?: rolesScalarWhereWithAggregatesInput | rolesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"roles"> | number
    name?: StringWithAggregatesFilter<"roles"> | string
    created_at?: DateTimeWithAggregatesFilter<"roles"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"roles"> | Date | string
  }

  export type roles_sectionsWhereInput = {
    AND?: roles_sectionsWhereInput | roles_sectionsWhereInput[]
    OR?: roles_sectionsWhereInput[]
    NOT?: roles_sectionsWhereInput | roles_sectionsWhereInput[]
    id?: IntFilter<"roles_sections"> | number
    id_section?: IntNullableFilter<"roles_sections"> | number | null
    id_rol?: IntNullableFilter<"roles_sections"> | number | null
    sections?: XOR<SectionsNullableScalarRelationFilter, sectionsWhereInput> | null
    roles?: XOR<RolesNullableScalarRelationFilter, rolesWhereInput> | null
  }

  export type roles_sectionsOrderByWithRelationInput = {
    id?: SortOrder
    id_section?: SortOrderInput | SortOrder
    id_rol?: SortOrderInput | SortOrder
    sections?: sectionsOrderByWithRelationInput
    roles?: rolesOrderByWithRelationInput
  }

  export type roles_sectionsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: roles_sectionsWhereInput | roles_sectionsWhereInput[]
    OR?: roles_sectionsWhereInput[]
    NOT?: roles_sectionsWhereInput | roles_sectionsWhereInput[]
    id_section?: IntNullableFilter<"roles_sections"> | number | null
    id_rol?: IntNullableFilter<"roles_sections"> | number | null
    sections?: XOR<SectionsNullableScalarRelationFilter, sectionsWhereInput> | null
    roles?: XOR<RolesNullableScalarRelationFilter, rolesWhereInput> | null
  }, "id">

  export type roles_sectionsOrderByWithAggregationInput = {
    id?: SortOrder
    id_section?: SortOrderInput | SortOrder
    id_rol?: SortOrderInput | SortOrder
    _count?: roles_sectionsCountOrderByAggregateInput
    _avg?: roles_sectionsAvgOrderByAggregateInput
    _max?: roles_sectionsMaxOrderByAggregateInput
    _min?: roles_sectionsMinOrderByAggregateInput
    _sum?: roles_sectionsSumOrderByAggregateInput
  }

  export type roles_sectionsScalarWhereWithAggregatesInput = {
    AND?: roles_sectionsScalarWhereWithAggregatesInput | roles_sectionsScalarWhereWithAggregatesInput[]
    OR?: roles_sectionsScalarWhereWithAggregatesInput[]
    NOT?: roles_sectionsScalarWhereWithAggregatesInput | roles_sectionsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"roles_sections"> | number
    id_section?: IntNullableWithAggregatesFilter<"roles_sections"> | number | null
    id_rol?: IntNullableWithAggregatesFilter<"roles_sections"> | number | null
  }

  export type sectionsWhereInput = {
    AND?: sectionsWhereInput | sectionsWhereInput[]
    OR?: sectionsWhereInput[]
    NOT?: sectionsWhereInput | sectionsWhereInput[]
    id?: IntFilter<"sections"> | number
    name?: StringNullableFilter<"sections"> | string | null
    url?: StringNullableFilter<"sections"> | string | null
    image?: StringNullableFilter<"sections"> | string | null
    display_order?: IntNullableFilter<"sections"> | number | null
    roles_sections?: Roles_sectionsListRelationFilter
  }

  export type sectionsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrderInput | SortOrder
    url?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    display_order?: SortOrderInput | SortOrder
    roles_sections?: roles_sectionsOrderByRelationAggregateInput
    _relevance?: sectionsOrderByRelevanceInput
  }

  export type sectionsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: sectionsWhereInput | sectionsWhereInput[]
    OR?: sectionsWhereInput[]
    NOT?: sectionsWhereInput | sectionsWhereInput[]
    name?: StringNullableFilter<"sections"> | string | null
    url?: StringNullableFilter<"sections"> | string | null
    image?: StringNullableFilter<"sections"> | string | null
    display_order?: IntNullableFilter<"sections"> | number | null
    roles_sections?: Roles_sectionsListRelationFilter
  }, "id">

  export type sectionsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrderInput | SortOrder
    url?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    display_order?: SortOrderInput | SortOrder
    _count?: sectionsCountOrderByAggregateInput
    _avg?: sectionsAvgOrderByAggregateInput
    _max?: sectionsMaxOrderByAggregateInput
    _min?: sectionsMinOrderByAggregateInput
    _sum?: sectionsSumOrderByAggregateInput
  }

  export type sectionsScalarWhereWithAggregatesInput = {
    AND?: sectionsScalarWhereWithAggregatesInput | sectionsScalarWhereWithAggregatesInput[]
    OR?: sectionsScalarWhereWithAggregatesInput[]
    NOT?: sectionsScalarWhereWithAggregatesInput | sectionsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"sections"> | number
    name?: StringNullableWithAggregatesFilter<"sections"> | string | null
    url?: StringNullableWithAggregatesFilter<"sections"> | string | null
    image?: StringNullableWithAggregatesFilter<"sections"> | string | null
    display_order?: IntNullableWithAggregatesFilter<"sections"> | number | null
  }

  export type servicesWhereInput = {
    AND?: servicesWhereInput | servicesWhereInput[]
    OR?: servicesWhereInput[]
    NOT?: servicesWhereInput | servicesWhereInput[]
    id?: IntFilter<"services"> | number
    title?: StringFilter<"services"> | string
    subtitle?: StringNullableFilter<"services"> | string | null
    image_url?: StringNullableFilter<"services"> | string | null
    slug?: StringNullableFilter<"services"> | string | null
    description?: StringNullableFilter<"services"> | string | null
    created_at?: DateTimeFilter<"services"> | Date | string
    updated_at?: DateTimeFilter<"services"> | Date | string
    display_order?: IntNullableFilter<"services"> | number | null
    services_images?: Services_imagesListRelationFilter
  }

  export type servicesOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    subtitle?: SortOrderInput | SortOrder
    image_url?: SortOrderInput | SortOrder
    slug?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    display_order?: SortOrderInput | SortOrder
    services_images?: services_imagesOrderByRelationAggregateInput
    _relevance?: servicesOrderByRelevanceInput
  }

  export type servicesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    slug?: string
    AND?: servicesWhereInput | servicesWhereInput[]
    OR?: servicesWhereInput[]
    NOT?: servicesWhereInput | servicesWhereInput[]
    title?: StringFilter<"services"> | string
    subtitle?: StringNullableFilter<"services"> | string | null
    image_url?: StringNullableFilter<"services"> | string | null
    description?: StringNullableFilter<"services"> | string | null
    created_at?: DateTimeFilter<"services"> | Date | string
    updated_at?: DateTimeFilter<"services"> | Date | string
    display_order?: IntNullableFilter<"services"> | number | null
    services_images?: Services_imagesListRelationFilter
  }, "id" | "slug">

  export type servicesOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    subtitle?: SortOrderInput | SortOrder
    image_url?: SortOrderInput | SortOrder
    slug?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    display_order?: SortOrderInput | SortOrder
    _count?: servicesCountOrderByAggregateInput
    _avg?: servicesAvgOrderByAggregateInput
    _max?: servicesMaxOrderByAggregateInput
    _min?: servicesMinOrderByAggregateInput
    _sum?: servicesSumOrderByAggregateInput
  }

  export type servicesScalarWhereWithAggregatesInput = {
    AND?: servicesScalarWhereWithAggregatesInput | servicesScalarWhereWithAggregatesInput[]
    OR?: servicesScalarWhereWithAggregatesInput[]
    NOT?: servicesScalarWhereWithAggregatesInput | servicesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"services"> | number
    title?: StringWithAggregatesFilter<"services"> | string
    subtitle?: StringNullableWithAggregatesFilter<"services"> | string | null
    image_url?: StringNullableWithAggregatesFilter<"services"> | string | null
    slug?: StringNullableWithAggregatesFilter<"services"> | string | null
    description?: StringNullableWithAggregatesFilter<"services"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"services"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"services"> | Date | string
    display_order?: IntNullableWithAggregatesFilter<"services"> | number | null
  }

  export type services_imagesWhereInput = {
    AND?: services_imagesWhereInput | services_imagesWhereInput[]
    OR?: services_imagesWhereInput[]
    NOT?: services_imagesWhereInput | services_imagesWhereInput[]
    id?: IntFilter<"services_images"> | number
    title?: StringNullableFilter<"services_images"> | string | null
    subtitle?: StringNullableFilter<"services_images"> | string | null
    description?: StringNullableFilter<"services_images"> | string | null
    created_at?: DateTimeFilter<"services_images"> | Date | string
    updated_at?: DateTimeFilter<"services_images"> | Date | string
    display_order?: IntNullableFilter<"services_images"> | number | null
    id_service?: IntNullableFilter<"services_images"> | number | null
    image_url?: StringNullableFilter<"services_images"> | string | null
    services?: XOR<ServicesNullableScalarRelationFilter, servicesWhereInput> | null
  }

  export type services_imagesOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrderInput | SortOrder
    subtitle?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    display_order?: SortOrderInput | SortOrder
    id_service?: SortOrderInput | SortOrder
    image_url?: SortOrderInput | SortOrder
    services?: servicesOrderByWithRelationInput
    _relevance?: services_imagesOrderByRelevanceInput
  }

  export type services_imagesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: services_imagesWhereInput | services_imagesWhereInput[]
    OR?: services_imagesWhereInput[]
    NOT?: services_imagesWhereInput | services_imagesWhereInput[]
    title?: StringNullableFilter<"services_images"> | string | null
    subtitle?: StringNullableFilter<"services_images"> | string | null
    description?: StringNullableFilter<"services_images"> | string | null
    created_at?: DateTimeFilter<"services_images"> | Date | string
    updated_at?: DateTimeFilter<"services_images"> | Date | string
    display_order?: IntNullableFilter<"services_images"> | number | null
    id_service?: IntNullableFilter<"services_images"> | number | null
    image_url?: StringNullableFilter<"services_images"> | string | null
    services?: XOR<ServicesNullableScalarRelationFilter, servicesWhereInput> | null
  }, "id">

  export type services_imagesOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrderInput | SortOrder
    subtitle?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    display_order?: SortOrderInput | SortOrder
    id_service?: SortOrderInput | SortOrder
    image_url?: SortOrderInput | SortOrder
    _count?: services_imagesCountOrderByAggregateInput
    _avg?: services_imagesAvgOrderByAggregateInput
    _max?: services_imagesMaxOrderByAggregateInput
    _min?: services_imagesMinOrderByAggregateInput
    _sum?: services_imagesSumOrderByAggregateInput
  }

  export type services_imagesScalarWhereWithAggregatesInput = {
    AND?: services_imagesScalarWhereWithAggregatesInput | services_imagesScalarWhereWithAggregatesInput[]
    OR?: services_imagesScalarWhereWithAggregatesInput[]
    NOT?: services_imagesScalarWhereWithAggregatesInput | services_imagesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"services_images"> | number
    title?: StringNullableWithAggregatesFilter<"services_images"> | string | null
    subtitle?: StringNullableWithAggregatesFilter<"services_images"> | string | null
    description?: StringNullableWithAggregatesFilter<"services_images"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"services_images"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"services_images"> | Date | string
    display_order?: IntNullableWithAggregatesFilter<"services_images"> | number | null
    id_service?: IntNullableWithAggregatesFilter<"services_images"> | number | null
    image_url?: StringNullableWithAggregatesFilter<"services_images"> | string | null
  }

  export type usersWhereInput = {
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    id?: IntFilter<"users"> | number
    username?: StringFilter<"users"> | string
    email?: StringFilter<"users"> | string
    password?: StringFilter<"users"> | string
    role_id?: IntFilter<"users"> | number
    is_active?: BoolNullableFilter<"users"> | boolean | null
    created_at?: DateTimeFilter<"users"> | Date | string
    updated_at?: DateTimeFilter<"users"> | Date | string
    lastname?: StringFilter<"users"> | string
    photo?: StringNullableFilter<"users"> | string | null
    roles?: XOR<RolesScalarRelationFilter, rolesWhereInput>
  }

  export type usersOrderByWithRelationInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role_id?: SortOrder
    is_active?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    lastname?: SortOrder
    photo?: SortOrderInput | SortOrder
    roles?: rolesOrderByWithRelationInput
    _relevance?: usersOrderByRelevanceInput
  }

  export type usersWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    username?: StringFilter<"users"> | string
    password?: StringFilter<"users"> | string
    role_id?: IntFilter<"users"> | number
    is_active?: BoolNullableFilter<"users"> | boolean | null
    created_at?: DateTimeFilter<"users"> | Date | string
    updated_at?: DateTimeFilter<"users"> | Date | string
    lastname?: StringFilter<"users"> | string
    photo?: StringNullableFilter<"users"> | string | null
    roles?: XOR<RolesScalarRelationFilter, rolesWhereInput>
  }, "id" | "email">

  export type usersOrderByWithAggregationInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role_id?: SortOrder
    is_active?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    lastname?: SortOrder
    photo?: SortOrderInput | SortOrder
    _count?: usersCountOrderByAggregateInput
    _avg?: usersAvgOrderByAggregateInput
    _max?: usersMaxOrderByAggregateInput
    _min?: usersMinOrderByAggregateInput
    _sum?: usersSumOrderByAggregateInput
  }

  export type usersScalarWhereWithAggregatesInput = {
    AND?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    OR?: usersScalarWhereWithAggregatesInput[]
    NOT?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"users"> | number
    username?: StringWithAggregatesFilter<"users"> | string
    email?: StringWithAggregatesFilter<"users"> | string
    password?: StringWithAggregatesFilter<"users"> | string
    role_id?: IntWithAggregatesFilter<"users"> | number
    is_active?: BoolNullableWithAggregatesFilter<"users"> | boolean | null
    created_at?: DateTimeWithAggregatesFilter<"users"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"users"> | Date | string
    lastname?: StringWithAggregatesFilter<"users"> | string
    photo?: StringNullableWithAggregatesFilter<"users"> | string | null
  }

  export type variant_attribute_optionsWhereInput = {
    AND?: variant_attribute_optionsWhereInput | variant_attribute_optionsWhereInput[]
    OR?: variant_attribute_optionsWhereInput[]
    NOT?: variant_attribute_optionsWhereInput | variant_attribute_optionsWhereInput[]
    variant_id?: IntFilter<"variant_attribute_options"> | number
    attribute_option_id?: IntFilter<"variant_attribute_options"> | number
    attribute_options?: XOR<Attribute_optionsScalarRelationFilter, attribute_optionsWhereInput>
    product_variants?: XOR<Product_variantsScalarRelationFilter, product_variantsWhereInput>
  }

  export type variant_attribute_optionsOrderByWithRelationInput = {
    variant_id?: SortOrder
    attribute_option_id?: SortOrder
    attribute_options?: attribute_optionsOrderByWithRelationInput
    product_variants?: product_variantsOrderByWithRelationInput
  }

  export type variant_attribute_optionsWhereUniqueInput = Prisma.AtLeast<{
    variant_id_attribute_option_id?: variant_attribute_optionsVariant_idAttribute_option_idCompoundUniqueInput
    AND?: variant_attribute_optionsWhereInput | variant_attribute_optionsWhereInput[]
    OR?: variant_attribute_optionsWhereInput[]
    NOT?: variant_attribute_optionsWhereInput | variant_attribute_optionsWhereInput[]
    variant_id?: IntFilter<"variant_attribute_options"> | number
    attribute_option_id?: IntFilter<"variant_attribute_options"> | number
    attribute_options?: XOR<Attribute_optionsScalarRelationFilter, attribute_optionsWhereInput>
    product_variants?: XOR<Product_variantsScalarRelationFilter, product_variantsWhereInput>
  }, "variant_id_attribute_option_id" | "variant_id_attribute_option_id">

  export type variant_attribute_optionsOrderByWithAggregationInput = {
    variant_id?: SortOrder
    attribute_option_id?: SortOrder
    _count?: variant_attribute_optionsCountOrderByAggregateInput
    _avg?: variant_attribute_optionsAvgOrderByAggregateInput
    _max?: variant_attribute_optionsMaxOrderByAggregateInput
    _min?: variant_attribute_optionsMinOrderByAggregateInput
    _sum?: variant_attribute_optionsSumOrderByAggregateInput
  }

  export type variant_attribute_optionsScalarWhereWithAggregatesInput = {
    AND?: variant_attribute_optionsScalarWhereWithAggregatesInput | variant_attribute_optionsScalarWhereWithAggregatesInput[]
    OR?: variant_attribute_optionsScalarWhereWithAggregatesInput[]
    NOT?: variant_attribute_optionsScalarWhereWithAggregatesInput | variant_attribute_optionsScalarWhereWithAggregatesInput[]
    variant_id?: IntWithAggregatesFilter<"variant_attribute_options"> | number
    attribute_option_id?: IntWithAggregatesFilter<"variant_attribute_options"> | number
  }

  export type variant_imagesWhereInput = {
    AND?: variant_imagesWhereInput | variant_imagesWhereInput[]
    OR?: variant_imagesWhereInput[]
    NOT?: variant_imagesWhereInput | variant_imagesWhereInput[]
    id?: IntFilter<"variant_images"> | number
    variant_id?: IntFilter<"variant_images"> | number
    image_type?: Enumvariant_images_image_typeFilter<"variant_images"> | $Enums.variant_images_image_type
    image_url_thumb?: StringFilter<"variant_images"> | string
    image_url_normal?: StringFilter<"variant_images"> | string
    image_url_zoom?: StringFilter<"variant_images"> | string
    is_primary?: BoolNullableFilter<"variant_images"> | boolean | null
    display_order?: IntNullableFilter<"variant_images"> | number | null
    alt_text?: StringNullableFilter<"variant_images"> | string | null
    created_at?: DateTimeFilter<"variant_images"> | Date | string
    updated_at?: DateTimeFilter<"variant_images"> | Date | string
    product_variants?: XOR<Product_variantsScalarRelationFilter, product_variantsWhereInput>
  }

  export type variant_imagesOrderByWithRelationInput = {
    id?: SortOrder
    variant_id?: SortOrder
    image_type?: SortOrder
    image_url_thumb?: SortOrder
    image_url_normal?: SortOrder
    image_url_zoom?: SortOrder
    is_primary?: SortOrderInput | SortOrder
    display_order?: SortOrderInput | SortOrder
    alt_text?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    product_variants?: product_variantsOrderByWithRelationInput
    _relevance?: variant_imagesOrderByRelevanceInput
  }

  export type variant_imagesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: variant_imagesWhereInput | variant_imagesWhereInput[]
    OR?: variant_imagesWhereInput[]
    NOT?: variant_imagesWhereInput | variant_imagesWhereInput[]
    variant_id?: IntFilter<"variant_images"> | number
    image_type?: Enumvariant_images_image_typeFilter<"variant_images"> | $Enums.variant_images_image_type
    image_url_thumb?: StringFilter<"variant_images"> | string
    image_url_normal?: StringFilter<"variant_images"> | string
    image_url_zoom?: StringFilter<"variant_images"> | string
    is_primary?: BoolNullableFilter<"variant_images"> | boolean | null
    display_order?: IntNullableFilter<"variant_images"> | number | null
    alt_text?: StringNullableFilter<"variant_images"> | string | null
    created_at?: DateTimeFilter<"variant_images"> | Date | string
    updated_at?: DateTimeFilter<"variant_images"> | Date | string
    product_variants?: XOR<Product_variantsScalarRelationFilter, product_variantsWhereInput>
  }, "id">

  export type variant_imagesOrderByWithAggregationInput = {
    id?: SortOrder
    variant_id?: SortOrder
    image_type?: SortOrder
    image_url_thumb?: SortOrder
    image_url_normal?: SortOrder
    image_url_zoom?: SortOrder
    is_primary?: SortOrderInput | SortOrder
    display_order?: SortOrderInput | SortOrder
    alt_text?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: variant_imagesCountOrderByAggregateInput
    _avg?: variant_imagesAvgOrderByAggregateInput
    _max?: variant_imagesMaxOrderByAggregateInput
    _min?: variant_imagesMinOrderByAggregateInput
    _sum?: variant_imagesSumOrderByAggregateInput
  }

  export type variant_imagesScalarWhereWithAggregatesInput = {
    AND?: variant_imagesScalarWhereWithAggregatesInput | variant_imagesScalarWhereWithAggregatesInput[]
    OR?: variant_imagesScalarWhereWithAggregatesInput[]
    NOT?: variant_imagesScalarWhereWithAggregatesInput | variant_imagesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"variant_images"> | number
    variant_id?: IntWithAggregatesFilter<"variant_images"> | number
    image_type?: Enumvariant_images_image_typeWithAggregatesFilter<"variant_images"> | $Enums.variant_images_image_type
    image_url_thumb?: StringWithAggregatesFilter<"variant_images"> | string
    image_url_normal?: StringWithAggregatesFilter<"variant_images"> | string
    image_url_zoom?: StringWithAggregatesFilter<"variant_images"> | string
    is_primary?: BoolNullableWithAggregatesFilter<"variant_images"> | boolean | null
    display_order?: IntNullableWithAggregatesFilter<"variant_images"> | number | null
    alt_text?: StringNullableWithAggregatesFilter<"variant_images"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"variant_images"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"variant_images"> | Date | string
  }

  export type variant_ratingsWhereInput = {
    AND?: variant_ratingsWhereInput | variant_ratingsWhereInput[]
    OR?: variant_ratingsWhereInput[]
    NOT?: variant_ratingsWhereInput | variant_ratingsWhereInput[]
    id?: IntFilter<"variant_ratings"> | number
    variant_id?: IntFilter<"variant_ratings"> | number
    customer_id?: IntFilter<"variant_ratings"> | number
    rating?: IntFilter<"variant_ratings"> | number
    review?: StringNullableFilter<"variant_ratings"> | string | null
    title?: StringNullableFilter<"variant_ratings"> | string | null
    verified_purchase?: BoolFilter<"variant_ratings"> | boolean
    created_at?: DateTimeFilter<"variant_ratings"> | Date | string
    updated_at?: DateTimeFilter<"variant_ratings"> | Date | string
    rating_images?: Rating_imagesListRelationFilter
    customers?: XOR<CustomersScalarRelationFilter, customersWhereInput>
    product_variants?: XOR<Product_variantsScalarRelationFilter, product_variantsWhereInput>
  }

  export type variant_ratingsOrderByWithRelationInput = {
    id?: SortOrder
    variant_id?: SortOrder
    customer_id?: SortOrder
    rating?: SortOrder
    review?: SortOrderInput | SortOrder
    title?: SortOrderInput | SortOrder
    verified_purchase?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    rating_images?: rating_imagesOrderByRelationAggregateInput
    customers?: customersOrderByWithRelationInput
    product_variants?: product_variantsOrderByWithRelationInput
    _relevance?: variant_ratingsOrderByRelevanceInput
  }

  export type variant_ratingsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    customer_id_variant_id?: variant_ratingsCustomer_idVariant_idCompoundUniqueInput
    AND?: variant_ratingsWhereInput | variant_ratingsWhereInput[]
    OR?: variant_ratingsWhereInput[]
    NOT?: variant_ratingsWhereInput | variant_ratingsWhereInput[]
    variant_id?: IntFilter<"variant_ratings"> | number
    customer_id?: IntFilter<"variant_ratings"> | number
    rating?: IntFilter<"variant_ratings"> | number
    review?: StringNullableFilter<"variant_ratings"> | string | null
    title?: StringNullableFilter<"variant_ratings"> | string | null
    verified_purchase?: BoolFilter<"variant_ratings"> | boolean
    created_at?: DateTimeFilter<"variant_ratings"> | Date | string
    updated_at?: DateTimeFilter<"variant_ratings"> | Date | string
    rating_images?: Rating_imagesListRelationFilter
    customers?: XOR<CustomersScalarRelationFilter, customersWhereInput>
    product_variants?: XOR<Product_variantsScalarRelationFilter, product_variantsWhereInput>
  }, "id" | "customer_id_variant_id">

  export type variant_ratingsOrderByWithAggregationInput = {
    id?: SortOrder
    variant_id?: SortOrder
    customer_id?: SortOrder
    rating?: SortOrder
    review?: SortOrderInput | SortOrder
    title?: SortOrderInput | SortOrder
    verified_purchase?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: variant_ratingsCountOrderByAggregateInput
    _avg?: variant_ratingsAvgOrderByAggregateInput
    _max?: variant_ratingsMaxOrderByAggregateInput
    _min?: variant_ratingsMinOrderByAggregateInput
    _sum?: variant_ratingsSumOrderByAggregateInput
  }

  export type variant_ratingsScalarWhereWithAggregatesInput = {
    AND?: variant_ratingsScalarWhereWithAggregatesInput | variant_ratingsScalarWhereWithAggregatesInput[]
    OR?: variant_ratingsScalarWhereWithAggregatesInput[]
    NOT?: variant_ratingsScalarWhereWithAggregatesInput | variant_ratingsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"variant_ratings"> | number
    variant_id?: IntWithAggregatesFilter<"variant_ratings"> | number
    customer_id?: IntWithAggregatesFilter<"variant_ratings"> | number
    rating?: IntWithAggregatesFilter<"variant_ratings"> | number
    review?: StringNullableWithAggregatesFilter<"variant_ratings"> | string | null
    title?: StringNullableWithAggregatesFilter<"variant_ratings"> | string | null
    verified_purchase?: BoolWithAggregatesFilter<"variant_ratings"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"variant_ratings"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"variant_ratings"> | Date | string
  }

  export type attribute_option_imagesCreateInput = {
    image_type?: $Enums.attribute_option_images_image_type
    display_order?: number | null
    image_url_thumb: string
    image_url_normal?: string | null
    image_url_zoom?: string | null
    alt_text?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    attribute_options: attribute_optionsCreateNestedOneWithoutAttribute_option_imagesInput
  }

  export type attribute_option_imagesUncheckedCreateInput = {
    id?: number
    attribute_option_id: number
    image_type?: $Enums.attribute_option_images_image_type
    display_order?: number | null
    image_url_thumb: string
    image_url_normal?: string | null
    image_url_zoom?: string | null
    alt_text?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type attribute_option_imagesUpdateInput = {
    image_type?: Enumattribute_option_images_image_typeFieldUpdateOperationsInput | $Enums.attribute_option_images_image_type
    display_order?: NullableIntFieldUpdateOperationsInput | number | null
    image_url_thumb?: StringFieldUpdateOperationsInput | string
    image_url_normal?: NullableStringFieldUpdateOperationsInput | string | null
    image_url_zoom?: NullableStringFieldUpdateOperationsInput | string | null
    alt_text?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    attribute_options?: attribute_optionsUpdateOneRequiredWithoutAttribute_option_imagesNestedInput
  }

  export type attribute_option_imagesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    attribute_option_id?: IntFieldUpdateOperationsInput | number
    image_type?: Enumattribute_option_images_image_typeFieldUpdateOperationsInput | $Enums.attribute_option_images_image_type
    display_order?: NullableIntFieldUpdateOperationsInput | number | null
    image_url_thumb?: StringFieldUpdateOperationsInput | string
    image_url_normal?: NullableStringFieldUpdateOperationsInput | string | null
    image_url_zoom?: NullableStringFieldUpdateOperationsInput | string | null
    alt_text?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type attribute_option_imagesCreateManyInput = {
    id?: number
    attribute_option_id: number
    image_type?: $Enums.attribute_option_images_image_type
    display_order?: number | null
    image_url_thumb: string
    image_url_normal?: string | null
    image_url_zoom?: string | null
    alt_text?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type attribute_option_imagesUpdateManyMutationInput = {
    image_type?: Enumattribute_option_images_image_typeFieldUpdateOperationsInput | $Enums.attribute_option_images_image_type
    display_order?: NullableIntFieldUpdateOperationsInput | number | null
    image_url_thumb?: StringFieldUpdateOperationsInput | string
    image_url_normal?: NullableStringFieldUpdateOperationsInput | string | null
    image_url_zoom?: NullableStringFieldUpdateOperationsInput | string | null
    alt_text?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type attribute_option_imagesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    attribute_option_id?: IntFieldUpdateOperationsInput | number
    image_type?: Enumattribute_option_images_image_typeFieldUpdateOperationsInput | $Enums.attribute_option_images_image_type
    display_order?: NullableIntFieldUpdateOperationsInput | number | null
    image_url_thumb?: StringFieldUpdateOperationsInput | string
    image_url_normal?: NullableStringFieldUpdateOperationsInput | string | null
    image_url_zoom?: NullableStringFieldUpdateOperationsInput | string | null
    alt_text?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type attribute_optionsCreateInput = {
    attribute_id: number
    value: string
    additional_cost?: Decimal | DecimalJsLike | number | string | null
    attribute_option_images?: attribute_option_imagesCreateNestedManyWithoutAttribute_optionsInput
    variant_attribute_options?: variant_attribute_optionsCreateNestedManyWithoutAttribute_optionsInput
  }

  export type attribute_optionsUncheckedCreateInput = {
    id?: number
    attribute_id: number
    value: string
    additional_cost?: Decimal | DecimalJsLike | number | string | null
    attribute_option_images?: attribute_option_imagesUncheckedCreateNestedManyWithoutAttribute_optionsInput
    variant_attribute_options?: variant_attribute_optionsUncheckedCreateNestedManyWithoutAttribute_optionsInput
  }

  export type attribute_optionsUpdateInput = {
    attribute_id?: IntFieldUpdateOperationsInput | number
    value?: StringFieldUpdateOperationsInput | string
    additional_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    attribute_option_images?: attribute_option_imagesUpdateManyWithoutAttribute_optionsNestedInput
    variant_attribute_options?: variant_attribute_optionsUpdateManyWithoutAttribute_optionsNestedInput
  }

  export type attribute_optionsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    attribute_id?: IntFieldUpdateOperationsInput | number
    value?: StringFieldUpdateOperationsInput | string
    additional_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    attribute_option_images?: attribute_option_imagesUncheckedUpdateManyWithoutAttribute_optionsNestedInput
    variant_attribute_options?: variant_attribute_optionsUncheckedUpdateManyWithoutAttribute_optionsNestedInput
  }

  export type attribute_optionsCreateManyInput = {
    id?: number
    attribute_id: number
    value: string
    additional_cost?: Decimal | DecimalJsLike | number | string | null
  }

  export type attribute_optionsUpdateManyMutationInput = {
    attribute_id?: IntFieldUpdateOperationsInput | number
    value?: StringFieldUpdateOperationsInput | string
    additional_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type attribute_optionsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    attribute_id?: IntFieldUpdateOperationsInput | number
    value?: StringFieldUpdateOperationsInput | string
    additional_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type attributesCreateInput = {
    name: string
    display_type?: $Enums.attributes_display_type
  }

  export type attributesUncheckedCreateInput = {
    id?: number
    name: string
    display_type?: $Enums.attributes_display_type
  }

  export type attributesUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    display_type?: Enumattributes_display_typeFieldUpdateOperationsInput | $Enums.attributes_display_type
  }

  export type attributesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    display_type?: Enumattributes_display_typeFieldUpdateOperationsInput | $Enums.attributes_display_type
  }

  export type attributesCreateManyInput = {
    id?: number
    name: string
    display_type?: $Enums.attributes_display_type
  }

  export type attributesUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    display_type?: Enumattributes_display_typeFieldUpdateOperationsInput | $Enums.attributes_display_type
  }

  export type attributesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    display_type?: Enumattributes_display_typeFieldUpdateOperationsInput | $Enums.attributes_display_type
  }

  export type bannerCreateInput = {
    title: string
    subtitle?: string | null
    description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    display_order?: number | null
    link?: string | null
    image_url?: string | null
  }

  export type bannerUncheckedCreateInput = {
    id?: number
    title: string
    subtitle?: string | null
    description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    display_order?: number | null
    link?: string | null
    image_url?: string | null
  }

  export type bannerUpdateInput = {
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    display_order?: NullableIntFieldUpdateOperationsInput | number | null
    link?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type bannerUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    display_order?: NullableIntFieldUpdateOperationsInput | number | null
    link?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type bannerCreateManyInput = {
    id?: number
    title: string
    subtitle?: string | null
    description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    display_order?: number | null
    link?: string | null
    image_url?: string | null
  }

  export type bannerUpdateManyMutationInput = {
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    display_order?: NullableIntFieldUpdateOperationsInput | number | null
    link?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type bannerUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    display_order?: NullableIntFieldUpdateOperationsInput | number | null
    link?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type brandsCreateInput = {
    name: string
    products?: productsCreateNestedManyWithoutBrandsInput
  }

  export type brandsUncheckedCreateInput = {
    id?: number
    name: string
    products?: productsUncheckedCreateNestedManyWithoutBrandsInput
  }

  export type brandsUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    products?: productsUpdateManyWithoutBrandsNestedInput
  }

  export type brandsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    products?: productsUncheckedUpdateManyWithoutBrandsNestedInput
  }

  export type brandsCreateManyInput = {
    id?: number
    name: string
  }

  export type brandsUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
  }

  export type brandsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type categoriesCreateInput = {
    name: string
    description?: string | null
    parent_id?: number | null
    image_url?: string | null
  }

  export type categoriesUncheckedCreateInput = {
    id?: number
    name: string
    description?: string | null
    parent_id?: number | null
    image_url?: string | null
  }

  export type categoriesUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type categoriesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type categoriesCreateManyInput = {
    id?: number
    name: string
    description?: string | null
    parent_id?: number | null
    image_url?: string | null
  }

  export type categoriesUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type categoriesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type customersCreateInput = {
    username: string
    email: string
    password: string
    address_id?: number | null
    is_active?: boolean | null
    created_at?: Date | string
    updated_at?: Date | string
    lastname: string
    photo?: string | null
    name?: string | null
    customers_addresses?: customers_addressesCreateNestedManyWithoutCustomersInput
    variant_ratings?: variant_ratingsCreateNestedManyWithoutCustomersInput
  }

  export type customersUncheckedCreateInput = {
    id?: number
    username: string
    email: string
    password: string
    address_id?: number | null
    is_active?: boolean | null
    created_at?: Date | string
    updated_at?: Date | string
    lastname: string
    photo?: string | null
    name?: string | null
    customers_addresses?: customers_addressesUncheckedCreateNestedManyWithoutCustomersInput
    variant_ratings?: variant_ratingsUncheckedCreateNestedManyWithoutCustomersInput
  }

  export type customersUpdateInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    lastname?: StringFieldUpdateOperationsInput | string
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    customers_addresses?: customers_addressesUpdateManyWithoutCustomersNestedInput
    variant_ratings?: variant_ratingsUpdateManyWithoutCustomersNestedInput
  }

  export type customersUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    lastname?: StringFieldUpdateOperationsInput | string
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    customers_addresses?: customers_addressesUncheckedUpdateManyWithoutCustomersNestedInput
    variant_ratings?: variant_ratingsUncheckedUpdateManyWithoutCustomersNestedInput
  }

  export type customersCreateManyInput = {
    id?: number
    username: string
    email: string
    password: string
    address_id?: number | null
    is_active?: boolean | null
    created_at?: Date | string
    updated_at?: Date | string
    lastname: string
    photo?: string | null
    name?: string | null
  }

  export type customersUpdateManyMutationInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    lastname?: StringFieldUpdateOperationsInput | string
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type customersUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    lastname?: StringFieldUpdateOperationsInput | string
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type customers_addressesCreateInput = {
    name?: string | null
    description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    customers?: customersCreateNestedOneWithoutCustomers_addressesInput
  }

  export type customers_addressesUncheckedCreateInput = {
    id?: number
    name?: string | null
    description?: string | null
    id_customer?: number | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type customers_addressesUpdateInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    customers?: customersUpdateOneWithoutCustomers_addressesNestedInput
  }

  export type customers_addressesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    id_customer?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type customers_addressesCreateManyInput = {
    id?: number
    name?: string | null
    description?: string | null
    id_customer?: number | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type customers_addressesUpdateManyMutationInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type customers_addressesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    id_customer?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type permissionsCreateInput = {
    name: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type permissionsUncheckedCreateInput = {
    id?: number
    name: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type permissionsUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type permissionsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type permissionsCreateManyInput = {
    id?: number
    name: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type permissionsUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type permissionsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type product_categoriesCreateInput = {
    product_id: number
    category_id: number
  }

  export type product_categoriesUncheckedCreateInput = {
    product_id: number
    category_id: number
  }

  export type product_categoriesUpdateInput = {
    product_id?: IntFieldUpdateOperationsInput | number
    category_id?: IntFieldUpdateOperationsInput | number
  }

  export type product_categoriesUncheckedUpdateInput = {
    product_id?: IntFieldUpdateOperationsInput | number
    category_id?: IntFieldUpdateOperationsInput | number
  }

  export type product_categoriesCreateManyInput = {
    product_id: number
    category_id: number
  }

  export type product_categoriesUpdateManyMutationInput = {
    product_id?: IntFieldUpdateOperationsInput | number
    category_id?: IntFieldUpdateOperationsInput | number
  }

  export type product_categoriesUncheckedUpdateManyInput = {
    product_id?: IntFieldUpdateOperationsInput | number
    category_id?: IntFieldUpdateOperationsInput | number
  }

  export type product_variantsCreateInput = {
    sku: string
    price: Decimal | DecimalJsLike | number | string
    stock?: number
    created_at?: Date | string
    updated_at?: Date | string
    products: productsCreateNestedOneWithoutProduct_variantsInput
    promotion_variants?: promotion_variantsCreateNestedManyWithoutProduct_variantsInput
    variant_attribute_options?: variant_attribute_optionsCreateNestedManyWithoutProduct_variantsInput
    variant_images?: variant_imagesCreateNestedManyWithoutProduct_variantsInput
    variant_ratings?: variant_ratingsCreateNestedManyWithoutProduct_variantsInput
  }

  export type product_variantsUncheckedCreateInput = {
    id?: number
    product_id: number
    sku: string
    price: Decimal | DecimalJsLike | number | string
    stock?: number
    created_at?: Date | string
    updated_at?: Date | string
    promotion_variants?: promotion_variantsUncheckedCreateNestedManyWithoutProduct_variantsInput
    variant_attribute_options?: variant_attribute_optionsUncheckedCreateNestedManyWithoutProduct_variantsInput
    variant_images?: variant_imagesUncheckedCreateNestedManyWithoutProduct_variantsInput
    variant_ratings?: variant_ratingsUncheckedCreateNestedManyWithoutProduct_variantsInput
  }

  export type product_variantsUpdateInput = {
    sku?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: productsUpdateOneRequiredWithoutProduct_variantsNestedInput
    promotion_variants?: promotion_variantsUpdateManyWithoutProduct_variantsNestedInput
    variant_attribute_options?: variant_attribute_optionsUpdateManyWithoutProduct_variantsNestedInput
    variant_images?: variant_imagesUpdateManyWithoutProduct_variantsNestedInput
    variant_ratings?: variant_ratingsUpdateManyWithoutProduct_variantsNestedInput
  }

  export type product_variantsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_id?: IntFieldUpdateOperationsInput | number
    sku?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    promotion_variants?: promotion_variantsUncheckedUpdateManyWithoutProduct_variantsNestedInput
    variant_attribute_options?: variant_attribute_optionsUncheckedUpdateManyWithoutProduct_variantsNestedInput
    variant_images?: variant_imagesUncheckedUpdateManyWithoutProduct_variantsNestedInput
    variant_ratings?: variant_ratingsUncheckedUpdateManyWithoutProduct_variantsNestedInput
  }

  export type product_variantsCreateManyInput = {
    id?: number
    product_id: number
    sku: string
    price: Decimal | DecimalJsLike | number | string
    stock?: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type product_variantsUpdateManyMutationInput = {
    sku?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type product_variantsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_id?: IntFieldUpdateOperationsInput | number
    sku?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type productsCreateInput = {
    name: string
    description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    base_price?: Decimal | DecimalJsLike | number | string | null
    product_variants?: product_variantsCreateNestedManyWithoutProductsInput
    brands?: brandsCreateNestedOneWithoutProductsInput
  }

  export type productsUncheckedCreateInput = {
    id?: number
    name: string
    description?: string | null
    brand_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    base_price?: Decimal | DecimalJsLike | number | string | null
    product_variants?: product_variantsUncheckedCreateNestedManyWithoutProductsInput
  }

  export type productsUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    base_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    product_variants?: product_variantsUpdateManyWithoutProductsNestedInput
    brands?: brandsUpdateOneWithoutProductsNestedInput
  }

  export type productsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    brand_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    base_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    product_variants?: product_variantsUncheckedUpdateManyWithoutProductsNestedInput
  }

  export type productsCreateManyInput = {
    id?: number
    name: string
    description?: string | null
    brand_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    base_price?: Decimal | DecimalJsLike | number | string | null
  }

  export type productsUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    base_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type productsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    brand_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    base_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type promotion_variantsCreateInput = {
    promotion_price?: Decimal | DecimalJsLike | number | string | null
    stock_limit?: number | null
    created_at?: Date | string
    promotions: promotionsCreateNestedOneWithoutPromotion_variantsInput
    product_variants: product_variantsCreateNestedOneWithoutPromotion_variantsInput
  }

  export type promotion_variantsUncheckedCreateInput = {
    promotion_id: number
    variant_id: number
    promotion_price?: Decimal | DecimalJsLike | number | string | null
    stock_limit?: number | null
    created_at?: Date | string
  }

  export type promotion_variantsUpdateInput = {
    promotion_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    stock_limit?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    promotions?: promotionsUpdateOneRequiredWithoutPromotion_variantsNestedInput
    product_variants?: product_variantsUpdateOneRequiredWithoutPromotion_variantsNestedInput
  }

  export type promotion_variantsUncheckedUpdateInput = {
    promotion_id?: IntFieldUpdateOperationsInput | number
    variant_id?: IntFieldUpdateOperationsInput | number
    promotion_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    stock_limit?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type promotion_variantsCreateManyInput = {
    promotion_id: number
    variant_id: number
    promotion_price?: Decimal | DecimalJsLike | number | string | null
    stock_limit?: number | null
    created_at?: Date | string
  }

  export type promotion_variantsUpdateManyMutationInput = {
    promotion_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    stock_limit?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type promotion_variantsUncheckedUpdateManyInput = {
    promotion_id?: IntFieldUpdateOperationsInput | number
    variant_id?: IntFieldUpdateOperationsInput | number
    promotion_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    stock_limit?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type promotionsCreateInput = {
    name: string
    description?: string | null
    start_date: Date | string
    end_date: Date | string
    discount_type?: $Enums.promotions_discount_type
    discount_value: Decimal | DecimalJsLike | number | string
    min_purchase_amount?: Decimal | DecimalJsLike | number | string | null
    is_active?: boolean | null
    created_at?: Date | string
    updated_at?: Date | string
    promotion_variants?: promotion_variantsCreateNestedManyWithoutPromotionsInput
  }

  export type promotionsUncheckedCreateInput = {
    id?: number
    name: string
    description?: string | null
    start_date: Date | string
    end_date: Date | string
    discount_type?: $Enums.promotions_discount_type
    discount_value: Decimal | DecimalJsLike | number | string
    min_purchase_amount?: Decimal | DecimalJsLike | number | string | null
    is_active?: boolean | null
    created_at?: Date | string
    updated_at?: Date | string
    promotion_variants?: promotion_variantsUncheckedCreateNestedManyWithoutPromotionsInput
  }

  export type promotionsUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    discount_type?: Enumpromotions_discount_typeFieldUpdateOperationsInput | $Enums.promotions_discount_type
    discount_value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    min_purchase_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    promotion_variants?: promotion_variantsUpdateManyWithoutPromotionsNestedInput
  }

  export type promotionsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    discount_type?: Enumpromotions_discount_typeFieldUpdateOperationsInput | $Enums.promotions_discount_type
    discount_value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    min_purchase_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    promotion_variants?: promotion_variantsUncheckedUpdateManyWithoutPromotionsNestedInput
  }

  export type promotionsCreateManyInput = {
    id?: number
    name: string
    description?: string | null
    start_date: Date | string
    end_date: Date | string
    discount_type?: $Enums.promotions_discount_type
    discount_value: Decimal | DecimalJsLike | number | string
    min_purchase_amount?: Decimal | DecimalJsLike | number | string | null
    is_active?: boolean | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type promotionsUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    discount_type?: Enumpromotions_discount_typeFieldUpdateOperationsInput | $Enums.promotions_discount_type
    discount_value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    min_purchase_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type promotionsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    discount_type?: Enumpromotions_discount_typeFieldUpdateOperationsInput | $Enums.promotions_discount_type
    discount_value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    min_purchase_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type rating_imagesCreateInput = {
    image_url: string
    created_at?: Date | string
    variant_ratings: variant_ratingsCreateNestedOneWithoutRating_imagesInput
  }

  export type rating_imagesUncheckedCreateInput = {
    id?: number
    rating_id: number
    image_url: string
    created_at?: Date | string
  }

  export type rating_imagesUpdateInput = {
    image_url?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    variant_ratings?: variant_ratingsUpdateOneRequiredWithoutRating_imagesNestedInput
  }

  export type rating_imagesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    rating_id?: IntFieldUpdateOperationsInput | number
    image_url?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type rating_imagesCreateManyInput = {
    id?: number
    rating_id: number
    image_url: string
    created_at?: Date | string
  }

  export type rating_imagesUpdateManyMutationInput = {
    image_url?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type rating_imagesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    rating_id?: IntFieldUpdateOperationsInput | number
    image_url?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type rolesCreateInput = {
    name: string
    created_at?: Date | string
    updated_at?: Date | string
    roles_sections?: roles_sectionsCreateNestedManyWithoutRolesInput
    users?: usersCreateNestedManyWithoutRolesInput
  }

  export type rolesUncheckedCreateInput = {
    id?: number
    name: string
    created_at?: Date | string
    updated_at?: Date | string
    roles_sections?: roles_sectionsUncheckedCreateNestedManyWithoutRolesInput
    users?: usersUncheckedCreateNestedManyWithoutRolesInput
  }

  export type rolesUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    roles_sections?: roles_sectionsUpdateManyWithoutRolesNestedInput
    users?: usersUpdateManyWithoutRolesNestedInput
  }

  export type rolesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    roles_sections?: roles_sectionsUncheckedUpdateManyWithoutRolesNestedInput
    users?: usersUncheckedUpdateManyWithoutRolesNestedInput
  }

  export type rolesCreateManyInput = {
    id?: number
    name: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type rolesUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type rolesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type roles_sectionsCreateInput = {
    sections?: sectionsCreateNestedOneWithoutRoles_sectionsInput
    roles?: rolesCreateNestedOneWithoutRoles_sectionsInput
  }

  export type roles_sectionsUncheckedCreateInput = {
    id?: number
    id_section?: number | null
    id_rol?: number | null
  }

  export type roles_sectionsUpdateInput = {
    sections?: sectionsUpdateOneWithoutRoles_sectionsNestedInput
    roles?: rolesUpdateOneWithoutRoles_sectionsNestedInput
  }

  export type roles_sectionsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_section?: NullableIntFieldUpdateOperationsInput | number | null
    id_rol?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type roles_sectionsCreateManyInput = {
    id?: number
    id_section?: number | null
    id_rol?: number | null
  }

  export type roles_sectionsUpdateManyMutationInput = {

  }

  export type roles_sectionsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_section?: NullableIntFieldUpdateOperationsInput | number | null
    id_rol?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type sectionsCreateInput = {
    name?: string | null
    url?: string | null
    image?: string | null
    display_order?: number | null
    roles_sections?: roles_sectionsCreateNestedManyWithoutSectionsInput
  }

  export type sectionsUncheckedCreateInput = {
    id?: number
    name?: string | null
    url?: string | null
    image?: string | null
    display_order?: number | null
    roles_sections?: roles_sectionsUncheckedCreateNestedManyWithoutSectionsInput
  }

  export type sectionsUpdateInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    display_order?: NullableIntFieldUpdateOperationsInput | number | null
    roles_sections?: roles_sectionsUpdateManyWithoutSectionsNestedInput
  }

  export type sectionsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    display_order?: NullableIntFieldUpdateOperationsInput | number | null
    roles_sections?: roles_sectionsUncheckedUpdateManyWithoutSectionsNestedInput
  }

  export type sectionsCreateManyInput = {
    id?: number
    name?: string | null
    url?: string | null
    image?: string | null
    display_order?: number | null
  }

  export type sectionsUpdateManyMutationInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    display_order?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type sectionsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    display_order?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type servicesCreateInput = {
    title: string
    subtitle?: string | null
    image_url?: string | null
    slug?: string | null
    description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    display_order?: number | null
    services_images?: services_imagesCreateNestedManyWithoutServicesInput
  }

  export type servicesUncheckedCreateInput = {
    id?: number
    title: string
    subtitle?: string | null
    image_url?: string | null
    slug?: string | null
    description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    display_order?: number | null
    services_images?: services_imagesUncheckedCreateNestedManyWithoutServicesInput
  }

  export type servicesUpdateInput = {
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    display_order?: NullableIntFieldUpdateOperationsInput | number | null
    services_images?: services_imagesUpdateManyWithoutServicesNestedInput
  }

  export type servicesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    display_order?: NullableIntFieldUpdateOperationsInput | number | null
    services_images?: services_imagesUncheckedUpdateManyWithoutServicesNestedInput
  }

  export type servicesCreateManyInput = {
    id?: number
    title: string
    subtitle?: string | null
    image_url?: string | null
    slug?: string | null
    description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    display_order?: number | null
  }

  export type servicesUpdateManyMutationInput = {
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    display_order?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type servicesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    display_order?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type services_imagesCreateInput = {
    title?: string | null
    subtitle?: string | null
    description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    display_order?: number | null
    image_url?: string | null
    services?: servicesCreateNestedOneWithoutServices_imagesInput
  }

  export type services_imagesUncheckedCreateInput = {
    id?: number
    title?: string | null
    subtitle?: string | null
    description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    display_order?: number | null
    id_service?: number | null
    image_url?: string | null
  }

  export type services_imagesUpdateInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    display_order?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    services?: servicesUpdateOneWithoutServices_imagesNestedInput
  }

  export type services_imagesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    display_order?: NullableIntFieldUpdateOperationsInput | number | null
    id_service?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type services_imagesCreateManyInput = {
    id?: number
    title?: string | null
    subtitle?: string | null
    description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    display_order?: number | null
    id_service?: number | null
    image_url?: string | null
  }

  export type services_imagesUpdateManyMutationInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    display_order?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type services_imagesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    display_order?: NullableIntFieldUpdateOperationsInput | number | null
    id_service?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type usersCreateInput = {
    username: string
    email: string
    password: string
    is_active?: boolean | null
    created_at?: Date | string
    updated_at?: Date | string
    lastname: string
    photo?: string | null
    roles: rolesCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateInput = {
    id?: number
    username: string
    email: string
    password: string
    role_id: number
    is_active?: boolean | null
    created_at?: Date | string
    updated_at?: Date | string
    lastname: string
    photo?: string | null
  }

  export type usersUpdateInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    lastname?: StringFieldUpdateOperationsInput | string
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    roles?: rolesUpdateOneRequiredWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role_id?: IntFieldUpdateOperationsInput | number
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    lastname?: StringFieldUpdateOperationsInput | string
    photo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type usersCreateManyInput = {
    id?: number
    username: string
    email: string
    password: string
    role_id: number
    is_active?: boolean | null
    created_at?: Date | string
    updated_at?: Date | string
    lastname: string
    photo?: string | null
  }

  export type usersUpdateManyMutationInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    lastname?: StringFieldUpdateOperationsInput | string
    photo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type usersUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role_id?: IntFieldUpdateOperationsInput | number
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    lastname?: StringFieldUpdateOperationsInput | string
    photo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type variant_attribute_optionsCreateInput = {
    attribute_options: attribute_optionsCreateNestedOneWithoutVariant_attribute_optionsInput
    product_variants: product_variantsCreateNestedOneWithoutVariant_attribute_optionsInput
  }

  export type variant_attribute_optionsUncheckedCreateInput = {
    variant_id: number
    attribute_option_id: number
  }

  export type variant_attribute_optionsUpdateInput = {
    attribute_options?: attribute_optionsUpdateOneRequiredWithoutVariant_attribute_optionsNestedInput
    product_variants?: product_variantsUpdateOneRequiredWithoutVariant_attribute_optionsNestedInput
  }

  export type variant_attribute_optionsUncheckedUpdateInput = {
    variant_id?: IntFieldUpdateOperationsInput | number
    attribute_option_id?: IntFieldUpdateOperationsInput | number
  }

  export type variant_attribute_optionsCreateManyInput = {
    variant_id: number
    attribute_option_id: number
  }

  export type variant_attribute_optionsUpdateManyMutationInput = {

  }

  export type variant_attribute_optionsUncheckedUpdateManyInput = {
    variant_id?: IntFieldUpdateOperationsInput | number
    attribute_option_id?: IntFieldUpdateOperationsInput | number
  }

  export type variant_imagesCreateInput = {
    image_type?: $Enums.variant_images_image_type
    image_url_thumb: string
    image_url_normal: string
    image_url_zoom: string
    is_primary?: boolean | null
    display_order?: number | null
    alt_text?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    product_variants: product_variantsCreateNestedOneWithoutVariant_imagesInput
  }

  export type variant_imagesUncheckedCreateInput = {
    id?: number
    variant_id: number
    image_type?: $Enums.variant_images_image_type
    image_url_thumb: string
    image_url_normal: string
    image_url_zoom: string
    is_primary?: boolean | null
    display_order?: number | null
    alt_text?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type variant_imagesUpdateInput = {
    image_type?: Enumvariant_images_image_typeFieldUpdateOperationsInput | $Enums.variant_images_image_type
    image_url_thumb?: StringFieldUpdateOperationsInput | string
    image_url_normal?: StringFieldUpdateOperationsInput | string
    image_url_zoom?: StringFieldUpdateOperationsInput | string
    is_primary?: NullableBoolFieldUpdateOperationsInput | boolean | null
    display_order?: NullableIntFieldUpdateOperationsInput | number | null
    alt_text?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product_variants?: product_variantsUpdateOneRequiredWithoutVariant_imagesNestedInput
  }

  export type variant_imagesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    variant_id?: IntFieldUpdateOperationsInput | number
    image_type?: Enumvariant_images_image_typeFieldUpdateOperationsInput | $Enums.variant_images_image_type
    image_url_thumb?: StringFieldUpdateOperationsInput | string
    image_url_normal?: StringFieldUpdateOperationsInput | string
    image_url_zoom?: StringFieldUpdateOperationsInput | string
    is_primary?: NullableBoolFieldUpdateOperationsInput | boolean | null
    display_order?: NullableIntFieldUpdateOperationsInput | number | null
    alt_text?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type variant_imagesCreateManyInput = {
    id?: number
    variant_id: number
    image_type?: $Enums.variant_images_image_type
    image_url_thumb: string
    image_url_normal: string
    image_url_zoom: string
    is_primary?: boolean | null
    display_order?: number | null
    alt_text?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type variant_imagesUpdateManyMutationInput = {
    image_type?: Enumvariant_images_image_typeFieldUpdateOperationsInput | $Enums.variant_images_image_type
    image_url_thumb?: StringFieldUpdateOperationsInput | string
    image_url_normal?: StringFieldUpdateOperationsInput | string
    image_url_zoom?: StringFieldUpdateOperationsInput | string
    is_primary?: NullableBoolFieldUpdateOperationsInput | boolean | null
    display_order?: NullableIntFieldUpdateOperationsInput | number | null
    alt_text?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type variant_imagesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    variant_id?: IntFieldUpdateOperationsInput | number
    image_type?: Enumvariant_images_image_typeFieldUpdateOperationsInput | $Enums.variant_images_image_type
    image_url_thumb?: StringFieldUpdateOperationsInput | string
    image_url_normal?: StringFieldUpdateOperationsInput | string
    image_url_zoom?: StringFieldUpdateOperationsInput | string
    is_primary?: NullableBoolFieldUpdateOperationsInput | boolean | null
    display_order?: NullableIntFieldUpdateOperationsInput | number | null
    alt_text?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type variant_ratingsCreateInput = {
    rating?: number
    review?: string | null
    title?: string | null
    verified_purchase?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    rating_images?: rating_imagesCreateNestedManyWithoutVariant_ratingsInput
    customers: customersCreateNestedOneWithoutVariant_ratingsInput
    product_variants: product_variantsCreateNestedOneWithoutVariant_ratingsInput
  }

  export type variant_ratingsUncheckedCreateInput = {
    id?: number
    variant_id: number
    customer_id: number
    rating?: number
    review?: string | null
    title?: string | null
    verified_purchase?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    rating_images?: rating_imagesUncheckedCreateNestedManyWithoutVariant_ratingsInput
  }

  export type variant_ratingsUpdateInput = {
    rating?: IntFieldUpdateOperationsInput | number
    review?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    verified_purchase?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    rating_images?: rating_imagesUpdateManyWithoutVariant_ratingsNestedInput
    customers?: customersUpdateOneRequiredWithoutVariant_ratingsNestedInput
    product_variants?: product_variantsUpdateOneRequiredWithoutVariant_ratingsNestedInput
  }

  export type variant_ratingsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    variant_id?: IntFieldUpdateOperationsInput | number
    customer_id?: IntFieldUpdateOperationsInput | number
    rating?: IntFieldUpdateOperationsInput | number
    review?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    verified_purchase?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    rating_images?: rating_imagesUncheckedUpdateManyWithoutVariant_ratingsNestedInput
  }

  export type variant_ratingsCreateManyInput = {
    id?: number
    variant_id: number
    customer_id: number
    rating?: number
    review?: string | null
    title?: string | null
    verified_purchase?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type variant_ratingsUpdateManyMutationInput = {
    rating?: IntFieldUpdateOperationsInput | number
    review?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    verified_purchase?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type variant_ratingsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    variant_id?: IntFieldUpdateOperationsInput | number
    customer_id?: IntFieldUpdateOperationsInput | number
    rating?: IntFieldUpdateOperationsInput | number
    review?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    verified_purchase?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type Enumattribute_option_images_image_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.attribute_option_images_image_type | Enumattribute_option_images_image_typeFieldRefInput<$PrismaModel>
    in?: $Enums.attribute_option_images_image_type[]
    notIn?: $Enums.attribute_option_images_image_type[]
    not?: NestedEnumattribute_option_images_image_typeFilter<$PrismaModel> | $Enums.attribute_option_images_image_type
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type Attribute_optionsScalarRelationFilter = {
    is?: attribute_optionsWhereInput
    isNot?: attribute_optionsWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type attribute_option_imagesOrderByRelevanceInput = {
    fields: attribute_option_imagesOrderByRelevanceFieldEnum | attribute_option_imagesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type attribute_option_imagesAttribute_option_idImage_typeCompoundUniqueInput = {
    attribute_option_id: number
    image_type: $Enums.attribute_option_images_image_type
  }

  export type attribute_option_imagesCountOrderByAggregateInput = {
    id?: SortOrder
    attribute_option_id?: SortOrder
    image_type?: SortOrder
    display_order?: SortOrder
    image_url_thumb?: SortOrder
    image_url_normal?: SortOrder
    image_url_zoom?: SortOrder
    alt_text?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type attribute_option_imagesAvgOrderByAggregateInput = {
    id?: SortOrder
    attribute_option_id?: SortOrder
    display_order?: SortOrder
  }

  export type attribute_option_imagesMaxOrderByAggregateInput = {
    id?: SortOrder
    attribute_option_id?: SortOrder
    image_type?: SortOrder
    display_order?: SortOrder
    image_url_thumb?: SortOrder
    image_url_normal?: SortOrder
    image_url_zoom?: SortOrder
    alt_text?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type attribute_option_imagesMinOrderByAggregateInput = {
    id?: SortOrder
    attribute_option_id?: SortOrder
    image_type?: SortOrder
    display_order?: SortOrder
    image_url_thumb?: SortOrder
    image_url_normal?: SortOrder
    image_url_zoom?: SortOrder
    alt_text?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type attribute_option_imagesSumOrderByAggregateInput = {
    id?: SortOrder
    attribute_option_id?: SortOrder
    display_order?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type Enumattribute_option_images_image_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.attribute_option_images_image_type | Enumattribute_option_images_image_typeFieldRefInput<$PrismaModel>
    in?: $Enums.attribute_option_images_image_type[]
    notIn?: $Enums.attribute_option_images_image_type[]
    not?: NestedEnumattribute_option_images_image_typeWithAggregatesFilter<$PrismaModel> | $Enums.attribute_option_images_image_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumattribute_option_images_image_typeFilter<$PrismaModel>
    _max?: NestedEnumattribute_option_images_image_typeFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type Attribute_option_imagesListRelationFilter = {
    every?: attribute_option_imagesWhereInput
    some?: attribute_option_imagesWhereInput
    none?: attribute_option_imagesWhereInput
  }

  export type Variant_attribute_optionsListRelationFilter = {
    every?: variant_attribute_optionsWhereInput
    some?: variant_attribute_optionsWhereInput
    none?: variant_attribute_optionsWhereInput
  }

  export type attribute_option_imagesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type variant_attribute_optionsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type attribute_optionsOrderByRelevanceInput = {
    fields: attribute_optionsOrderByRelevanceFieldEnum | attribute_optionsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type attribute_optionsCountOrderByAggregateInput = {
    id?: SortOrder
    attribute_id?: SortOrder
    value?: SortOrder
    additional_cost?: SortOrder
  }

  export type attribute_optionsAvgOrderByAggregateInput = {
    id?: SortOrder
    attribute_id?: SortOrder
    additional_cost?: SortOrder
  }

  export type attribute_optionsMaxOrderByAggregateInput = {
    id?: SortOrder
    attribute_id?: SortOrder
    value?: SortOrder
    additional_cost?: SortOrder
  }

  export type attribute_optionsMinOrderByAggregateInput = {
    id?: SortOrder
    attribute_id?: SortOrder
    value?: SortOrder
    additional_cost?: SortOrder
  }

  export type attribute_optionsSumOrderByAggregateInput = {
    id?: SortOrder
    attribute_id?: SortOrder
    additional_cost?: SortOrder
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type Enumattributes_display_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.attributes_display_type | Enumattributes_display_typeFieldRefInput<$PrismaModel>
    in?: $Enums.attributes_display_type[]
    notIn?: $Enums.attributes_display_type[]
    not?: NestedEnumattributes_display_typeFilter<$PrismaModel> | $Enums.attributes_display_type
  }

  export type attributesOrderByRelevanceInput = {
    fields: attributesOrderByRelevanceFieldEnum | attributesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type attributesCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    display_type?: SortOrder
  }

  export type attributesAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type attributesMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    display_type?: SortOrder
  }

  export type attributesMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    display_type?: SortOrder
  }

  export type attributesSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type Enumattributes_display_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.attributes_display_type | Enumattributes_display_typeFieldRefInput<$PrismaModel>
    in?: $Enums.attributes_display_type[]
    notIn?: $Enums.attributes_display_type[]
    not?: NestedEnumattributes_display_typeWithAggregatesFilter<$PrismaModel> | $Enums.attributes_display_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumattributes_display_typeFilter<$PrismaModel>
    _max?: NestedEnumattributes_display_typeFilter<$PrismaModel>
  }

  export type bannerOrderByRelevanceInput = {
    fields: bannerOrderByRelevanceFieldEnum | bannerOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type bannerCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    subtitle?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    display_order?: SortOrder
    link?: SortOrder
    image_url?: SortOrder
  }

  export type bannerAvgOrderByAggregateInput = {
    id?: SortOrder
    display_order?: SortOrder
  }

  export type bannerMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    subtitle?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    display_order?: SortOrder
    link?: SortOrder
    image_url?: SortOrder
  }

  export type bannerMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    subtitle?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    display_order?: SortOrder
    link?: SortOrder
    image_url?: SortOrder
  }

  export type bannerSumOrderByAggregateInput = {
    id?: SortOrder
    display_order?: SortOrder
  }

  export type ProductsListRelationFilter = {
    every?: productsWhereInput
    some?: productsWhereInput
    none?: productsWhereInput
  }

  export type productsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type brandsOrderByRelevanceInput = {
    fields: brandsOrderByRelevanceFieldEnum | brandsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type brandsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type brandsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type brandsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type brandsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type brandsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type categoriesOrderByRelevanceInput = {
    fields: categoriesOrderByRelevanceFieldEnum | categoriesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type categoriesCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    parent_id?: SortOrder
    image_url?: SortOrder
  }

  export type categoriesAvgOrderByAggregateInput = {
    id?: SortOrder
    parent_id?: SortOrder
  }

  export type categoriesMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    parent_id?: SortOrder
    image_url?: SortOrder
  }

  export type categoriesMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    parent_id?: SortOrder
    image_url?: SortOrder
  }

  export type categoriesSumOrderByAggregateInput = {
    id?: SortOrder
    parent_id?: SortOrder
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type Customers_addressesListRelationFilter = {
    every?: customers_addressesWhereInput
    some?: customers_addressesWhereInput
    none?: customers_addressesWhereInput
  }

  export type Variant_ratingsListRelationFilter = {
    every?: variant_ratingsWhereInput
    some?: variant_ratingsWhereInput
    none?: variant_ratingsWhereInput
  }

  export type customers_addressesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type variant_ratingsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type customersOrderByRelevanceInput = {
    fields: customersOrderByRelevanceFieldEnum | customersOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type customersCountOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    address_id?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    lastname?: SortOrder
    photo?: SortOrder
    name?: SortOrder
  }

  export type customersAvgOrderByAggregateInput = {
    id?: SortOrder
    address_id?: SortOrder
  }

  export type customersMaxOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    address_id?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    lastname?: SortOrder
    photo?: SortOrder
    name?: SortOrder
  }

  export type customersMinOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    address_id?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    lastname?: SortOrder
    photo?: SortOrder
    name?: SortOrder
  }

  export type customersSumOrderByAggregateInput = {
    id?: SortOrder
    address_id?: SortOrder
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type CustomersNullableScalarRelationFilter = {
    is?: customersWhereInput | null
    isNot?: customersWhereInput | null
  }

  export type customers_addressesOrderByRelevanceInput = {
    fields: customers_addressesOrderByRelevanceFieldEnum | customers_addressesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type customers_addressesCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    id_customer?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type customers_addressesAvgOrderByAggregateInput = {
    id?: SortOrder
    id_customer?: SortOrder
  }

  export type customers_addressesMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    id_customer?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type customers_addressesMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    id_customer?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type customers_addressesSumOrderByAggregateInput = {
    id?: SortOrder
    id_customer?: SortOrder
  }

  export type permissionsOrderByRelevanceInput = {
    fields: permissionsOrderByRelevanceFieldEnum | permissionsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type permissionsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type permissionsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type permissionsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type permissionsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type permissionsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type product_categoriesProduct_idCategory_idCompoundUniqueInput = {
    product_id: number
    category_id: number
  }

  export type product_categoriesCountOrderByAggregateInput = {
    product_id?: SortOrder
    category_id?: SortOrder
  }

  export type product_categoriesAvgOrderByAggregateInput = {
    product_id?: SortOrder
    category_id?: SortOrder
  }

  export type product_categoriesMaxOrderByAggregateInput = {
    product_id?: SortOrder
    category_id?: SortOrder
  }

  export type product_categoriesMinOrderByAggregateInput = {
    product_id?: SortOrder
    category_id?: SortOrder
  }

  export type product_categoriesSumOrderByAggregateInput = {
    product_id?: SortOrder
    category_id?: SortOrder
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type ProductsScalarRelationFilter = {
    is?: productsWhereInput
    isNot?: productsWhereInput
  }

  export type Promotion_variantsListRelationFilter = {
    every?: promotion_variantsWhereInput
    some?: promotion_variantsWhereInput
    none?: promotion_variantsWhereInput
  }

  export type Variant_imagesListRelationFilter = {
    every?: variant_imagesWhereInput
    some?: variant_imagesWhereInput
    none?: variant_imagesWhereInput
  }

  export type promotion_variantsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type variant_imagesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type product_variantsOrderByRelevanceInput = {
    fields: product_variantsOrderByRelevanceFieldEnum | product_variantsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type product_variantsCountOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
    sku?: SortOrder
    price?: SortOrder
    stock?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type product_variantsAvgOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
    price?: SortOrder
    stock?: SortOrder
  }

  export type product_variantsMaxOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
    sku?: SortOrder
    price?: SortOrder
    stock?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type product_variantsMinOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
    sku?: SortOrder
    price?: SortOrder
    stock?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type product_variantsSumOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
    price?: SortOrder
    stock?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type Product_variantsListRelationFilter = {
    every?: product_variantsWhereInput
    some?: product_variantsWhereInput
    none?: product_variantsWhereInput
  }

  export type BrandsNullableScalarRelationFilter = {
    is?: brandsWhereInput | null
    isNot?: brandsWhereInput | null
  }

  export type product_variantsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type productsOrderByRelevanceInput = {
    fields: productsOrderByRelevanceFieldEnum | productsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type productsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    brand_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    base_price?: SortOrder
  }

  export type productsAvgOrderByAggregateInput = {
    id?: SortOrder
    brand_id?: SortOrder
    base_price?: SortOrder
  }

  export type productsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    brand_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    base_price?: SortOrder
  }

  export type productsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    brand_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    base_price?: SortOrder
  }

  export type productsSumOrderByAggregateInput = {
    id?: SortOrder
    brand_id?: SortOrder
    base_price?: SortOrder
  }

  export type PromotionsScalarRelationFilter = {
    is?: promotionsWhereInput
    isNot?: promotionsWhereInput
  }

  export type Product_variantsScalarRelationFilter = {
    is?: product_variantsWhereInput
    isNot?: product_variantsWhereInput
  }

  export type promotion_variantsPromotion_idVariant_idCompoundUniqueInput = {
    promotion_id: number
    variant_id: number
  }

  export type promotion_variantsCountOrderByAggregateInput = {
    promotion_id?: SortOrder
    variant_id?: SortOrder
    promotion_price?: SortOrder
    stock_limit?: SortOrder
    created_at?: SortOrder
  }

  export type promotion_variantsAvgOrderByAggregateInput = {
    promotion_id?: SortOrder
    variant_id?: SortOrder
    promotion_price?: SortOrder
    stock_limit?: SortOrder
  }

  export type promotion_variantsMaxOrderByAggregateInput = {
    promotion_id?: SortOrder
    variant_id?: SortOrder
    promotion_price?: SortOrder
    stock_limit?: SortOrder
    created_at?: SortOrder
  }

  export type promotion_variantsMinOrderByAggregateInput = {
    promotion_id?: SortOrder
    variant_id?: SortOrder
    promotion_price?: SortOrder
    stock_limit?: SortOrder
    created_at?: SortOrder
  }

  export type promotion_variantsSumOrderByAggregateInput = {
    promotion_id?: SortOrder
    variant_id?: SortOrder
    promotion_price?: SortOrder
    stock_limit?: SortOrder
  }

  export type Enumpromotions_discount_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.promotions_discount_type | Enumpromotions_discount_typeFieldRefInput<$PrismaModel>
    in?: $Enums.promotions_discount_type[]
    notIn?: $Enums.promotions_discount_type[]
    not?: NestedEnumpromotions_discount_typeFilter<$PrismaModel> | $Enums.promotions_discount_type
  }

  export type promotionsOrderByRelevanceInput = {
    fields: promotionsOrderByRelevanceFieldEnum | promotionsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type promotionsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    discount_type?: SortOrder
    discount_value?: SortOrder
    min_purchase_amount?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type promotionsAvgOrderByAggregateInput = {
    id?: SortOrder
    discount_value?: SortOrder
    min_purchase_amount?: SortOrder
  }

  export type promotionsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    discount_type?: SortOrder
    discount_value?: SortOrder
    min_purchase_amount?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type promotionsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    discount_type?: SortOrder
    discount_value?: SortOrder
    min_purchase_amount?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type promotionsSumOrderByAggregateInput = {
    id?: SortOrder
    discount_value?: SortOrder
    min_purchase_amount?: SortOrder
  }

  export type Enumpromotions_discount_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.promotions_discount_type | Enumpromotions_discount_typeFieldRefInput<$PrismaModel>
    in?: $Enums.promotions_discount_type[]
    notIn?: $Enums.promotions_discount_type[]
    not?: NestedEnumpromotions_discount_typeWithAggregatesFilter<$PrismaModel> | $Enums.promotions_discount_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumpromotions_discount_typeFilter<$PrismaModel>
    _max?: NestedEnumpromotions_discount_typeFilter<$PrismaModel>
  }

  export type Variant_ratingsScalarRelationFilter = {
    is?: variant_ratingsWhereInput
    isNot?: variant_ratingsWhereInput
  }

  export type rating_imagesOrderByRelevanceInput = {
    fields: rating_imagesOrderByRelevanceFieldEnum | rating_imagesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type rating_imagesCountOrderByAggregateInput = {
    id?: SortOrder
    rating_id?: SortOrder
    image_url?: SortOrder
    created_at?: SortOrder
  }

  export type rating_imagesAvgOrderByAggregateInput = {
    id?: SortOrder
    rating_id?: SortOrder
  }

  export type rating_imagesMaxOrderByAggregateInput = {
    id?: SortOrder
    rating_id?: SortOrder
    image_url?: SortOrder
    created_at?: SortOrder
  }

  export type rating_imagesMinOrderByAggregateInput = {
    id?: SortOrder
    rating_id?: SortOrder
    image_url?: SortOrder
    created_at?: SortOrder
  }

  export type rating_imagesSumOrderByAggregateInput = {
    id?: SortOrder
    rating_id?: SortOrder
  }

  export type Roles_sectionsListRelationFilter = {
    every?: roles_sectionsWhereInput
    some?: roles_sectionsWhereInput
    none?: roles_sectionsWhereInput
  }

  export type UsersListRelationFilter = {
    every?: usersWhereInput
    some?: usersWhereInput
    none?: usersWhereInput
  }

  export type roles_sectionsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type rolesOrderByRelevanceInput = {
    fields: rolesOrderByRelevanceFieldEnum | rolesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type rolesCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type rolesAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type rolesMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type rolesMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type rolesSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type SectionsNullableScalarRelationFilter = {
    is?: sectionsWhereInput | null
    isNot?: sectionsWhereInput | null
  }

  export type RolesNullableScalarRelationFilter = {
    is?: rolesWhereInput | null
    isNot?: rolesWhereInput | null
  }

  export type roles_sectionsCountOrderByAggregateInput = {
    id?: SortOrder
    id_section?: SortOrder
    id_rol?: SortOrder
  }

  export type roles_sectionsAvgOrderByAggregateInput = {
    id?: SortOrder
    id_section?: SortOrder
    id_rol?: SortOrder
  }

  export type roles_sectionsMaxOrderByAggregateInput = {
    id?: SortOrder
    id_section?: SortOrder
    id_rol?: SortOrder
  }

  export type roles_sectionsMinOrderByAggregateInput = {
    id?: SortOrder
    id_section?: SortOrder
    id_rol?: SortOrder
  }

  export type roles_sectionsSumOrderByAggregateInput = {
    id?: SortOrder
    id_section?: SortOrder
    id_rol?: SortOrder
  }

  export type sectionsOrderByRelevanceInput = {
    fields: sectionsOrderByRelevanceFieldEnum | sectionsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type sectionsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    url?: SortOrder
    image?: SortOrder
    display_order?: SortOrder
  }

  export type sectionsAvgOrderByAggregateInput = {
    id?: SortOrder
    display_order?: SortOrder
  }

  export type sectionsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    url?: SortOrder
    image?: SortOrder
    display_order?: SortOrder
  }

  export type sectionsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    url?: SortOrder
    image?: SortOrder
    display_order?: SortOrder
  }

  export type sectionsSumOrderByAggregateInput = {
    id?: SortOrder
    display_order?: SortOrder
  }

  export type Services_imagesListRelationFilter = {
    every?: services_imagesWhereInput
    some?: services_imagesWhereInput
    none?: services_imagesWhereInput
  }

  export type services_imagesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type servicesOrderByRelevanceInput = {
    fields: servicesOrderByRelevanceFieldEnum | servicesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type servicesCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    subtitle?: SortOrder
    image_url?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    display_order?: SortOrder
  }

  export type servicesAvgOrderByAggregateInput = {
    id?: SortOrder
    display_order?: SortOrder
  }

  export type servicesMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    subtitle?: SortOrder
    image_url?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    display_order?: SortOrder
  }

  export type servicesMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    subtitle?: SortOrder
    image_url?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    display_order?: SortOrder
  }

  export type servicesSumOrderByAggregateInput = {
    id?: SortOrder
    display_order?: SortOrder
  }

  export type ServicesNullableScalarRelationFilter = {
    is?: servicesWhereInput | null
    isNot?: servicesWhereInput | null
  }

  export type services_imagesOrderByRelevanceInput = {
    fields: services_imagesOrderByRelevanceFieldEnum | services_imagesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type services_imagesCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    subtitle?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    display_order?: SortOrder
    id_service?: SortOrder
    image_url?: SortOrder
  }

  export type services_imagesAvgOrderByAggregateInput = {
    id?: SortOrder
    display_order?: SortOrder
    id_service?: SortOrder
  }

  export type services_imagesMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    subtitle?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    display_order?: SortOrder
    id_service?: SortOrder
    image_url?: SortOrder
  }

  export type services_imagesMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    subtitle?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    display_order?: SortOrder
    id_service?: SortOrder
    image_url?: SortOrder
  }

  export type services_imagesSumOrderByAggregateInput = {
    id?: SortOrder
    display_order?: SortOrder
    id_service?: SortOrder
  }

  export type RolesScalarRelationFilter = {
    is?: rolesWhereInput
    isNot?: rolesWhereInput
  }

  export type usersOrderByRelevanceInput = {
    fields: usersOrderByRelevanceFieldEnum | usersOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type usersCountOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role_id?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    lastname?: SortOrder
    photo?: SortOrder
  }

  export type usersAvgOrderByAggregateInput = {
    id?: SortOrder
    role_id?: SortOrder
  }

  export type usersMaxOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role_id?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    lastname?: SortOrder
    photo?: SortOrder
  }

  export type usersMinOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role_id?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    lastname?: SortOrder
    photo?: SortOrder
  }

  export type usersSumOrderByAggregateInput = {
    id?: SortOrder
    role_id?: SortOrder
  }

  export type variant_attribute_optionsVariant_idAttribute_option_idCompoundUniqueInput = {
    variant_id: number
    attribute_option_id: number
  }

  export type variant_attribute_optionsCountOrderByAggregateInput = {
    variant_id?: SortOrder
    attribute_option_id?: SortOrder
  }

  export type variant_attribute_optionsAvgOrderByAggregateInput = {
    variant_id?: SortOrder
    attribute_option_id?: SortOrder
  }

  export type variant_attribute_optionsMaxOrderByAggregateInput = {
    variant_id?: SortOrder
    attribute_option_id?: SortOrder
  }

  export type variant_attribute_optionsMinOrderByAggregateInput = {
    variant_id?: SortOrder
    attribute_option_id?: SortOrder
  }

  export type variant_attribute_optionsSumOrderByAggregateInput = {
    variant_id?: SortOrder
    attribute_option_id?: SortOrder
  }

  export type Enumvariant_images_image_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.variant_images_image_type | Enumvariant_images_image_typeFieldRefInput<$PrismaModel>
    in?: $Enums.variant_images_image_type[]
    notIn?: $Enums.variant_images_image_type[]
    not?: NestedEnumvariant_images_image_typeFilter<$PrismaModel> | $Enums.variant_images_image_type
  }

  export type variant_imagesOrderByRelevanceInput = {
    fields: variant_imagesOrderByRelevanceFieldEnum | variant_imagesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type variant_imagesCountOrderByAggregateInput = {
    id?: SortOrder
    variant_id?: SortOrder
    image_type?: SortOrder
    image_url_thumb?: SortOrder
    image_url_normal?: SortOrder
    image_url_zoom?: SortOrder
    is_primary?: SortOrder
    display_order?: SortOrder
    alt_text?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type variant_imagesAvgOrderByAggregateInput = {
    id?: SortOrder
    variant_id?: SortOrder
    display_order?: SortOrder
  }

  export type variant_imagesMaxOrderByAggregateInput = {
    id?: SortOrder
    variant_id?: SortOrder
    image_type?: SortOrder
    image_url_thumb?: SortOrder
    image_url_normal?: SortOrder
    image_url_zoom?: SortOrder
    is_primary?: SortOrder
    display_order?: SortOrder
    alt_text?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type variant_imagesMinOrderByAggregateInput = {
    id?: SortOrder
    variant_id?: SortOrder
    image_type?: SortOrder
    image_url_thumb?: SortOrder
    image_url_normal?: SortOrder
    image_url_zoom?: SortOrder
    is_primary?: SortOrder
    display_order?: SortOrder
    alt_text?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type variant_imagesSumOrderByAggregateInput = {
    id?: SortOrder
    variant_id?: SortOrder
    display_order?: SortOrder
  }

  export type Enumvariant_images_image_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.variant_images_image_type | Enumvariant_images_image_typeFieldRefInput<$PrismaModel>
    in?: $Enums.variant_images_image_type[]
    notIn?: $Enums.variant_images_image_type[]
    not?: NestedEnumvariant_images_image_typeWithAggregatesFilter<$PrismaModel> | $Enums.variant_images_image_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumvariant_images_image_typeFilter<$PrismaModel>
    _max?: NestedEnumvariant_images_image_typeFilter<$PrismaModel>
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type Rating_imagesListRelationFilter = {
    every?: rating_imagesWhereInput
    some?: rating_imagesWhereInput
    none?: rating_imagesWhereInput
  }

  export type CustomersScalarRelationFilter = {
    is?: customersWhereInput
    isNot?: customersWhereInput
  }

  export type rating_imagesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type variant_ratingsOrderByRelevanceInput = {
    fields: variant_ratingsOrderByRelevanceFieldEnum | variant_ratingsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type variant_ratingsCustomer_idVariant_idCompoundUniqueInput = {
    customer_id: number
    variant_id: number
  }

  export type variant_ratingsCountOrderByAggregateInput = {
    id?: SortOrder
    variant_id?: SortOrder
    customer_id?: SortOrder
    rating?: SortOrder
    review?: SortOrder
    title?: SortOrder
    verified_purchase?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type variant_ratingsAvgOrderByAggregateInput = {
    id?: SortOrder
    variant_id?: SortOrder
    customer_id?: SortOrder
    rating?: SortOrder
  }

  export type variant_ratingsMaxOrderByAggregateInput = {
    id?: SortOrder
    variant_id?: SortOrder
    customer_id?: SortOrder
    rating?: SortOrder
    review?: SortOrder
    title?: SortOrder
    verified_purchase?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type variant_ratingsMinOrderByAggregateInput = {
    id?: SortOrder
    variant_id?: SortOrder
    customer_id?: SortOrder
    rating?: SortOrder
    review?: SortOrder
    title?: SortOrder
    verified_purchase?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type variant_ratingsSumOrderByAggregateInput = {
    id?: SortOrder
    variant_id?: SortOrder
    customer_id?: SortOrder
    rating?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type attribute_optionsCreateNestedOneWithoutAttribute_option_imagesInput = {
    create?: XOR<attribute_optionsCreateWithoutAttribute_option_imagesInput, attribute_optionsUncheckedCreateWithoutAttribute_option_imagesInput>
    connectOrCreate?: attribute_optionsCreateOrConnectWithoutAttribute_option_imagesInput
    connect?: attribute_optionsWhereUniqueInput
  }

  export type Enumattribute_option_images_image_typeFieldUpdateOperationsInput = {
    set?: $Enums.attribute_option_images_image_type
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type attribute_optionsUpdateOneRequiredWithoutAttribute_option_imagesNestedInput = {
    create?: XOR<attribute_optionsCreateWithoutAttribute_option_imagesInput, attribute_optionsUncheckedCreateWithoutAttribute_option_imagesInput>
    connectOrCreate?: attribute_optionsCreateOrConnectWithoutAttribute_option_imagesInput
    upsert?: attribute_optionsUpsertWithoutAttribute_option_imagesInput
    connect?: attribute_optionsWhereUniqueInput
    update?: XOR<XOR<attribute_optionsUpdateToOneWithWhereWithoutAttribute_option_imagesInput, attribute_optionsUpdateWithoutAttribute_option_imagesInput>, attribute_optionsUncheckedUpdateWithoutAttribute_option_imagesInput>
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type attribute_option_imagesCreateNestedManyWithoutAttribute_optionsInput = {
    create?: XOR<attribute_option_imagesCreateWithoutAttribute_optionsInput, attribute_option_imagesUncheckedCreateWithoutAttribute_optionsInput> | attribute_option_imagesCreateWithoutAttribute_optionsInput[] | attribute_option_imagesUncheckedCreateWithoutAttribute_optionsInput[]
    connectOrCreate?: attribute_option_imagesCreateOrConnectWithoutAttribute_optionsInput | attribute_option_imagesCreateOrConnectWithoutAttribute_optionsInput[]
    createMany?: attribute_option_imagesCreateManyAttribute_optionsInputEnvelope
    connect?: attribute_option_imagesWhereUniqueInput | attribute_option_imagesWhereUniqueInput[]
  }

  export type variant_attribute_optionsCreateNestedManyWithoutAttribute_optionsInput = {
    create?: XOR<variant_attribute_optionsCreateWithoutAttribute_optionsInput, variant_attribute_optionsUncheckedCreateWithoutAttribute_optionsInput> | variant_attribute_optionsCreateWithoutAttribute_optionsInput[] | variant_attribute_optionsUncheckedCreateWithoutAttribute_optionsInput[]
    connectOrCreate?: variant_attribute_optionsCreateOrConnectWithoutAttribute_optionsInput | variant_attribute_optionsCreateOrConnectWithoutAttribute_optionsInput[]
    createMany?: variant_attribute_optionsCreateManyAttribute_optionsInputEnvelope
    connect?: variant_attribute_optionsWhereUniqueInput | variant_attribute_optionsWhereUniqueInput[]
  }

  export type attribute_option_imagesUncheckedCreateNestedManyWithoutAttribute_optionsInput = {
    create?: XOR<attribute_option_imagesCreateWithoutAttribute_optionsInput, attribute_option_imagesUncheckedCreateWithoutAttribute_optionsInput> | attribute_option_imagesCreateWithoutAttribute_optionsInput[] | attribute_option_imagesUncheckedCreateWithoutAttribute_optionsInput[]
    connectOrCreate?: attribute_option_imagesCreateOrConnectWithoutAttribute_optionsInput | attribute_option_imagesCreateOrConnectWithoutAttribute_optionsInput[]
    createMany?: attribute_option_imagesCreateManyAttribute_optionsInputEnvelope
    connect?: attribute_option_imagesWhereUniqueInput | attribute_option_imagesWhereUniqueInput[]
  }

  export type variant_attribute_optionsUncheckedCreateNestedManyWithoutAttribute_optionsInput = {
    create?: XOR<variant_attribute_optionsCreateWithoutAttribute_optionsInput, variant_attribute_optionsUncheckedCreateWithoutAttribute_optionsInput> | variant_attribute_optionsCreateWithoutAttribute_optionsInput[] | variant_attribute_optionsUncheckedCreateWithoutAttribute_optionsInput[]
    connectOrCreate?: variant_attribute_optionsCreateOrConnectWithoutAttribute_optionsInput | variant_attribute_optionsCreateOrConnectWithoutAttribute_optionsInput[]
    createMany?: variant_attribute_optionsCreateManyAttribute_optionsInputEnvelope
    connect?: variant_attribute_optionsWhereUniqueInput | variant_attribute_optionsWhereUniqueInput[]
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type attribute_option_imagesUpdateManyWithoutAttribute_optionsNestedInput = {
    create?: XOR<attribute_option_imagesCreateWithoutAttribute_optionsInput, attribute_option_imagesUncheckedCreateWithoutAttribute_optionsInput> | attribute_option_imagesCreateWithoutAttribute_optionsInput[] | attribute_option_imagesUncheckedCreateWithoutAttribute_optionsInput[]
    connectOrCreate?: attribute_option_imagesCreateOrConnectWithoutAttribute_optionsInput | attribute_option_imagesCreateOrConnectWithoutAttribute_optionsInput[]
    upsert?: attribute_option_imagesUpsertWithWhereUniqueWithoutAttribute_optionsInput | attribute_option_imagesUpsertWithWhereUniqueWithoutAttribute_optionsInput[]
    createMany?: attribute_option_imagesCreateManyAttribute_optionsInputEnvelope
    set?: attribute_option_imagesWhereUniqueInput | attribute_option_imagesWhereUniqueInput[]
    disconnect?: attribute_option_imagesWhereUniqueInput | attribute_option_imagesWhereUniqueInput[]
    delete?: attribute_option_imagesWhereUniqueInput | attribute_option_imagesWhereUniqueInput[]
    connect?: attribute_option_imagesWhereUniqueInput | attribute_option_imagesWhereUniqueInput[]
    update?: attribute_option_imagesUpdateWithWhereUniqueWithoutAttribute_optionsInput | attribute_option_imagesUpdateWithWhereUniqueWithoutAttribute_optionsInput[]
    updateMany?: attribute_option_imagesUpdateManyWithWhereWithoutAttribute_optionsInput | attribute_option_imagesUpdateManyWithWhereWithoutAttribute_optionsInput[]
    deleteMany?: attribute_option_imagesScalarWhereInput | attribute_option_imagesScalarWhereInput[]
  }

  export type variant_attribute_optionsUpdateManyWithoutAttribute_optionsNestedInput = {
    create?: XOR<variant_attribute_optionsCreateWithoutAttribute_optionsInput, variant_attribute_optionsUncheckedCreateWithoutAttribute_optionsInput> | variant_attribute_optionsCreateWithoutAttribute_optionsInput[] | variant_attribute_optionsUncheckedCreateWithoutAttribute_optionsInput[]
    connectOrCreate?: variant_attribute_optionsCreateOrConnectWithoutAttribute_optionsInput | variant_attribute_optionsCreateOrConnectWithoutAttribute_optionsInput[]
    upsert?: variant_attribute_optionsUpsertWithWhereUniqueWithoutAttribute_optionsInput | variant_attribute_optionsUpsertWithWhereUniqueWithoutAttribute_optionsInput[]
    createMany?: variant_attribute_optionsCreateManyAttribute_optionsInputEnvelope
    set?: variant_attribute_optionsWhereUniqueInput | variant_attribute_optionsWhereUniqueInput[]
    disconnect?: variant_attribute_optionsWhereUniqueInput | variant_attribute_optionsWhereUniqueInput[]
    delete?: variant_attribute_optionsWhereUniqueInput | variant_attribute_optionsWhereUniqueInput[]
    connect?: variant_attribute_optionsWhereUniqueInput | variant_attribute_optionsWhereUniqueInput[]
    update?: variant_attribute_optionsUpdateWithWhereUniqueWithoutAttribute_optionsInput | variant_attribute_optionsUpdateWithWhereUniqueWithoutAttribute_optionsInput[]
    updateMany?: variant_attribute_optionsUpdateManyWithWhereWithoutAttribute_optionsInput | variant_attribute_optionsUpdateManyWithWhereWithoutAttribute_optionsInput[]
    deleteMany?: variant_attribute_optionsScalarWhereInput | variant_attribute_optionsScalarWhereInput[]
  }

  export type attribute_option_imagesUncheckedUpdateManyWithoutAttribute_optionsNestedInput = {
    create?: XOR<attribute_option_imagesCreateWithoutAttribute_optionsInput, attribute_option_imagesUncheckedCreateWithoutAttribute_optionsInput> | attribute_option_imagesCreateWithoutAttribute_optionsInput[] | attribute_option_imagesUncheckedCreateWithoutAttribute_optionsInput[]
    connectOrCreate?: attribute_option_imagesCreateOrConnectWithoutAttribute_optionsInput | attribute_option_imagesCreateOrConnectWithoutAttribute_optionsInput[]
    upsert?: attribute_option_imagesUpsertWithWhereUniqueWithoutAttribute_optionsInput | attribute_option_imagesUpsertWithWhereUniqueWithoutAttribute_optionsInput[]
    createMany?: attribute_option_imagesCreateManyAttribute_optionsInputEnvelope
    set?: attribute_option_imagesWhereUniqueInput | attribute_option_imagesWhereUniqueInput[]
    disconnect?: attribute_option_imagesWhereUniqueInput | attribute_option_imagesWhereUniqueInput[]
    delete?: attribute_option_imagesWhereUniqueInput | attribute_option_imagesWhereUniqueInput[]
    connect?: attribute_option_imagesWhereUniqueInput | attribute_option_imagesWhereUniqueInput[]
    update?: attribute_option_imagesUpdateWithWhereUniqueWithoutAttribute_optionsInput | attribute_option_imagesUpdateWithWhereUniqueWithoutAttribute_optionsInput[]
    updateMany?: attribute_option_imagesUpdateManyWithWhereWithoutAttribute_optionsInput | attribute_option_imagesUpdateManyWithWhereWithoutAttribute_optionsInput[]
    deleteMany?: attribute_option_imagesScalarWhereInput | attribute_option_imagesScalarWhereInput[]
  }

  export type variant_attribute_optionsUncheckedUpdateManyWithoutAttribute_optionsNestedInput = {
    create?: XOR<variant_attribute_optionsCreateWithoutAttribute_optionsInput, variant_attribute_optionsUncheckedCreateWithoutAttribute_optionsInput> | variant_attribute_optionsCreateWithoutAttribute_optionsInput[] | variant_attribute_optionsUncheckedCreateWithoutAttribute_optionsInput[]
    connectOrCreate?: variant_attribute_optionsCreateOrConnectWithoutAttribute_optionsInput | variant_attribute_optionsCreateOrConnectWithoutAttribute_optionsInput[]
    upsert?: variant_attribute_optionsUpsertWithWhereUniqueWithoutAttribute_optionsInput | variant_attribute_optionsUpsertWithWhereUniqueWithoutAttribute_optionsInput[]
    createMany?: variant_attribute_optionsCreateManyAttribute_optionsInputEnvelope
    set?: variant_attribute_optionsWhereUniqueInput | variant_attribute_optionsWhereUniqueInput[]
    disconnect?: variant_attribute_optionsWhereUniqueInput | variant_attribute_optionsWhereUniqueInput[]
    delete?: variant_attribute_optionsWhereUniqueInput | variant_attribute_optionsWhereUniqueInput[]
    connect?: variant_attribute_optionsWhereUniqueInput | variant_attribute_optionsWhereUniqueInput[]
    update?: variant_attribute_optionsUpdateWithWhereUniqueWithoutAttribute_optionsInput | variant_attribute_optionsUpdateWithWhereUniqueWithoutAttribute_optionsInput[]
    updateMany?: variant_attribute_optionsUpdateManyWithWhereWithoutAttribute_optionsInput | variant_attribute_optionsUpdateManyWithWhereWithoutAttribute_optionsInput[]
    deleteMany?: variant_attribute_optionsScalarWhereInput | variant_attribute_optionsScalarWhereInput[]
  }

  export type Enumattributes_display_typeFieldUpdateOperationsInput = {
    set?: $Enums.attributes_display_type
  }

  export type productsCreateNestedManyWithoutBrandsInput = {
    create?: XOR<productsCreateWithoutBrandsInput, productsUncheckedCreateWithoutBrandsInput> | productsCreateWithoutBrandsInput[] | productsUncheckedCreateWithoutBrandsInput[]
    connectOrCreate?: productsCreateOrConnectWithoutBrandsInput | productsCreateOrConnectWithoutBrandsInput[]
    createMany?: productsCreateManyBrandsInputEnvelope
    connect?: productsWhereUniqueInput | productsWhereUniqueInput[]
  }

  export type productsUncheckedCreateNestedManyWithoutBrandsInput = {
    create?: XOR<productsCreateWithoutBrandsInput, productsUncheckedCreateWithoutBrandsInput> | productsCreateWithoutBrandsInput[] | productsUncheckedCreateWithoutBrandsInput[]
    connectOrCreate?: productsCreateOrConnectWithoutBrandsInput | productsCreateOrConnectWithoutBrandsInput[]
    createMany?: productsCreateManyBrandsInputEnvelope
    connect?: productsWhereUniqueInput | productsWhereUniqueInput[]
  }

  export type productsUpdateManyWithoutBrandsNestedInput = {
    create?: XOR<productsCreateWithoutBrandsInput, productsUncheckedCreateWithoutBrandsInput> | productsCreateWithoutBrandsInput[] | productsUncheckedCreateWithoutBrandsInput[]
    connectOrCreate?: productsCreateOrConnectWithoutBrandsInput | productsCreateOrConnectWithoutBrandsInput[]
    upsert?: productsUpsertWithWhereUniqueWithoutBrandsInput | productsUpsertWithWhereUniqueWithoutBrandsInput[]
    createMany?: productsCreateManyBrandsInputEnvelope
    set?: productsWhereUniqueInput | productsWhereUniqueInput[]
    disconnect?: productsWhereUniqueInput | productsWhereUniqueInput[]
    delete?: productsWhereUniqueInput | productsWhereUniqueInput[]
    connect?: productsWhereUniqueInput | productsWhereUniqueInput[]
    update?: productsUpdateWithWhereUniqueWithoutBrandsInput | productsUpdateWithWhereUniqueWithoutBrandsInput[]
    updateMany?: productsUpdateManyWithWhereWithoutBrandsInput | productsUpdateManyWithWhereWithoutBrandsInput[]
    deleteMany?: productsScalarWhereInput | productsScalarWhereInput[]
  }

  export type productsUncheckedUpdateManyWithoutBrandsNestedInput = {
    create?: XOR<productsCreateWithoutBrandsInput, productsUncheckedCreateWithoutBrandsInput> | productsCreateWithoutBrandsInput[] | productsUncheckedCreateWithoutBrandsInput[]
    connectOrCreate?: productsCreateOrConnectWithoutBrandsInput | productsCreateOrConnectWithoutBrandsInput[]
    upsert?: productsUpsertWithWhereUniqueWithoutBrandsInput | productsUpsertWithWhereUniqueWithoutBrandsInput[]
    createMany?: productsCreateManyBrandsInputEnvelope
    set?: productsWhereUniqueInput | productsWhereUniqueInput[]
    disconnect?: productsWhereUniqueInput | productsWhereUniqueInput[]
    delete?: productsWhereUniqueInput | productsWhereUniqueInput[]
    connect?: productsWhereUniqueInput | productsWhereUniqueInput[]
    update?: productsUpdateWithWhereUniqueWithoutBrandsInput | productsUpdateWithWhereUniqueWithoutBrandsInput[]
    updateMany?: productsUpdateManyWithWhereWithoutBrandsInput | productsUpdateManyWithWhereWithoutBrandsInput[]
    deleteMany?: productsScalarWhereInput | productsScalarWhereInput[]
  }

  export type customers_addressesCreateNestedManyWithoutCustomersInput = {
    create?: XOR<customers_addressesCreateWithoutCustomersInput, customers_addressesUncheckedCreateWithoutCustomersInput> | customers_addressesCreateWithoutCustomersInput[] | customers_addressesUncheckedCreateWithoutCustomersInput[]
    connectOrCreate?: customers_addressesCreateOrConnectWithoutCustomersInput | customers_addressesCreateOrConnectWithoutCustomersInput[]
    createMany?: customers_addressesCreateManyCustomersInputEnvelope
    connect?: customers_addressesWhereUniqueInput | customers_addressesWhereUniqueInput[]
  }

  export type variant_ratingsCreateNestedManyWithoutCustomersInput = {
    create?: XOR<variant_ratingsCreateWithoutCustomersInput, variant_ratingsUncheckedCreateWithoutCustomersInput> | variant_ratingsCreateWithoutCustomersInput[] | variant_ratingsUncheckedCreateWithoutCustomersInput[]
    connectOrCreate?: variant_ratingsCreateOrConnectWithoutCustomersInput | variant_ratingsCreateOrConnectWithoutCustomersInput[]
    createMany?: variant_ratingsCreateManyCustomersInputEnvelope
    connect?: variant_ratingsWhereUniqueInput | variant_ratingsWhereUniqueInput[]
  }

  export type customers_addressesUncheckedCreateNestedManyWithoutCustomersInput = {
    create?: XOR<customers_addressesCreateWithoutCustomersInput, customers_addressesUncheckedCreateWithoutCustomersInput> | customers_addressesCreateWithoutCustomersInput[] | customers_addressesUncheckedCreateWithoutCustomersInput[]
    connectOrCreate?: customers_addressesCreateOrConnectWithoutCustomersInput | customers_addressesCreateOrConnectWithoutCustomersInput[]
    createMany?: customers_addressesCreateManyCustomersInputEnvelope
    connect?: customers_addressesWhereUniqueInput | customers_addressesWhereUniqueInput[]
  }

  export type variant_ratingsUncheckedCreateNestedManyWithoutCustomersInput = {
    create?: XOR<variant_ratingsCreateWithoutCustomersInput, variant_ratingsUncheckedCreateWithoutCustomersInput> | variant_ratingsCreateWithoutCustomersInput[] | variant_ratingsUncheckedCreateWithoutCustomersInput[]
    connectOrCreate?: variant_ratingsCreateOrConnectWithoutCustomersInput | variant_ratingsCreateOrConnectWithoutCustomersInput[]
    createMany?: variant_ratingsCreateManyCustomersInputEnvelope
    connect?: variant_ratingsWhereUniqueInput | variant_ratingsWhereUniqueInput[]
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type customers_addressesUpdateManyWithoutCustomersNestedInput = {
    create?: XOR<customers_addressesCreateWithoutCustomersInput, customers_addressesUncheckedCreateWithoutCustomersInput> | customers_addressesCreateWithoutCustomersInput[] | customers_addressesUncheckedCreateWithoutCustomersInput[]
    connectOrCreate?: customers_addressesCreateOrConnectWithoutCustomersInput | customers_addressesCreateOrConnectWithoutCustomersInput[]
    upsert?: customers_addressesUpsertWithWhereUniqueWithoutCustomersInput | customers_addressesUpsertWithWhereUniqueWithoutCustomersInput[]
    createMany?: customers_addressesCreateManyCustomersInputEnvelope
    set?: customers_addressesWhereUniqueInput | customers_addressesWhereUniqueInput[]
    disconnect?: customers_addressesWhereUniqueInput | customers_addressesWhereUniqueInput[]
    delete?: customers_addressesWhereUniqueInput | customers_addressesWhereUniqueInput[]
    connect?: customers_addressesWhereUniqueInput | customers_addressesWhereUniqueInput[]
    update?: customers_addressesUpdateWithWhereUniqueWithoutCustomersInput | customers_addressesUpdateWithWhereUniqueWithoutCustomersInput[]
    updateMany?: customers_addressesUpdateManyWithWhereWithoutCustomersInput | customers_addressesUpdateManyWithWhereWithoutCustomersInput[]
    deleteMany?: customers_addressesScalarWhereInput | customers_addressesScalarWhereInput[]
  }

  export type variant_ratingsUpdateManyWithoutCustomersNestedInput = {
    create?: XOR<variant_ratingsCreateWithoutCustomersInput, variant_ratingsUncheckedCreateWithoutCustomersInput> | variant_ratingsCreateWithoutCustomersInput[] | variant_ratingsUncheckedCreateWithoutCustomersInput[]
    connectOrCreate?: variant_ratingsCreateOrConnectWithoutCustomersInput | variant_ratingsCreateOrConnectWithoutCustomersInput[]
    upsert?: variant_ratingsUpsertWithWhereUniqueWithoutCustomersInput | variant_ratingsUpsertWithWhereUniqueWithoutCustomersInput[]
    createMany?: variant_ratingsCreateManyCustomersInputEnvelope
    set?: variant_ratingsWhereUniqueInput | variant_ratingsWhereUniqueInput[]
    disconnect?: variant_ratingsWhereUniqueInput | variant_ratingsWhereUniqueInput[]
    delete?: variant_ratingsWhereUniqueInput | variant_ratingsWhereUniqueInput[]
    connect?: variant_ratingsWhereUniqueInput | variant_ratingsWhereUniqueInput[]
    update?: variant_ratingsUpdateWithWhereUniqueWithoutCustomersInput | variant_ratingsUpdateWithWhereUniqueWithoutCustomersInput[]
    updateMany?: variant_ratingsUpdateManyWithWhereWithoutCustomersInput | variant_ratingsUpdateManyWithWhereWithoutCustomersInput[]
    deleteMany?: variant_ratingsScalarWhereInput | variant_ratingsScalarWhereInput[]
  }

  export type customers_addressesUncheckedUpdateManyWithoutCustomersNestedInput = {
    create?: XOR<customers_addressesCreateWithoutCustomersInput, customers_addressesUncheckedCreateWithoutCustomersInput> | customers_addressesCreateWithoutCustomersInput[] | customers_addressesUncheckedCreateWithoutCustomersInput[]
    connectOrCreate?: customers_addressesCreateOrConnectWithoutCustomersInput | customers_addressesCreateOrConnectWithoutCustomersInput[]
    upsert?: customers_addressesUpsertWithWhereUniqueWithoutCustomersInput | customers_addressesUpsertWithWhereUniqueWithoutCustomersInput[]
    createMany?: customers_addressesCreateManyCustomersInputEnvelope
    set?: customers_addressesWhereUniqueInput | customers_addressesWhereUniqueInput[]
    disconnect?: customers_addressesWhereUniqueInput | customers_addressesWhereUniqueInput[]
    delete?: customers_addressesWhereUniqueInput | customers_addressesWhereUniqueInput[]
    connect?: customers_addressesWhereUniqueInput | customers_addressesWhereUniqueInput[]
    update?: customers_addressesUpdateWithWhereUniqueWithoutCustomersInput | customers_addressesUpdateWithWhereUniqueWithoutCustomersInput[]
    updateMany?: customers_addressesUpdateManyWithWhereWithoutCustomersInput | customers_addressesUpdateManyWithWhereWithoutCustomersInput[]
    deleteMany?: customers_addressesScalarWhereInput | customers_addressesScalarWhereInput[]
  }

  export type variant_ratingsUncheckedUpdateManyWithoutCustomersNestedInput = {
    create?: XOR<variant_ratingsCreateWithoutCustomersInput, variant_ratingsUncheckedCreateWithoutCustomersInput> | variant_ratingsCreateWithoutCustomersInput[] | variant_ratingsUncheckedCreateWithoutCustomersInput[]
    connectOrCreate?: variant_ratingsCreateOrConnectWithoutCustomersInput | variant_ratingsCreateOrConnectWithoutCustomersInput[]
    upsert?: variant_ratingsUpsertWithWhereUniqueWithoutCustomersInput | variant_ratingsUpsertWithWhereUniqueWithoutCustomersInput[]
    createMany?: variant_ratingsCreateManyCustomersInputEnvelope
    set?: variant_ratingsWhereUniqueInput | variant_ratingsWhereUniqueInput[]
    disconnect?: variant_ratingsWhereUniqueInput | variant_ratingsWhereUniqueInput[]
    delete?: variant_ratingsWhereUniqueInput | variant_ratingsWhereUniqueInput[]
    connect?: variant_ratingsWhereUniqueInput | variant_ratingsWhereUniqueInput[]
    update?: variant_ratingsUpdateWithWhereUniqueWithoutCustomersInput | variant_ratingsUpdateWithWhereUniqueWithoutCustomersInput[]
    updateMany?: variant_ratingsUpdateManyWithWhereWithoutCustomersInput | variant_ratingsUpdateManyWithWhereWithoutCustomersInput[]
    deleteMany?: variant_ratingsScalarWhereInput | variant_ratingsScalarWhereInput[]
  }

  export type customersCreateNestedOneWithoutCustomers_addressesInput = {
    create?: XOR<customersCreateWithoutCustomers_addressesInput, customersUncheckedCreateWithoutCustomers_addressesInput>
    connectOrCreate?: customersCreateOrConnectWithoutCustomers_addressesInput
    connect?: customersWhereUniqueInput
  }

  export type customersUpdateOneWithoutCustomers_addressesNestedInput = {
    create?: XOR<customersCreateWithoutCustomers_addressesInput, customersUncheckedCreateWithoutCustomers_addressesInput>
    connectOrCreate?: customersCreateOrConnectWithoutCustomers_addressesInput
    upsert?: customersUpsertWithoutCustomers_addressesInput
    disconnect?: customersWhereInput | boolean
    delete?: customersWhereInput | boolean
    connect?: customersWhereUniqueInput
    update?: XOR<XOR<customersUpdateToOneWithWhereWithoutCustomers_addressesInput, customersUpdateWithoutCustomers_addressesInput>, customersUncheckedUpdateWithoutCustomers_addressesInput>
  }

  export type productsCreateNestedOneWithoutProduct_variantsInput = {
    create?: XOR<productsCreateWithoutProduct_variantsInput, productsUncheckedCreateWithoutProduct_variantsInput>
    connectOrCreate?: productsCreateOrConnectWithoutProduct_variantsInput
    connect?: productsWhereUniqueInput
  }

  export type promotion_variantsCreateNestedManyWithoutProduct_variantsInput = {
    create?: XOR<promotion_variantsCreateWithoutProduct_variantsInput, promotion_variantsUncheckedCreateWithoutProduct_variantsInput> | promotion_variantsCreateWithoutProduct_variantsInput[] | promotion_variantsUncheckedCreateWithoutProduct_variantsInput[]
    connectOrCreate?: promotion_variantsCreateOrConnectWithoutProduct_variantsInput | promotion_variantsCreateOrConnectWithoutProduct_variantsInput[]
    createMany?: promotion_variantsCreateManyProduct_variantsInputEnvelope
    connect?: promotion_variantsWhereUniqueInput | promotion_variantsWhereUniqueInput[]
  }

  export type variant_attribute_optionsCreateNestedManyWithoutProduct_variantsInput = {
    create?: XOR<variant_attribute_optionsCreateWithoutProduct_variantsInput, variant_attribute_optionsUncheckedCreateWithoutProduct_variantsInput> | variant_attribute_optionsCreateWithoutProduct_variantsInput[] | variant_attribute_optionsUncheckedCreateWithoutProduct_variantsInput[]
    connectOrCreate?: variant_attribute_optionsCreateOrConnectWithoutProduct_variantsInput | variant_attribute_optionsCreateOrConnectWithoutProduct_variantsInput[]
    createMany?: variant_attribute_optionsCreateManyProduct_variantsInputEnvelope
    connect?: variant_attribute_optionsWhereUniqueInput | variant_attribute_optionsWhereUniqueInput[]
  }

  export type variant_imagesCreateNestedManyWithoutProduct_variantsInput = {
    create?: XOR<variant_imagesCreateWithoutProduct_variantsInput, variant_imagesUncheckedCreateWithoutProduct_variantsInput> | variant_imagesCreateWithoutProduct_variantsInput[] | variant_imagesUncheckedCreateWithoutProduct_variantsInput[]
    connectOrCreate?: variant_imagesCreateOrConnectWithoutProduct_variantsInput | variant_imagesCreateOrConnectWithoutProduct_variantsInput[]
    createMany?: variant_imagesCreateManyProduct_variantsInputEnvelope
    connect?: variant_imagesWhereUniqueInput | variant_imagesWhereUniqueInput[]
  }

  export type variant_ratingsCreateNestedManyWithoutProduct_variantsInput = {
    create?: XOR<variant_ratingsCreateWithoutProduct_variantsInput, variant_ratingsUncheckedCreateWithoutProduct_variantsInput> | variant_ratingsCreateWithoutProduct_variantsInput[] | variant_ratingsUncheckedCreateWithoutProduct_variantsInput[]
    connectOrCreate?: variant_ratingsCreateOrConnectWithoutProduct_variantsInput | variant_ratingsCreateOrConnectWithoutProduct_variantsInput[]
    createMany?: variant_ratingsCreateManyProduct_variantsInputEnvelope
    connect?: variant_ratingsWhereUniqueInput | variant_ratingsWhereUniqueInput[]
  }

  export type promotion_variantsUncheckedCreateNestedManyWithoutProduct_variantsInput = {
    create?: XOR<promotion_variantsCreateWithoutProduct_variantsInput, promotion_variantsUncheckedCreateWithoutProduct_variantsInput> | promotion_variantsCreateWithoutProduct_variantsInput[] | promotion_variantsUncheckedCreateWithoutProduct_variantsInput[]
    connectOrCreate?: promotion_variantsCreateOrConnectWithoutProduct_variantsInput | promotion_variantsCreateOrConnectWithoutProduct_variantsInput[]
    createMany?: promotion_variantsCreateManyProduct_variantsInputEnvelope
    connect?: promotion_variantsWhereUniqueInput | promotion_variantsWhereUniqueInput[]
  }

  export type variant_attribute_optionsUncheckedCreateNestedManyWithoutProduct_variantsInput = {
    create?: XOR<variant_attribute_optionsCreateWithoutProduct_variantsInput, variant_attribute_optionsUncheckedCreateWithoutProduct_variantsInput> | variant_attribute_optionsCreateWithoutProduct_variantsInput[] | variant_attribute_optionsUncheckedCreateWithoutProduct_variantsInput[]
    connectOrCreate?: variant_attribute_optionsCreateOrConnectWithoutProduct_variantsInput | variant_attribute_optionsCreateOrConnectWithoutProduct_variantsInput[]
    createMany?: variant_attribute_optionsCreateManyProduct_variantsInputEnvelope
    connect?: variant_attribute_optionsWhereUniqueInput | variant_attribute_optionsWhereUniqueInput[]
  }

  export type variant_imagesUncheckedCreateNestedManyWithoutProduct_variantsInput = {
    create?: XOR<variant_imagesCreateWithoutProduct_variantsInput, variant_imagesUncheckedCreateWithoutProduct_variantsInput> | variant_imagesCreateWithoutProduct_variantsInput[] | variant_imagesUncheckedCreateWithoutProduct_variantsInput[]
    connectOrCreate?: variant_imagesCreateOrConnectWithoutProduct_variantsInput | variant_imagesCreateOrConnectWithoutProduct_variantsInput[]
    createMany?: variant_imagesCreateManyProduct_variantsInputEnvelope
    connect?: variant_imagesWhereUniqueInput | variant_imagesWhereUniqueInput[]
  }

  export type variant_ratingsUncheckedCreateNestedManyWithoutProduct_variantsInput = {
    create?: XOR<variant_ratingsCreateWithoutProduct_variantsInput, variant_ratingsUncheckedCreateWithoutProduct_variantsInput> | variant_ratingsCreateWithoutProduct_variantsInput[] | variant_ratingsUncheckedCreateWithoutProduct_variantsInput[]
    connectOrCreate?: variant_ratingsCreateOrConnectWithoutProduct_variantsInput | variant_ratingsCreateOrConnectWithoutProduct_variantsInput[]
    createMany?: variant_ratingsCreateManyProduct_variantsInputEnvelope
    connect?: variant_ratingsWhereUniqueInput | variant_ratingsWhereUniqueInput[]
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type productsUpdateOneRequiredWithoutProduct_variantsNestedInput = {
    create?: XOR<productsCreateWithoutProduct_variantsInput, productsUncheckedCreateWithoutProduct_variantsInput>
    connectOrCreate?: productsCreateOrConnectWithoutProduct_variantsInput
    upsert?: productsUpsertWithoutProduct_variantsInput
    connect?: productsWhereUniqueInput
    update?: XOR<XOR<productsUpdateToOneWithWhereWithoutProduct_variantsInput, productsUpdateWithoutProduct_variantsInput>, productsUncheckedUpdateWithoutProduct_variantsInput>
  }

  export type promotion_variantsUpdateManyWithoutProduct_variantsNestedInput = {
    create?: XOR<promotion_variantsCreateWithoutProduct_variantsInput, promotion_variantsUncheckedCreateWithoutProduct_variantsInput> | promotion_variantsCreateWithoutProduct_variantsInput[] | promotion_variantsUncheckedCreateWithoutProduct_variantsInput[]
    connectOrCreate?: promotion_variantsCreateOrConnectWithoutProduct_variantsInput | promotion_variantsCreateOrConnectWithoutProduct_variantsInput[]
    upsert?: promotion_variantsUpsertWithWhereUniqueWithoutProduct_variantsInput | promotion_variantsUpsertWithWhereUniqueWithoutProduct_variantsInput[]
    createMany?: promotion_variantsCreateManyProduct_variantsInputEnvelope
    set?: promotion_variantsWhereUniqueInput | promotion_variantsWhereUniqueInput[]
    disconnect?: promotion_variantsWhereUniqueInput | promotion_variantsWhereUniqueInput[]
    delete?: promotion_variantsWhereUniqueInput | promotion_variantsWhereUniqueInput[]
    connect?: promotion_variantsWhereUniqueInput | promotion_variantsWhereUniqueInput[]
    update?: promotion_variantsUpdateWithWhereUniqueWithoutProduct_variantsInput | promotion_variantsUpdateWithWhereUniqueWithoutProduct_variantsInput[]
    updateMany?: promotion_variantsUpdateManyWithWhereWithoutProduct_variantsInput | promotion_variantsUpdateManyWithWhereWithoutProduct_variantsInput[]
    deleteMany?: promotion_variantsScalarWhereInput | promotion_variantsScalarWhereInput[]
  }

  export type variant_attribute_optionsUpdateManyWithoutProduct_variantsNestedInput = {
    create?: XOR<variant_attribute_optionsCreateWithoutProduct_variantsInput, variant_attribute_optionsUncheckedCreateWithoutProduct_variantsInput> | variant_attribute_optionsCreateWithoutProduct_variantsInput[] | variant_attribute_optionsUncheckedCreateWithoutProduct_variantsInput[]
    connectOrCreate?: variant_attribute_optionsCreateOrConnectWithoutProduct_variantsInput | variant_attribute_optionsCreateOrConnectWithoutProduct_variantsInput[]
    upsert?: variant_attribute_optionsUpsertWithWhereUniqueWithoutProduct_variantsInput | variant_attribute_optionsUpsertWithWhereUniqueWithoutProduct_variantsInput[]
    createMany?: variant_attribute_optionsCreateManyProduct_variantsInputEnvelope
    set?: variant_attribute_optionsWhereUniqueInput | variant_attribute_optionsWhereUniqueInput[]
    disconnect?: variant_attribute_optionsWhereUniqueInput | variant_attribute_optionsWhereUniqueInput[]
    delete?: variant_attribute_optionsWhereUniqueInput | variant_attribute_optionsWhereUniqueInput[]
    connect?: variant_attribute_optionsWhereUniqueInput | variant_attribute_optionsWhereUniqueInput[]
    update?: variant_attribute_optionsUpdateWithWhereUniqueWithoutProduct_variantsInput | variant_attribute_optionsUpdateWithWhereUniqueWithoutProduct_variantsInput[]
    updateMany?: variant_attribute_optionsUpdateManyWithWhereWithoutProduct_variantsInput | variant_attribute_optionsUpdateManyWithWhereWithoutProduct_variantsInput[]
    deleteMany?: variant_attribute_optionsScalarWhereInput | variant_attribute_optionsScalarWhereInput[]
  }

  export type variant_imagesUpdateManyWithoutProduct_variantsNestedInput = {
    create?: XOR<variant_imagesCreateWithoutProduct_variantsInput, variant_imagesUncheckedCreateWithoutProduct_variantsInput> | variant_imagesCreateWithoutProduct_variantsInput[] | variant_imagesUncheckedCreateWithoutProduct_variantsInput[]
    connectOrCreate?: variant_imagesCreateOrConnectWithoutProduct_variantsInput | variant_imagesCreateOrConnectWithoutProduct_variantsInput[]
    upsert?: variant_imagesUpsertWithWhereUniqueWithoutProduct_variantsInput | variant_imagesUpsertWithWhereUniqueWithoutProduct_variantsInput[]
    createMany?: variant_imagesCreateManyProduct_variantsInputEnvelope
    set?: variant_imagesWhereUniqueInput | variant_imagesWhereUniqueInput[]
    disconnect?: variant_imagesWhereUniqueInput | variant_imagesWhereUniqueInput[]
    delete?: variant_imagesWhereUniqueInput | variant_imagesWhereUniqueInput[]
    connect?: variant_imagesWhereUniqueInput | variant_imagesWhereUniqueInput[]
    update?: variant_imagesUpdateWithWhereUniqueWithoutProduct_variantsInput | variant_imagesUpdateWithWhereUniqueWithoutProduct_variantsInput[]
    updateMany?: variant_imagesUpdateManyWithWhereWithoutProduct_variantsInput | variant_imagesUpdateManyWithWhereWithoutProduct_variantsInput[]
    deleteMany?: variant_imagesScalarWhereInput | variant_imagesScalarWhereInput[]
  }

  export type variant_ratingsUpdateManyWithoutProduct_variantsNestedInput = {
    create?: XOR<variant_ratingsCreateWithoutProduct_variantsInput, variant_ratingsUncheckedCreateWithoutProduct_variantsInput> | variant_ratingsCreateWithoutProduct_variantsInput[] | variant_ratingsUncheckedCreateWithoutProduct_variantsInput[]
    connectOrCreate?: variant_ratingsCreateOrConnectWithoutProduct_variantsInput | variant_ratingsCreateOrConnectWithoutProduct_variantsInput[]
    upsert?: variant_ratingsUpsertWithWhereUniqueWithoutProduct_variantsInput | variant_ratingsUpsertWithWhereUniqueWithoutProduct_variantsInput[]
    createMany?: variant_ratingsCreateManyProduct_variantsInputEnvelope
    set?: variant_ratingsWhereUniqueInput | variant_ratingsWhereUniqueInput[]
    disconnect?: variant_ratingsWhereUniqueInput | variant_ratingsWhereUniqueInput[]
    delete?: variant_ratingsWhereUniqueInput | variant_ratingsWhereUniqueInput[]
    connect?: variant_ratingsWhereUniqueInput | variant_ratingsWhereUniqueInput[]
    update?: variant_ratingsUpdateWithWhereUniqueWithoutProduct_variantsInput | variant_ratingsUpdateWithWhereUniqueWithoutProduct_variantsInput[]
    updateMany?: variant_ratingsUpdateManyWithWhereWithoutProduct_variantsInput | variant_ratingsUpdateManyWithWhereWithoutProduct_variantsInput[]
    deleteMany?: variant_ratingsScalarWhereInput | variant_ratingsScalarWhereInput[]
  }

  export type promotion_variantsUncheckedUpdateManyWithoutProduct_variantsNestedInput = {
    create?: XOR<promotion_variantsCreateWithoutProduct_variantsInput, promotion_variantsUncheckedCreateWithoutProduct_variantsInput> | promotion_variantsCreateWithoutProduct_variantsInput[] | promotion_variantsUncheckedCreateWithoutProduct_variantsInput[]
    connectOrCreate?: promotion_variantsCreateOrConnectWithoutProduct_variantsInput | promotion_variantsCreateOrConnectWithoutProduct_variantsInput[]
    upsert?: promotion_variantsUpsertWithWhereUniqueWithoutProduct_variantsInput | promotion_variantsUpsertWithWhereUniqueWithoutProduct_variantsInput[]
    createMany?: promotion_variantsCreateManyProduct_variantsInputEnvelope
    set?: promotion_variantsWhereUniqueInput | promotion_variantsWhereUniqueInput[]
    disconnect?: promotion_variantsWhereUniqueInput | promotion_variantsWhereUniqueInput[]
    delete?: promotion_variantsWhereUniqueInput | promotion_variantsWhereUniqueInput[]
    connect?: promotion_variantsWhereUniqueInput | promotion_variantsWhereUniqueInput[]
    update?: promotion_variantsUpdateWithWhereUniqueWithoutProduct_variantsInput | promotion_variantsUpdateWithWhereUniqueWithoutProduct_variantsInput[]
    updateMany?: promotion_variantsUpdateManyWithWhereWithoutProduct_variantsInput | promotion_variantsUpdateManyWithWhereWithoutProduct_variantsInput[]
    deleteMany?: promotion_variantsScalarWhereInput | promotion_variantsScalarWhereInput[]
  }

  export type variant_attribute_optionsUncheckedUpdateManyWithoutProduct_variantsNestedInput = {
    create?: XOR<variant_attribute_optionsCreateWithoutProduct_variantsInput, variant_attribute_optionsUncheckedCreateWithoutProduct_variantsInput> | variant_attribute_optionsCreateWithoutProduct_variantsInput[] | variant_attribute_optionsUncheckedCreateWithoutProduct_variantsInput[]
    connectOrCreate?: variant_attribute_optionsCreateOrConnectWithoutProduct_variantsInput | variant_attribute_optionsCreateOrConnectWithoutProduct_variantsInput[]
    upsert?: variant_attribute_optionsUpsertWithWhereUniqueWithoutProduct_variantsInput | variant_attribute_optionsUpsertWithWhereUniqueWithoutProduct_variantsInput[]
    createMany?: variant_attribute_optionsCreateManyProduct_variantsInputEnvelope
    set?: variant_attribute_optionsWhereUniqueInput | variant_attribute_optionsWhereUniqueInput[]
    disconnect?: variant_attribute_optionsWhereUniqueInput | variant_attribute_optionsWhereUniqueInput[]
    delete?: variant_attribute_optionsWhereUniqueInput | variant_attribute_optionsWhereUniqueInput[]
    connect?: variant_attribute_optionsWhereUniqueInput | variant_attribute_optionsWhereUniqueInput[]
    update?: variant_attribute_optionsUpdateWithWhereUniqueWithoutProduct_variantsInput | variant_attribute_optionsUpdateWithWhereUniqueWithoutProduct_variantsInput[]
    updateMany?: variant_attribute_optionsUpdateManyWithWhereWithoutProduct_variantsInput | variant_attribute_optionsUpdateManyWithWhereWithoutProduct_variantsInput[]
    deleteMany?: variant_attribute_optionsScalarWhereInput | variant_attribute_optionsScalarWhereInput[]
  }

  export type variant_imagesUncheckedUpdateManyWithoutProduct_variantsNestedInput = {
    create?: XOR<variant_imagesCreateWithoutProduct_variantsInput, variant_imagesUncheckedCreateWithoutProduct_variantsInput> | variant_imagesCreateWithoutProduct_variantsInput[] | variant_imagesUncheckedCreateWithoutProduct_variantsInput[]
    connectOrCreate?: variant_imagesCreateOrConnectWithoutProduct_variantsInput | variant_imagesCreateOrConnectWithoutProduct_variantsInput[]
    upsert?: variant_imagesUpsertWithWhereUniqueWithoutProduct_variantsInput | variant_imagesUpsertWithWhereUniqueWithoutProduct_variantsInput[]
    createMany?: variant_imagesCreateManyProduct_variantsInputEnvelope
    set?: variant_imagesWhereUniqueInput | variant_imagesWhereUniqueInput[]
    disconnect?: variant_imagesWhereUniqueInput | variant_imagesWhereUniqueInput[]
    delete?: variant_imagesWhereUniqueInput | variant_imagesWhereUniqueInput[]
    connect?: variant_imagesWhereUniqueInput | variant_imagesWhereUniqueInput[]
    update?: variant_imagesUpdateWithWhereUniqueWithoutProduct_variantsInput | variant_imagesUpdateWithWhereUniqueWithoutProduct_variantsInput[]
    updateMany?: variant_imagesUpdateManyWithWhereWithoutProduct_variantsInput | variant_imagesUpdateManyWithWhereWithoutProduct_variantsInput[]
    deleteMany?: variant_imagesScalarWhereInput | variant_imagesScalarWhereInput[]
  }

  export type variant_ratingsUncheckedUpdateManyWithoutProduct_variantsNestedInput = {
    create?: XOR<variant_ratingsCreateWithoutProduct_variantsInput, variant_ratingsUncheckedCreateWithoutProduct_variantsInput> | variant_ratingsCreateWithoutProduct_variantsInput[] | variant_ratingsUncheckedCreateWithoutProduct_variantsInput[]
    connectOrCreate?: variant_ratingsCreateOrConnectWithoutProduct_variantsInput | variant_ratingsCreateOrConnectWithoutProduct_variantsInput[]
    upsert?: variant_ratingsUpsertWithWhereUniqueWithoutProduct_variantsInput | variant_ratingsUpsertWithWhereUniqueWithoutProduct_variantsInput[]
    createMany?: variant_ratingsCreateManyProduct_variantsInputEnvelope
    set?: variant_ratingsWhereUniqueInput | variant_ratingsWhereUniqueInput[]
    disconnect?: variant_ratingsWhereUniqueInput | variant_ratingsWhereUniqueInput[]
    delete?: variant_ratingsWhereUniqueInput | variant_ratingsWhereUniqueInput[]
    connect?: variant_ratingsWhereUniqueInput | variant_ratingsWhereUniqueInput[]
    update?: variant_ratingsUpdateWithWhereUniqueWithoutProduct_variantsInput | variant_ratingsUpdateWithWhereUniqueWithoutProduct_variantsInput[]
    updateMany?: variant_ratingsUpdateManyWithWhereWithoutProduct_variantsInput | variant_ratingsUpdateManyWithWhereWithoutProduct_variantsInput[]
    deleteMany?: variant_ratingsScalarWhereInput | variant_ratingsScalarWhereInput[]
  }

  export type product_variantsCreateNestedManyWithoutProductsInput = {
    create?: XOR<product_variantsCreateWithoutProductsInput, product_variantsUncheckedCreateWithoutProductsInput> | product_variantsCreateWithoutProductsInput[] | product_variantsUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: product_variantsCreateOrConnectWithoutProductsInput | product_variantsCreateOrConnectWithoutProductsInput[]
    createMany?: product_variantsCreateManyProductsInputEnvelope
    connect?: product_variantsWhereUniqueInput | product_variantsWhereUniqueInput[]
  }

  export type brandsCreateNestedOneWithoutProductsInput = {
    create?: XOR<brandsCreateWithoutProductsInput, brandsUncheckedCreateWithoutProductsInput>
    connectOrCreate?: brandsCreateOrConnectWithoutProductsInput
    connect?: brandsWhereUniqueInput
  }

  export type product_variantsUncheckedCreateNestedManyWithoutProductsInput = {
    create?: XOR<product_variantsCreateWithoutProductsInput, product_variantsUncheckedCreateWithoutProductsInput> | product_variantsCreateWithoutProductsInput[] | product_variantsUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: product_variantsCreateOrConnectWithoutProductsInput | product_variantsCreateOrConnectWithoutProductsInput[]
    createMany?: product_variantsCreateManyProductsInputEnvelope
    connect?: product_variantsWhereUniqueInput | product_variantsWhereUniqueInput[]
  }

  export type product_variantsUpdateManyWithoutProductsNestedInput = {
    create?: XOR<product_variantsCreateWithoutProductsInput, product_variantsUncheckedCreateWithoutProductsInput> | product_variantsCreateWithoutProductsInput[] | product_variantsUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: product_variantsCreateOrConnectWithoutProductsInput | product_variantsCreateOrConnectWithoutProductsInput[]
    upsert?: product_variantsUpsertWithWhereUniqueWithoutProductsInput | product_variantsUpsertWithWhereUniqueWithoutProductsInput[]
    createMany?: product_variantsCreateManyProductsInputEnvelope
    set?: product_variantsWhereUniqueInput | product_variantsWhereUniqueInput[]
    disconnect?: product_variantsWhereUniqueInput | product_variantsWhereUniqueInput[]
    delete?: product_variantsWhereUniqueInput | product_variantsWhereUniqueInput[]
    connect?: product_variantsWhereUniqueInput | product_variantsWhereUniqueInput[]
    update?: product_variantsUpdateWithWhereUniqueWithoutProductsInput | product_variantsUpdateWithWhereUniqueWithoutProductsInput[]
    updateMany?: product_variantsUpdateManyWithWhereWithoutProductsInput | product_variantsUpdateManyWithWhereWithoutProductsInput[]
    deleteMany?: product_variantsScalarWhereInput | product_variantsScalarWhereInput[]
  }

  export type brandsUpdateOneWithoutProductsNestedInput = {
    create?: XOR<brandsCreateWithoutProductsInput, brandsUncheckedCreateWithoutProductsInput>
    connectOrCreate?: brandsCreateOrConnectWithoutProductsInput
    upsert?: brandsUpsertWithoutProductsInput
    disconnect?: brandsWhereInput | boolean
    delete?: brandsWhereInput | boolean
    connect?: brandsWhereUniqueInput
    update?: XOR<XOR<brandsUpdateToOneWithWhereWithoutProductsInput, brandsUpdateWithoutProductsInput>, brandsUncheckedUpdateWithoutProductsInput>
  }

  export type product_variantsUncheckedUpdateManyWithoutProductsNestedInput = {
    create?: XOR<product_variantsCreateWithoutProductsInput, product_variantsUncheckedCreateWithoutProductsInput> | product_variantsCreateWithoutProductsInput[] | product_variantsUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: product_variantsCreateOrConnectWithoutProductsInput | product_variantsCreateOrConnectWithoutProductsInput[]
    upsert?: product_variantsUpsertWithWhereUniqueWithoutProductsInput | product_variantsUpsertWithWhereUniqueWithoutProductsInput[]
    createMany?: product_variantsCreateManyProductsInputEnvelope
    set?: product_variantsWhereUniqueInput | product_variantsWhereUniqueInput[]
    disconnect?: product_variantsWhereUniqueInput | product_variantsWhereUniqueInput[]
    delete?: product_variantsWhereUniqueInput | product_variantsWhereUniqueInput[]
    connect?: product_variantsWhereUniqueInput | product_variantsWhereUniqueInput[]
    update?: product_variantsUpdateWithWhereUniqueWithoutProductsInput | product_variantsUpdateWithWhereUniqueWithoutProductsInput[]
    updateMany?: product_variantsUpdateManyWithWhereWithoutProductsInput | product_variantsUpdateManyWithWhereWithoutProductsInput[]
    deleteMany?: product_variantsScalarWhereInput | product_variantsScalarWhereInput[]
  }

  export type promotionsCreateNestedOneWithoutPromotion_variantsInput = {
    create?: XOR<promotionsCreateWithoutPromotion_variantsInput, promotionsUncheckedCreateWithoutPromotion_variantsInput>
    connectOrCreate?: promotionsCreateOrConnectWithoutPromotion_variantsInput
    connect?: promotionsWhereUniqueInput
  }

  export type product_variantsCreateNestedOneWithoutPromotion_variantsInput = {
    create?: XOR<product_variantsCreateWithoutPromotion_variantsInput, product_variantsUncheckedCreateWithoutPromotion_variantsInput>
    connectOrCreate?: product_variantsCreateOrConnectWithoutPromotion_variantsInput
    connect?: product_variantsWhereUniqueInput
  }

  export type promotionsUpdateOneRequiredWithoutPromotion_variantsNestedInput = {
    create?: XOR<promotionsCreateWithoutPromotion_variantsInput, promotionsUncheckedCreateWithoutPromotion_variantsInput>
    connectOrCreate?: promotionsCreateOrConnectWithoutPromotion_variantsInput
    upsert?: promotionsUpsertWithoutPromotion_variantsInput
    connect?: promotionsWhereUniqueInput
    update?: XOR<XOR<promotionsUpdateToOneWithWhereWithoutPromotion_variantsInput, promotionsUpdateWithoutPromotion_variantsInput>, promotionsUncheckedUpdateWithoutPromotion_variantsInput>
  }

  export type product_variantsUpdateOneRequiredWithoutPromotion_variantsNestedInput = {
    create?: XOR<product_variantsCreateWithoutPromotion_variantsInput, product_variantsUncheckedCreateWithoutPromotion_variantsInput>
    connectOrCreate?: product_variantsCreateOrConnectWithoutPromotion_variantsInput
    upsert?: product_variantsUpsertWithoutPromotion_variantsInput
    connect?: product_variantsWhereUniqueInput
    update?: XOR<XOR<product_variantsUpdateToOneWithWhereWithoutPromotion_variantsInput, product_variantsUpdateWithoutPromotion_variantsInput>, product_variantsUncheckedUpdateWithoutPromotion_variantsInput>
  }

  export type promotion_variantsCreateNestedManyWithoutPromotionsInput = {
    create?: XOR<promotion_variantsCreateWithoutPromotionsInput, promotion_variantsUncheckedCreateWithoutPromotionsInput> | promotion_variantsCreateWithoutPromotionsInput[] | promotion_variantsUncheckedCreateWithoutPromotionsInput[]
    connectOrCreate?: promotion_variantsCreateOrConnectWithoutPromotionsInput | promotion_variantsCreateOrConnectWithoutPromotionsInput[]
    createMany?: promotion_variantsCreateManyPromotionsInputEnvelope
    connect?: promotion_variantsWhereUniqueInput | promotion_variantsWhereUniqueInput[]
  }

  export type promotion_variantsUncheckedCreateNestedManyWithoutPromotionsInput = {
    create?: XOR<promotion_variantsCreateWithoutPromotionsInput, promotion_variantsUncheckedCreateWithoutPromotionsInput> | promotion_variantsCreateWithoutPromotionsInput[] | promotion_variantsUncheckedCreateWithoutPromotionsInput[]
    connectOrCreate?: promotion_variantsCreateOrConnectWithoutPromotionsInput | promotion_variantsCreateOrConnectWithoutPromotionsInput[]
    createMany?: promotion_variantsCreateManyPromotionsInputEnvelope
    connect?: promotion_variantsWhereUniqueInput | promotion_variantsWhereUniqueInput[]
  }

  export type Enumpromotions_discount_typeFieldUpdateOperationsInput = {
    set?: $Enums.promotions_discount_type
  }

  export type promotion_variantsUpdateManyWithoutPromotionsNestedInput = {
    create?: XOR<promotion_variantsCreateWithoutPromotionsInput, promotion_variantsUncheckedCreateWithoutPromotionsInput> | promotion_variantsCreateWithoutPromotionsInput[] | promotion_variantsUncheckedCreateWithoutPromotionsInput[]
    connectOrCreate?: promotion_variantsCreateOrConnectWithoutPromotionsInput | promotion_variantsCreateOrConnectWithoutPromotionsInput[]
    upsert?: promotion_variantsUpsertWithWhereUniqueWithoutPromotionsInput | promotion_variantsUpsertWithWhereUniqueWithoutPromotionsInput[]
    createMany?: promotion_variantsCreateManyPromotionsInputEnvelope
    set?: promotion_variantsWhereUniqueInput | promotion_variantsWhereUniqueInput[]
    disconnect?: promotion_variantsWhereUniqueInput | promotion_variantsWhereUniqueInput[]
    delete?: promotion_variantsWhereUniqueInput | promotion_variantsWhereUniqueInput[]
    connect?: promotion_variantsWhereUniqueInput | promotion_variantsWhereUniqueInput[]
    update?: promotion_variantsUpdateWithWhereUniqueWithoutPromotionsInput | promotion_variantsUpdateWithWhereUniqueWithoutPromotionsInput[]
    updateMany?: promotion_variantsUpdateManyWithWhereWithoutPromotionsInput | promotion_variantsUpdateManyWithWhereWithoutPromotionsInput[]
    deleteMany?: promotion_variantsScalarWhereInput | promotion_variantsScalarWhereInput[]
  }

  export type promotion_variantsUncheckedUpdateManyWithoutPromotionsNestedInput = {
    create?: XOR<promotion_variantsCreateWithoutPromotionsInput, promotion_variantsUncheckedCreateWithoutPromotionsInput> | promotion_variantsCreateWithoutPromotionsInput[] | promotion_variantsUncheckedCreateWithoutPromotionsInput[]
    connectOrCreate?: promotion_variantsCreateOrConnectWithoutPromotionsInput | promotion_variantsCreateOrConnectWithoutPromotionsInput[]
    upsert?: promotion_variantsUpsertWithWhereUniqueWithoutPromotionsInput | promotion_variantsUpsertWithWhereUniqueWithoutPromotionsInput[]
    createMany?: promotion_variantsCreateManyPromotionsInputEnvelope
    set?: promotion_variantsWhereUniqueInput | promotion_variantsWhereUniqueInput[]
    disconnect?: promotion_variantsWhereUniqueInput | promotion_variantsWhereUniqueInput[]
    delete?: promotion_variantsWhereUniqueInput | promotion_variantsWhereUniqueInput[]
    connect?: promotion_variantsWhereUniqueInput | promotion_variantsWhereUniqueInput[]
    update?: promotion_variantsUpdateWithWhereUniqueWithoutPromotionsInput | promotion_variantsUpdateWithWhereUniqueWithoutPromotionsInput[]
    updateMany?: promotion_variantsUpdateManyWithWhereWithoutPromotionsInput | promotion_variantsUpdateManyWithWhereWithoutPromotionsInput[]
    deleteMany?: promotion_variantsScalarWhereInput | promotion_variantsScalarWhereInput[]
  }

  export type variant_ratingsCreateNestedOneWithoutRating_imagesInput = {
    create?: XOR<variant_ratingsCreateWithoutRating_imagesInput, variant_ratingsUncheckedCreateWithoutRating_imagesInput>
    connectOrCreate?: variant_ratingsCreateOrConnectWithoutRating_imagesInput
    connect?: variant_ratingsWhereUniqueInput
  }

  export type variant_ratingsUpdateOneRequiredWithoutRating_imagesNestedInput = {
    create?: XOR<variant_ratingsCreateWithoutRating_imagesInput, variant_ratingsUncheckedCreateWithoutRating_imagesInput>
    connectOrCreate?: variant_ratingsCreateOrConnectWithoutRating_imagesInput
    upsert?: variant_ratingsUpsertWithoutRating_imagesInput
    connect?: variant_ratingsWhereUniqueInput
    update?: XOR<XOR<variant_ratingsUpdateToOneWithWhereWithoutRating_imagesInput, variant_ratingsUpdateWithoutRating_imagesInput>, variant_ratingsUncheckedUpdateWithoutRating_imagesInput>
  }

  export type roles_sectionsCreateNestedManyWithoutRolesInput = {
    create?: XOR<roles_sectionsCreateWithoutRolesInput, roles_sectionsUncheckedCreateWithoutRolesInput> | roles_sectionsCreateWithoutRolesInput[] | roles_sectionsUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: roles_sectionsCreateOrConnectWithoutRolesInput | roles_sectionsCreateOrConnectWithoutRolesInput[]
    createMany?: roles_sectionsCreateManyRolesInputEnvelope
    connect?: roles_sectionsWhereUniqueInput | roles_sectionsWhereUniqueInput[]
  }

  export type usersCreateNestedManyWithoutRolesInput = {
    create?: XOR<usersCreateWithoutRolesInput, usersUncheckedCreateWithoutRolesInput> | usersCreateWithoutRolesInput[] | usersUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: usersCreateOrConnectWithoutRolesInput | usersCreateOrConnectWithoutRolesInput[]
    createMany?: usersCreateManyRolesInputEnvelope
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
  }

  export type roles_sectionsUncheckedCreateNestedManyWithoutRolesInput = {
    create?: XOR<roles_sectionsCreateWithoutRolesInput, roles_sectionsUncheckedCreateWithoutRolesInput> | roles_sectionsCreateWithoutRolesInput[] | roles_sectionsUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: roles_sectionsCreateOrConnectWithoutRolesInput | roles_sectionsCreateOrConnectWithoutRolesInput[]
    createMany?: roles_sectionsCreateManyRolesInputEnvelope
    connect?: roles_sectionsWhereUniqueInput | roles_sectionsWhereUniqueInput[]
  }

  export type usersUncheckedCreateNestedManyWithoutRolesInput = {
    create?: XOR<usersCreateWithoutRolesInput, usersUncheckedCreateWithoutRolesInput> | usersCreateWithoutRolesInput[] | usersUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: usersCreateOrConnectWithoutRolesInput | usersCreateOrConnectWithoutRolesInput[]
    createMany?: usersCreateManyRolesInputEnvelope
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
  }

  export type roles_sectionsUpdateManyWithoutRolesNestedInput = {
    create?: XOR<roles_sectionsCreateWithoutRolesInput, roles_sectionsUncheckedCreateWithoutRolesInput> | roles_sectionsCreateWithoutRolesInput[] | roles_sectionsUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: roles_sectionsCreateOrConnectWithoutRolesInput | roles_sectionsCreateOrConnectWithoutRolesInput[]
    upsert?: roles_sectionsUpsertWithWhereUniqueWithoutRolesInput | roles_sectionsUpsertWithWhereUniqueWithoutRolesInput[]
    createMany?: roles_sectionsCreateManyRolesInputEnvelope
    set?: roles_sectionsWhereUniqueInput | roles_sectionsWhereUniqueInput[]
    disconnect?: roles_sectionsWhereUniqueInput | roles_sectionsWhereUniqueInput[]
    delete?: roles_sectionsWhereUniqueInput | roles_sectionsWhereUniqueInput[]
    connect?: roles_sectionsWhereUniqueInput | roles_sectionsWhereUniqueInput[]
    update?: roles_sectionsUpdateWithWhereUniqueWithoutRolesInput | roles_sectionsUpdateWithWhereUniqueWithoutRolesInput[]
    updateMany?: roles_sectionsUpdateManyWithWhereWithoutRolesInput | roles_sectionsUpdateManyWithWhereWithoutRolesInput[]
    deleteMany?: roles_sectionsScalarWhereInput | roles_sectionsScalarWhereInput[]
  }

  export type usersUpdateManyWithoutRolesNestedInput = {
    create?: XOR<usersCreateWithoutRolesInput, usersUncheckedCreateWithoutRolesInput> | usersCreateWithoutRolesInput[] | usersUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: usersCreateOrConnectWithoutRolesInput | usersCreateOrConnectWithoutRolesInput[]
    upsert?: usersUpsertWithWhereUniqueWithoutRolesInput | usersUpsertWithWhereUniqueWithoutRolesInput[]
    createMany?: usersCreateManyRolesInputEnvelope
    set?: usersWhereUniqueInput | usersWhereUniqueInput[]
    disconnect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    delete?: usersWhereUniqueInput | usersWhereUniqueInput[]
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    update?: usersUpdateWithWhereUniqueWithoutRolesInput | usersUpdateWithWhereUniqueWithoutRolesInput[]
    updateMany?: usersUpdateManyWithWhereWithoutRolesInput | usersUpdateManyWithWhereWithoutRolesInput[]
    deleteMany?: usersScalarWhereInput | usersScalarWhereInput[]
  }

  export type roles_sectionsUncheckedUpdateManyWithoutRolesNestedInput = {
    create?: XOR<roles_sectionsCreateWithoutRolesInput, roles_sectionsUncheckedCreateWithoutRolesInput> | roles_sectionsCreateWithoutRolesInput[] | roles_sectionsUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: roles_sectionsCreateOrConnectWithoutRolesInput | roles_sectionsCreateOrConnectWithoutRolesInput[]
    upsert?: roles_sectionsUpsertWithWhereUniqueWithoutRolesInput | roles_sectionsUpsertWithWhereUniqueWithoutRolesInput[]
    createMany?: roles_sectionsCreateManyRolesInputEnvelope
    set?: roles_sectionsWhereUniqueInput | roles_sectionsWhereUniqueInput[]
    disconnect?: roles_sectionsWhereUniqueInput | roles_sectionsWhereUniqueInput[]
    delete?: roles_sectionsWhereUniqueInput | roles_sectionsWhereUniqueInput[]
    connect?: roles_sectionsWhereUniqueInput | roles_sectionsWhereUniqueInput[]
    update?: roles_sectionsUpdateWithWhereUniqueWithoutRolesInput | roles_sectionsUpdateWithWhereUniqueWithoutRolesInput[]
    updateMany?: roles_sectionsUpdateManyWithWhereWithoutRolesInput | roles_sectionsUpdateManyWithWhereWithoutRolesInput[]
    deleteMany?: roles_sectionsScalarWhereInput | roles_sectionsScalarWhereInput[]
  }

  export type usersUncheckedUpdateManyWithoutRolesNestedInput = {
    create?: XOR<usersCreateWithoutRolesInput, usersUncheckedCreateWithoutRolesInput> | usersCreateWithoutRolesInput[] | usersUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: usersCreateOrConnectWithoutRolesInput | usersCreateOrConnectWithoutRolesInput[]
    upsert?: usersUpsertWithWhereUniqueWithoutRolesInput | usersUpsertWithWhereUniqueWithoutRolesInput[]
    createMany?: usersCreateManyRolesInputEnvelope
    set?: usersWhereUniqueInput | usersWhereUniqueInput[]
    disconnect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    delete?: usersWhereUniqueInput | usersWhereUniqueInput[]
    connect?: usersWhereUniqueInput | usersWhereUniqueInput[]
    update?: usersUpdateWithWhereUniqueWithoutRolesInput | usersUpdateWithWhereUniqueWithoutRolesInput[]
    updateMany?: usersUpdateManyWithWhereWithoutRolesInput | usersUpdateManyWithWhereWithoutRolesInput[]
    deleteMany?: usersScalarWhereInput | usersScalarWhereInput[]
  }

  export type sectionsCreateNestedOneWithoutRoles_sectionsInput = {
    create?: XOR<sectionsCreateWithoutRoles_sectionsInput, sectionsUncheckedCreateWithoutRoles_sectionsInput>
    connectOrCreate?: sectionsCreateOrConnectWithoutRoles_sectionsInput
    connect?: sectionsWhereUniqueInput
  }

  export type rolesCreateNestedOneWithoutRoles_sectionsInput = {
    create?: XOR<rolesCreateWithoutRoles_sectionsInput, rolesUncheckedCreateWithoutRoles_sectionsInput>
    connectOrCreate?: rolesCreateOrConnectWithoutRoles_sectionsInput
    connect?: rolesWhereUniqueInput
  }

  export type sectionsUpdateOneWithoutRoles_sectionsNestedInput = {
    create?: XOR<sectionsCreateWithoutRoles_sectionsInput, sectionsUncheckedCreateWithoutRoles_sectionsInput>
    connectOrCreate?: sectionsCreateOrConnectWithoutRoles_sectionsInput
    upsert?: sectionsUpsertWithoutRoles_sectionsInput
    disconnect?: sectionsWhereInput | boolean
    delete?: sectionsWhereInput | boolean
    connect?: sectionsWhereUniqueInput
    update?: XOR<XOR<sectionsUpdateToOneWithWhereWithoutRoles_sectionsInput, sectionsUpdateWithoutRoles_sectionsInput>, sectionsUncheckedUpdateWithoutRoles_sectionsInput>
  }

  export type rolesUpdateOneWithoutRoles_sectionsNestedInput = {
    create?: XOR<rolesCreateWithoutRoles_sectionsInput, rolesUncheckedCreateWithoutRoles_sectionsInput>
    connectOrCreate?: rolesCreateOrConnectWithoutRoles_sectionsInput
    upsert?: rolesUpsertWithoutRoles_sectionsInput
    disconnect?: rolesWhereInput | boolean
    delete?: rolesWhereInput | boolean
    connect?: rolesWhereUniqueInput
    update?: XOR<XOR<rolesUpdateToOneWithWhereWithoutRoles_sectionsInput, rolesUpdateWithoutRoles_sectionsInput>, rolesUncheckedUpdateWithoutRoles_sectionsInput>
  }

  export type roles_sectionsCreateNestedManyWithoutSectionsInput = {
    create?: XOR<roles_sectionsCreateWithoutSectionsInput, roles_sectionsUncheckedCreateWithoutSectionsInput> | roles_sectionsCreateWithoutSectionsInput[] | roles_sectionsUncheckedCreateWithoutSectionsInput[]
    connectOrCreate?: roles_sectionsCreateOrConnectWithoutSectionsInput | roles_sectionsCreateOrConnectWithoutSectionsInput[]
    createMany?: roles_sectionsCreateManySectionsInputEnvelope
    connect?: roles_sectionsWhereUniqueInput | roles_sectionsWhereUniqueInput[]
  }

  export type roles_sectionsUncheckedCreateNestedManyWithoutSectionsInput = {
    create?: XOR<roles_sectionsCreateWithoutSectionsInput, roles_sectionsUncheckedCreateWithoutSectionsInput> | roles_sectionsCreateWithoutSectionsInput[] | roles_sectionsUncheckedCreateWithoutSectionsInput[]
    connectOrCreate?: roles_sectionsCreateOrConnectWithoutSectionsInput | roles_sectionsCreateOrConnectWithoutSectionsInput[]
    createMany?: roles_sectionsCreateManySectionsInputEnvelope
    connect?: roles_sectionsWhereUniqueInput | roles_sectionsWhereUniqueInput[]
  }

  export type roles_sectionsUpdateManyWithoutSectionsNestedInput = {
    create?: XOR<roles_sectionsCreateWithoutSectionsInput, roles_sectionsUncheckedCreateWithoutSectionsInput> | roles_sectionsCreateWithoutSectionsInput[] | roles_sectionsUncheckedCreateWithoutSectionsInput[]
    connectOrCreate?: roles_sectionsCreateOrConnectWithoutSectionsInput | roles_sectionsCreateOrConnectWithoutSectionsInput[]
    upsert?: roles_sectionsUpsertWithWhereUniqueWithoutSectionsInput | roles_sectionsUpsertWithWhereUniqueWithoutSectionsInput[]
    createMany?: roles_sectionsCreateManySectionsInputEnvelope
    set?: roles_sectionsWhereUniqueInput | roles_sectionsWhereUniqueInput[]
    disconnect?: roles_sectionsWhereUniqueInput | roles_sectionsWhereUniqueInput[]
    delete?: roles_sectionsWhereUniqueInput | roles_sectionsWhereUniqueInput[]
    connect?: roles_sectionsWhereUniqueInput | roles_sectionsWhereUniqueInput[]
    update?: roles_sectionsUpdateWithWhereUniqueWithoutSectionsInput | roles_sectionsUpdateWithWhereUniqueWithoutSectionsInput[]
    updateMany?: roles_sectionsUpdateManyWithWhereWithoutSectionsInput | roles_sectionsUpdateManyWithWhereWithoutSectionsInput[]
    deleteMany?: roles_sectionsScalarWhereInput | roles_sectionsScalarWhereInput[]
  }

  export type roles_sectionsUncheckedUpdateManyWithoutSectionsNestedInput = {
    create?: XOR<roles_sectionsCreateWithoutSectionsInput, roles_sectionsUncheckedCreateWithoutSectionsInput> | roles_sectionsCreateWithoutSectionsInput[] | roles_sectionsUncheckedCreateWithoutSectionsInput[]
    connectOrCreate?: roles_sectionsCreateOrConnectWithoutSectionsInput | roles_sectionsCreateOrConnectWithoutSectionsInput[]
    upsert?: roles_sectionsUpsertWithWhereUniqueWithoutSectionsInput | roles_sectionsUpsertWithWhereUniqueWithoutSectionsInput[]
    createMany?: roles_sectionsCreateManySectionsInputEnvelope
    set?: roles_sectionsWhereUniqueInput | roles_sectionsWhereUniqueInput[]
    disconnect?: roles_sectionsWhereUniqueInput | roles_sectionsWhereUniqueInput[]
    delete?: roles_sectionsWhereUniqueInput | roles_sectionsWhereUniqueInput[]
    connect?: roles_sectionsWhereUniqueInput | roles_sectionsWhereUniqueInput[]
    update?: roles_sectionsUpdateWithWhereUniqueWithoutSectionsInput | roles_sectionsUpdateWithWhereUniqueWithoutSectionsInput[]
    updateMany?: roles_sectionsUpdateManyWithWhereWithoutSectionsInput | roles_sectionsUpdateManyWithWhereWithoutSectionsInput[]
    deleteMany?: roles_sectionsScalarWhereInput | roles_sectionsScalarWhereInput[]
  }

  export type services_imagesCreateNestedManyWithoutServicesInput = {
    create?: XOR<services_imagesCreateWithoutServicesInput, services_imagesUncheckedCreateWithoutServicesInput> | services_imagesCreateWithoutServicesInput[] | services_imagesUncheckedCreateWithoutServicesInput[]
    connectOrCreate?: services_imagesCreateOrConnectWithoutServicesInput | services_imagesCreateOrConnectWithoutServicesInput[]
    createMany?: services_imagesCreateManyServicesInputEnvelope
    connect?: services_imagesWhereUniqueInput | services_imagesWhereUniqueInput[]
  }

  export type services_imagesUncheckedCreateNestedManyWithoutServicesInput = {
    create?: XOR<services_imagesCreateWithoutServicesInput, services_imagesUncheckedCreateWithoutServicesInput> | services_imagesCreateWithoutServicesInput[] | services_imagesUncheckedCreateWithoutServicesInput[]
    connectOrCreate?: services_imagesCreateOrConnectWithoutServicesInput | services_imagesCreateOrConnectWithoutServicesInput[]
    createMany?: services_imagesCreateManyServicesInputEnvelope
    connect?: services_imagesWhereUniqueInput | services_imagesWhereUniqueInput[]
  }

  export type services_imagesUpdateManyWithoutServicesNestedInput = {
    create?: XOR<services_imagesCreateWithoutServicesInput, services_imagesUncheckedCreateWithoutServicesInput> | services_imagesCreateWithoutServicesInput[] | services_imagesUncheckedCreateWithoutServicesInput[]
    connectOrCreate?: services_imagesCreateOrConnectWithoutServicesInput | services_imagesCreateOrConnectWithoutServicesInput[]
    upsert?: services_imagesUpsertWithWhereUniqueWithoutServicesInput | services_imagesUpsertWithWhereUniqueWithoutServicesInput[]
    createMany?: services_imagesCreateManyServicesInputEnvelope
    set?: services_imagesWhereUniqueInput | services_imagesWhereUniqueInput[]
    disconnect?: services_imagesWhereUniqueInput | services_imagesWhereUniqueInput[]
    delete?: services_imagesWhereUniqueInput | services_imagesWhereUniqueInput[]
    connect?: services_imagesWhereUniqueInput | services_imagesWhereUniqueInput[]
    update?: services_imagesUpdateWithWhereUniqueWithoutServicesInput | services_imagesUpdateWithWhereUniqueWithoutServicesInput[]
    updateMany?: services_imagesUpdateManyWithWhereWithoutServicesInput | services_imagesUpdateManyWithWhereWithoutServicesInput[]
    deleteMany?: services_imagesScalarWhereInput | services_imagesScalarWhereInput[]
  }

  export type services_imagesUncheckedUpdateManyWithoutServicesNestedInput = {
    create?: XOR<services_imagesCreateWithoutServicesInput, services_imagesUncheckedCreateWithoutServicesInput> | services_imagesCreateWithoutServicesInput[] | services_imagesUncheckedCreateWithoutServicesInput[]
    connectOrCreate?: services_imagesCreateOrConnectWithoutServicesInput | services_imagesCreateOrConnectWithoutServicesInput[]
    upsert?: services_imagesUpsertWithWhereUniqueWithoutServicesInput | services_imagesUpsertWithWhereUniqueWithoutServicesInput[]
    createMany?: services_imagesCreateManyServicesInputEnvelope
    set?: services_imagesWhereUniqueInput | services_imagesWhereUniqueInput[]
    disconnect?: services_imagesWhereUniqueInput | services_imagesWhereUniqueInput[]
    delete?: services_imagesWhereUniqueInput | services_imagesWhereUniqueInput[]
    connect?: services_imagesWhereUniqueInput | services_imagesWhereUniqueInput[]
    update?: services_imagesUpdateWithWhereUniqueWithoutServicesInput | services_imagesUpdateWithWhereUniqueWithoutServicesInput[]
    updateMany?: services_imagesUpdateManyWithWhereWithoutServicesInput | services_imagesUpdateManyWithWhereWithoutServicesInput[]
    deleteMany?: services_imagesScalarWhereInput | services_imagesScalarWhereInput[]
  }

  export type servicesCreateNestedOneWithoutServices_imagesInput = {
    create?: XOR<servicesCreateWithoutServices_imagesInput, servicesUncheckedCreateWithoutServices_imagesInput>
    connectOrCreate?: servicesCreateOrConnectWithoutServices_imagesInput
    connect?: servicesWhereUniqueInput
  }

  export type servicesUpdateOneWithoutServices_imagesNestedInput = {
    create?: XOR<servicesCreateWithoutServices_imagesInput, servicesUncheckedCreateWithoutServices_imagesInput>
    connectOrCreate?: servicesCreateOrConnectWithoutServices_imagesInput
    upsert?: servicesUpsertWithoutServices_imagesInput
    disconnect?: servicesWhereInput | boolean
    delete?: servicesWhereInput | boolean
    connect?: servicesWhereUniqueInput
    update?: XOR<XOR<servicesUpdateToOneWithWhereWithoutServices_imagesInput, servicesUpdateWithoutServices_imagesInput>, servicesUncheckedUpdateWithoutServices_imagesInput>
  }

  export type rolesCreateNestedOneWithoutUsersInput = {
    create?: XOR<rolesCreateWithoutUsersInput, rolesUncheckedCreateWithoutUsersInput>
    connectOrCreate?: rolesCreateOrConnectWithoutUsersInput
    connect?: rolesWhereUniqueInput
  }

  export type rolesUpdateOneRequiredWithoutUsersNestedInput = {
    create?: XOR<rolesCreateWithoutUsersInput, rolesUncheckedCreateWithoutUsersInput>
    connectOrCreate?: rolesCreateOrConnectWithoutUsersInput
    upsert?: rolesUpsertWithoutUsersInput
    connect?: rolesWhereUniqueInput
    update?: XOR<XOR<rolesUpdateToOneWithWhereWithoutUsersInput, rolesUpdateWithoutUsersInput>, rolesUncheckedUpdateWithoutUsersInput>
  }

  export type attribute_optionsCreateNestedOneWithoutVariant_attribute_optionsInput = {
    create?: XOR<attribute_optionsCreateWithoutVariant_attribute_optionsInput, attribute_optionsUncheckedCreateWithoutVariant_attribute_optionsInput>
    connectOrCreate?: attribute_optionsCreateOrConnectWithoutVariant_attribute_optionsInput
    connect?: attribute_optionsWhereUniqueInput
  }

  export type product_variantsCreateNestedOneWithoutVariant_attribute_optionsInput = {
    create?: XOR<product_variantsCreateWithoutVariant_attribute_optionsInput, product_variantsUncheckedCreateWithoutVariant_attribute_optionsInput>
    connectOrCreate?: product_variantsCreateOrConnectWithoutVariant_attribute_optionsInput
    connect?: product_variantsWhereUniqueInput
  }

  export type attribute_optionsUpdateOneRequiredWithoutVariant_attribute_optionsNestedInput = {
    create?: XOR<attribute_optionsCreateWithoutVariant_attribute_optionsInput, attribute_optionsUncheckedCreateWithoutVariant_attribute_optionsInput>
    connectOrCreate?: attribute_optionsCreateOrConnectWithoutVariant_attribute_optionsInput
    upsert?: attribute_optionsUpsertWithoutVariant_attribute_optionsInput
    connect?: attribute_optionsWhereUniqueInput
    update?: XOR<XOR<attribute_optionsUpdateToOneWithWhereWithoutVariant_attribute_optionsInput, attribute_optionsUpdateWithoutVariant_attribute_optionsInput>, attribute_optionsUncheckedUpdateWithoutVariant_attribute_optionsInput>
  }

  export type product_variantsUpdateOneRequiredWithoutVariant_attribute_optionsNestedInput = {
    create?: XOR<product_variantsCreateWithoutVariant_attribute_optionsInput, product_variantsUncheckedCreateWithoutVariant_attribute_optionsInput>
    connectOrCreate?: product_variantsCreateOrConnectWithoutVariant_attribute_optionsInput
    upsert?: product_variantsUpsertWithoutVariant_attribute_optionsInput
    connect?: product_variantsWhereUniqueInput
    update?: XOR<XOR<product_variantsUpdateToOneWithWhereWithoutVariant_attribute_optionsInput, product_variantsUpdateWithoutVariant_attribute_optionsInput>, product_variantsUncheckedUpdateWithoutVariant_attribute_optionsInput>
  }

  export type product_variantsCreateNestedOneWithoutVariant_imagesInput = {
    create?: XOR<product_variantsCreateWithoutVariant_imagesInput, product_variantsUncheckedCreateWithoutVariant_imagesInput>
    connectOrCreate?: product_variantsCreateOrConnectWithoutVariant_imagesInput
    connect?: product_variantsWhereUniqueInput
  }

  export type Enumvariant_images_image_typeFieldUpdateOperationsInput = {
    set?: $Enums.variant_images_image_type
  }

  export type product_variantsUpdateOneRequiredWithoutVariant_imagesNestedInput = {
    create?: XOR<product_variantsCreateWithoutVariant_imagesInput, product_variantsUncheckedCreateWithoutVariant_imagesInput>
    connectOrCreate?: product_variantsCreateOrConnectWithoutVariant_imagesInput
    upsert?: product_variantsUpsertWithoutVariant_imagesInput
    connect?: product_variantsWhereUniqueInput
    update?: XOR<XOR<product_variantsUpdateToOneWithWhereWithoutVariant_imagesInput, product_variantsUpdateWithoutVariant_imagesInput>, product_variantsUncheckedUpdateWithoutVariant_imagesInput>
  }

  export type rating_imagesCreateNestedManyWithoutVariant_ratingsInput = {
    create?: XOR<rating_imagesCreateWithoutVariant_ratingsInput, rating_imagesUncheckedCreateWithoutVariant_ratingsInput> | rating_imagesCreateWithoutVariant_ratingsInput[] | rating_imagesUncheckedCreateWithoutVariant_ratingsInput[]
    connectOrCreate?: rating_imagesCreateOrConnectWithoutVariant_ratingsInput | rating_imagesCreateOrConnectWithoutVariant_ratingsInput[]
    createMany?: rating_imagesCreateManyVariant_ratingsInputEnvelope
    connect?: rating_imagesWhereUniqueInput | rating_imagesWhereUniqueInput[]
  }

  export type customersCreateNestedOneWithoutVariant_ratingsInput = {
    create?: XOR<customersCreateWithoutVariant_ratingsInput, customersUncheckedCreateWithoutVariant_ratingsInput>
    connectOrCreate?: customersCreateOrConnectWithoutVariant_ratingsInput
    connect?: customersWhereUniqueInput
  }

  export type product_variantsCreateNestedOneWithoutVariant_ratingsInput = {
    create?: XOR<product_variantsCreateWithoutVariant_ratingsInput, product_variantsUncheckedCreateWithoutVariant_ratingsInput>
    connectOrCreate?: product_variantsCreateOrConnectWithoutVariant_ratingsInput
    connect?: product_variantsWhereUniqueInput
  }

  export type rating_imagesUncheckedCreateNestedManyWithoutVariant_ratingsInput = {
    create?: XOR<rating_imagesCreateWithoutVariant_ratingsInput, rating_imagesUncheckedCreateWithoutVariant_ratingsInput> | rating_imagesCreateWithoutVariant_ratingsInput[] | rating_imagesUncheckedCreateWithoutVariant_ratingsInput[]
    connectOrCreate?: rating_imagesCreateOrConnectWithoutVariant_ratingsInput | rating_imagesCreateOrConnectWithoutVariant_ratingsInput[]
    createMany?: rating_imagesCreateManyVariant_ratingsInputEnvelope
    connect?: rating_imagesWhereUniqueInput | rating_imagesWhereUniqueInput[]
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type rating_imagesUpdateManyWithoutVariant_ratingsNestedInput = {
    create?: XOR<rating_imagesCreateWithoutVariant_ratingsInput, rating_imagesUncheckedCreateWithoutVariant_ratingsInput> | rating_imagesCreateWithoutVariant_ratingsInput[] | rating_imagesUncheckedCreateWithoutVariant_ratingsInput[]
    connectOrCreate?: rating_imagesCreateOrConnectWithoutVariant_ratingsInput | rating_imagesCreateOrConnectWithoutVariant_ratingsInput[]
    upsert?: rating_imagesUpsertWithWhereUniqueWithoutVariant_ratingsInput | rating_imagesUpsertWithWhereUniqueWithoutVariant_ratingsInput[]
    createMany?: rating_imagesCreateManyVariant_ratingsInputEnvelope
    set?: rating_imagesWhereUniqueInput | rating_imagesWhereUniqueInput[]
    disconnect?: rating_imagesWhereUniqueInput | rating_imagesWhereUniqueInput[]
    delete?: rating_imagesWhereUniqueInput | rating_imagesWhereUniqueInput[]
    connect?: rating_imagesWhereUniqueInput | rating_imagesWhereUniqueInput[]
    update?: rating_imagesUpdateWithWhereUniqueWithoutVariant_ratingsInput | rating_imagesUpdateWithWhereUniqueWithoutVariant_ratingsInput[]
    updateMany?: rating_imagesUpdateManyWithWhereWithoutVariant_ratingsInput | rating_imagesUpdateManyWithWhereWithoutVariant_ratingsInput[]
    deleteMany?: rating_imagesScalarWhereInput | rating_imagesScalarWhereInput[]
  }

  export type customersUpdateOneRequiredWithoutVariant_ratingsNestedInput = {
    create?: XOR<customersCreateWithoutVariant_ratingsInput, customersUncheckedCreateWithoutVariant_ratingsInput>
    connectOrCreate?: customersCreateOrConnectWithoutVariant_ratingsInput
    upsert?: customersUpsertWithoutVariant_ratingsInput
    connect?: customersWhereUniqueInput
    update?: XOR<XOR<customersUpdateToOneWithWhereWithoutVariant_ratingsInput, customersUpdateWithoutVariant_ratingsInput>, customersUncheckedUpdateWithoutVariant_ratingsInput>
  }

  export type product_variantsUpdateOneRequiredWithoutVariant_ratingsNestedInput = {
    create?: XOR<product_variantsCreateWithoutVariant_ratingsInput, product_variantsUncheckedCreateWithoutVariant_ratingsInput>
    connectOrCreate?: product_variantsCreateOrConnectWithoutVariant_ratingsInput
    upsert?: product_variantsUpsertWithoutVariant_ratingsInput
    connect?: product_variantsWhereUniqueInput
    update?: XOR<XOR<product_variantsUpdateToOneWithWhereWithoutVariant_ratingsInput, product_variantsUpdateWithoutVariant_ratingsInput>, product_variantsUncheckedUpdateWithoutVariant_ratingsInput>
  }

  export type rating_imagesUncheckedUpdateManyWithoutVariant_ratingsNestedInput = {
    create?: XOR<rating_imagesCreateWithoutVariant_ratingsInput, rating_imagesUncheckedCreateWithoutVariant_ratingsInput> | rating_imagesCreateWithoutVariant_ratingsInput[] | rating_imagesUncheckedCreateWithoutVariant_ratingsInput[]
    connectOrCreate?: rating_imagesCreateOrConnectWithoutVariant_ratingsInput | rating_imagesCreateOrConnectWithoutVariant_ratingsInput[]
    upsert?: rating_imagesUpsertWithWhereUniqueWithoutVariant_ratingsInput | rating_imagesUpsertWithWhereUniqueWithoutVariant_ratingsInput[]
    createMany?: rating_imagesCreateManyVariant_ratingsInputEnvelope
    set?: rating_imagesWhereUniqueInput | rating_imagesWhereUniqueInput[]
    disconnect?: rating_imagesWhereUniqueInput | rating_imagesWhereUniqueInput[]
    delete?: rating_imagesWhereUniqueInput | rating_imagesWhereUniqueInput[]
    connect?: rating_imagesWhereUniqueInput | rating_imagesWhereUniqueInput[]
    update?: rating_imagesUpdateWithWhereUniqueWithoutVariant_ratingsInput | rating_imagesUpdateWithWhereUniqueWithoutVariant_ratingsInput[]
    updateMany?: rating_imagesUpdateManyWithWhereWithoutVariant_ratingsInput | rating_imagesUpdateManyWithWhereWithoutVariant_ratingsInput[]
    deleteMany?: rating_imagesScalarWhereInput | rating_imagesScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedEnumattribute_option_images_image_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.attribute_option_images_image_type | Enumattribute_option_images_image_typeFieldRefInput<$PrismaModel>
    in?: $Enums.attribute_option_images_image_type[]
    notIn?: $Enums.attribute_option_images_image_type[]
    not?: NestedEnumattribute_option_images_image_typeFilter<$PrismaModel> | $Enums.attribute_option_images_image_type
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedEnumattribute_option_images_image_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.attribute_option_images_image_type | Enumattribute_option_images_image_typeFieldRefInput<$PrismaModel>
    in?: $Enums.attribute_option_images_image_type[]
    notIn?: $Enums.attribute_option_images_image_type[]
    not?: NestedEnumattribute_option_images_image_typeWithAggregatesFilter<$PrismaModel> | $Enums.attribute_option_images_image_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumattribute_option_images_image_typeFilter<$PrismaModel>
    _max?: NestedEnumattribute_option_images_image_typeFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedEnumattributes_display_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.attributes_display_type | Enumattributes_display_typeFieldRefInput<$PrismaModel>
    in?: $Enums.attributes_display_type[]
    notIn?: $Enums.attributes_display_type[]
    not?: NestedEnumattributes_display_typeFilter<$PrismaModel> | $Enums.attributes_display_type
  }

  export type NestedEnumattributes_display_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.attributes_display_type | Enumattributes_display_typeFieldRefInput<$PrismaModel>
    in?: $Enums.attributes_display_type[]
    notIn?: $Enums.attributes_display_type[]
    not?: NestedEnumattributes_display_typeWithAggregatesFilter<$PrismaModel> | $Enums.attributes_display_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumattributes_display_typeFilter<$PrismaModel>
    _max?: NestedEnumattributes_display_typeFilter<$PrismaModel>
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedEnumpromotions_discount_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.promotions_discount_type | Enumpromotions_discount_typeFieldRefInput<$PrismaModel>
    in?: $Enums.promotions_discount_type[]
    notIn?: $Enums.promotions_discount_type[]
    not?: NestedEnumpromotions_discount_typeFilter<$PrismaModel> | $Enums.promotions_discount_type
  }

  export type NestedEnumpromotions_discount_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.promotions_discount_type | Enumpromotions_discount_typeFieldRefInput<$PrismaModel>
    in?: $Enums.promotions_discount_type[]
    notIn?: $Enums.promotions_discount_type[]
    not?: NestedEnumpromotions_discount_typeWithAggregatesFilter<$PrismaModel> | $Enums.promotions_discount_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumpromotions_discount_typeFilter<$PrismaModel>
    _max?: NestedEnumpromotions_discount_typeFilter<$PrismaModel>
  }

  export type NestedEnumvariant_images_image_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.variant_images_image_type | Enumvariant_images_image_typeFieldRefInput<$PrismaModel>
    in?: $Enums.variant_images_image_type[]
    notIn?: $Enums.variant_images_image_type[]
    not?: NestedEnumvariant_images_image_typeFilter<$PrismaModel> | $Enums.variant_images_image_type
  }

  export type NestedEnumvariant_images_image_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.variant_images_image_type | Enumvariant_images_image_typeFieldRefInput<$PrismaModel>
    in?: $Enums.variant_images_image_type[]
    notIn?: $Enums.variant_images_image_type[]
    not?: NestedEnumvariant_images_image_typeWithAggregatesFilter<$PrismaModel> | $Enums.variant_images_image_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumvariant_images_image_typeFilter<$PrismaModel>
    _max?: NestedEnumvariant_images_image_typeFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type attribute_optionsCreateWithoutAttribute_option_imagesInput = {
    attribute_id: number
    value: string
    additional_cost?: Decimal | DecimalJsLike | number | string | null
    variant_attribute_options?: variant_attribute_optionsCreateNestedManyWithoutAttribute_optionsInput
  }

  export type attribute_optionsUncheckedCreateWithoutAttribute_option_imagesInput = {
    id?: number
    attribute_id: number
    value: string
    additional_cost?: Decimal | DecimalJsLike | number | string | null
    variant_attribute_options?: variant_attribute_optionsUncheckedCreateNestedManyWithoutAttribute_optionsInput
  }

  export type attribute_optionsCreateOrConnectWithoutAttribute_option_imagesInput = {
    where: attribute_optionsWhereUniqueInput
    create: XOR<attribute_optionsCreateWithoutAttribute_option_imagesInput, attribute_optionsUncheckedCreateWithoutAttribute_option_imagesInput>
  }

  export type attribute_optionsUpsertWithoutAttribute_option_imagesInput = {
    update: XOR<attribute_optionsUpdateWithoutAttribute_option_imagesInput, attribute_optionsUncheckedUpdateWithoutAttribute_option_imagesInput>
    create: XOR<attribute_optionsCreateWithoutAttribute_option_imagesInput, attribute_optionsUncheckedCreateWithoutAttribute_option_imagesInput>
    where?: attribute_optionsWhereInput
  }

  export type attribute_optionsUpdateToOneWithWhereWithoutAttribute_option_imagesInput = {
    where?: attribute_optionsWhereInput
    data: XOR<attribute_optionsUpdateWithoutAttribute_option_imagesInput, attribute_optionsUncheckedUpdateWithoutAttribute_option_imagesInput>
  }

  export type attribute_optionsUpdateWithoutAttribute_option_imagesInput = {
    attribute_id?: IntFieldUpdateOperationsInput | number
    value?: StringFieldUpdateOperationsInput | string
    additional_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    variant_attribute_options?: variant_attribute_optionsUpdateManyWithoutAttribute_optionsNestedInput
  }

  export type attribute_optionsUncheckedUpdateWithoutAttribute_option_imagesInput = {
    id?: IntFieldUpdateOperationsInput | number
    attribute_id?: IntFieldUpdateOperationsInput | number
    value?: StringFieldUpdateOperationsInput | string
    additional_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    variant_attribute_options?: variant_attribute_optionsUncheckedUpdateManyWithoutAttribute_optionsNestedInput
  }

  export type attribute_option_imagesCreateWithoutAttribute_optionsInput = {
    image_type?: $Enums.attribute_option_images_image_type
    display_order?: number | null
    image_url_thumb: string
    image_url_normal?: string | null
    image_url_zoom?: string | null
    alt_text?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type attribute_option_imagesUncheckedCreateWithoutAttribute_optionsInput = {
    id?: number
    image_type?: $Enums.attribute_option_images_image_type
    display_order?: number | null
    image_url_thumb: string
    image_url_normal?: string | null
    image_url_zoom?: string | null
    alt_text?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type attribute_option_imagesCreateOrConnectWithoutAttribute_optionsInput = {
    where: attribute_option_imagesWhereUniqueInput
    create: XOR<attribute_option_imagesCreateWithoutAttribute_optionsInput, attribute_option_imagesUncheckedCreateWithoutAttribute_optionsInput>
  }

  export type attribute_option_imagesCreateManyAttribute_optionsInputEnvelope = {
    data: attribute_option_imagesCreateManyAttribute_optionsInput | attribute_option_imagesCreateManyAttribute_optionsInput[]
    skipDuplicates?: boolean
  }

  export type variant_attribute_optionsCreateWithoutAttribute_optionsInput = {
    product_variants: product_variantsCreateNestedOneWithoutVariant_attribute_optionsInput
  }

  export type variant_attribute_optionsUncheckedCreateWithoutAttribute_optionsInput = {
    variant_id: number
  }

  export type variant_attribute_optionsCreateOrConnectWithoutAttribute_optionsInput = {
    where: variant_attribute_optionsWhereUniqueInput
    create: XOR<variant_attribute_optionsCreateWithoutAttribute_optionsInput, variant_attribute_optionsUncheckedCreateWithoutAttribute_optionsInput>
  }

  export type variant_attribute_optionsCreateManyAttribute_optionsInputEnvelope = {
    data: variant_attribute_optionsCreateManyAttribute_optionsInput | variant_attribute_optionsCreateManyAttribute_optionsInput[]
    skipDuplicates?: boolean
  }

  export type attribute_option_imagesUpsertWithWhereUniqueWithoutAttribute_optionsInput = {
    where: attribute_option_imagesWhereUniqueInput
    update: XOR<attribute_option_imagesUpdateWithoutAttribute_optionsInput, attribute_option_imagesUncheckedUpdateWithoutAttribute_optionsInput>
    create: XOR<attribute_option_imagesCreateWithoutAttribute_optionsInput, attribute_option_imagesUncheckedCreateWithoutAttribute_optionsInput>
  }

  export type attribute_option_imagesUpdateWithWhereUniqueWithoutAttribute_optionsInput = {
    where: attribute_option_imagesWhereUniqueInput
    data: XOR<attribute_option_imagesUpdateWithoutAttribute_optionsInput, attribute_option_imagesUncheckedUpdateWithoutAttribute_optionsInput>
  }

  export type attribute_option_imagesUpdateManyWithWhereWithoutAttribute_optionsInput = {
    where: attribute_option_imagesScalarWhereInput
    data: XOR<attribute_option_imagesUpdateManyMutationInput, attribute_option_imagesUncheckedUpdateManyWithoutAttribute_optionsInput>
  }

  export type attribute_option_imagesScalarWhereInput = {
    AND?: attribute_option_imagesScalarWhereInput | attribute_option_imagesScalarWhereInput[]
    OR?: attribute_option_imagesScalarWhereInput[]
    NOT?: attribute_option_imagesScalarWhereInput | attribute_option_imagesScalarWhereInput[]
    id?: IntFilter<"attribute_option_images"> | number
    attribute_option_id?: IntFilter<"attribute_option_images"> | number
    image_type?: Enumattribute_option_images_image_typeFilter<"attribute_option_images"> | $Enums.attribute_option_images_image_type
    display_order?: IntNullableFilter<"attribute_option_images"> | number | null
    image_url_thumb?: StringFilter<"attribute_option_images"> | string
    image_url_normal?: StringNullableFilter<"attribute_option_images"> | string | null
    image_url_zoom?: StringNullableFilter<"attribute_option_images"> | string | null
    alt_text?: StringNullableFilter<"attribute_option_images"> | string | null
    created_at?: DateTimeFilter<"attribute_option_images"> | Date | string
    updated_at?: DateTimeFilter<"attribute_option_images"> | Date | string
  }

  export type variant_attribute_optionsUpsertWithWhereUniqueWithoutAttribute_optionsInput = {
    where: variant_attribute_optionsWhereUniqueInput
    update: XOR<variant_attribute_optionsUpdateWithoutAttribute_optionsInput, variant_attribute_optionsUncheckedUpdateWithoutAttribute_optionsInput>
    create: XOR<variant_attribute_optionsCreateWithoutAttribute_optionsInput, variant_attribute_optionsUncheckedCreateWithoutAttribute_optionsInput>
  }

  export type variant_attribute_optionsUpdateWithWhereUniqueWithoutAttribute_optionsInput = {
    where: variant_attribute_optionsWhereUniqueInput
    data: XOR<variant_attribute_optionsUpdateWithoutAttribute_optionsInput, variant_attribute_optionsUncheckedUpdateWithoutAttribute_optionsInput>
  }

  export type variant_attribute_optionsUpdateManyWithWhereWithoutAttribute_optionsInput = {
    where: variant_attribute_optionsScalarWhereInput
    data: XOR<variant_attribute_optionsUpdateManyMutationInput, variant_attribute_optionsUncheckedUpdateManyWithoutAttribute_optionsInput>
  }

  export type variant_attribute_optionsScalarWhereInput = {
    AND?: variant_attribute_optionsScalarWhereInput | variant_attribute_optionsScalarWhereInput[]
    OR?: variant_attribute_optionsScalarWhereInput[]
    NOT?: variant_attribute_optionsScalarWhereInput | variant_attribute_optionsScalarWhereInput[]
    variant_id?: IntFilter<"variant_attribute_options"> | number
    attribute_option_id?: IntFilter<"variant_attribute_options"> | number
  }

  export type productsCreateWithoutBrandsInput = {
    name: string
    description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    base_price?: Decimal | DecimalJsLike | number | string | null
    product_variants?: product_variantsCreateNestedManyWithoutProductsInput
  }

  export type productsUncheckedCreateWithoutBrandsInput = {
    id?: number
    name: string
    description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    base_price?: Decimal | DecimalJsLike | number | string | null
    product_variants?: product_variantsUncheckedCreateNestedManyWithoutProductsInput
  }

  export type productsCreateOrConnectWithoutBrandsInput = {
    where: productsWhereUniqueInput
    create: XOR<productsCreateWithoutBrandsInput, productsUncheckedCreateWithoutBrandsInput>
  }

  export type productsCreateManyBrandsInputEnvelope = {
    data: productsCreateManyBrandsInput | productsCreateManyBrandsInput[]
    skipDuplicates?: boolean
  }

  export type productsUpsertWithWhereUniqueWithoutBrandsInput = {
    where: productsWhereUniqueInput
    update: XOR<productsUpdateWithoutBrandsInput, productsUncheckedUpdateWithoutBrandsInput>
    create: XOR<productsCreateWithoutBrandsInput, productsUncheckedCreateWithoutBrandsInput>
  }

  export type productsUpdateWithWhereUniqueWithoutBrandsInput = {
    where: productsWhereUniqueInput
    data: XOR<productsUpdateWithoutBrandsInput, productsUncheckedUpdateWithoutBrandsInput>
  }

  export type productsUpdateManyWithWhereWithoutBrandsInput = {
    where: productsScalarWhereInput
    data: XOR<productsUpdateManyMutationInput, productsUncheckedUpdateManyWithoutBrandsInput>
  }

  export type productsScalarWhereInput = {
    AND?: productsScalarWhereInput | productsScalarWhereInput[]
    OR?: productsScalarWhereInput[]
    NOT?: productsScalarWhereInput | productsScalarWhereInput[]
    id?: IntFilter<"products"> | number
    name?: StringFilter<"products"> | string
    description?: StringNullableFilter<"products"> | string | null
    brand_id?: IntNullableFilter<"products"> | number | null
    created_at?: DateTimeFilter<"products"> | Date | string
    updated_at?: DateTimeFilter<"products"> | Date | string
    base_price?: DecimalNullableFilter<"products"> | Decimal | DecimalJsLike | number | string | null
  }

  export type customers_addressesCreateWithoutCustomersInput = {
    name?: string | null
    description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type customers_addressesUncheckedCreateWithoutCustomersInput = {
    id?: number
    name?: string | null
    description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type customers_addressesCreateOrConnectWithoutCustomersInput = {
    where: customers_addressesWhereUniqueInput
    create: XOR<customers_addressesCreateWithoutCustomersInput, customers_addressesUncheckedCreateWithoutCustomersInput>
  }

  export type customers_addressesCreateManyCustomersInputEnvelope = {
    data: customers_addressesCreateManyCustomersInput | customers_addressesCreateManyCustomersInput[]
    skipDuplicates?: boolean
  }

  export type variant_ratingsCreateWithoutCustomersInput = {
    rating?: number
    review?: string | null
    title?: string | null
    verified_purchase?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    rating_images?: rating_imagesCreateNestedManyWithoutVariant_ratingsInput
    product_variants: product_variantsCreateNestedOneWithoutVariant_ratingsInput
  }

  export type variant_ratingsUncheckedCreateWithoutCustomersInput = {
    id?: number
    variant_id: number
    rating?: number
    review?: string | null
    title?: string | null
    verified_purchase?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    rating_images?: rating_imagesUncheckedCreateNestedManyWithoutVariant_ratingsInput
  }

  export type variant_ratingsCreateOrConnectWithoutCustomersInput = {
    where: variant_ratingsWhereUniqueInput
    create: XOR<variant_ratingsCreateWithoutCustomersInput, variant_ratingsUncheckedCreateWithoutCustomersInput>
  }

  export type variant_ratingsCreateManyCustomersInputEnvelope = {
    data: variant_ratingsCreateManyCustomersInput | variant_ratingsCreateManyCustomersInput[]
    skipDuplicates?: boolean
  }

  export type customers_addressesUpsertWithWhereUniqueWithoutCustomersInput = {
    where: customers_addressesWhereUniqueInput
    update: XOR<customers_addressesUpdateWithoutCustomersInput, customers_addressesUncheckedUpdateWithoutCustomersInput>
    create: XOR<customers_addressesCreateWithoutCustomersInput, customers_addressesUncheckedCreateWithoutCustomersInput>
  }

  export type customers_addressesUpdateWithWhereUniqueWithoutCustomersInput = {
    where: customers_addressesWhereUniqueInput
    data: XOR<customers_addressesUpdateWithoutCustomersInput, customers_addressesUncheckedUpdateWithoutCustomersInput>
  }

  export type customers_addressesUpdateManyWithWhereWithoutCustomersInput = {
    where: customers_addressesScalarWhereInput
    data: XOR<customers_addressesUpdateManyMutationInput, customers_addressesUncheckedUpdateManyWithoutCustomersInput>
  }

  export type customers_addressesScalarWhereInput = {
    AND?: customers_addressesScalarWhereInput | customers_addressesScalarWhereInput[]
    OR?: customers_addressesScalarWhereInput[]
    NOT?: customers_addressesScalarWhereInput | customers_addressesScalarWhereInput[]
    id?: IntFilter<"customers_addresses"> | number
    name?: StringNullableFilter<"customers_addresses"> | string | null
    description?: StringNullableFilter<"customers_addresses"> | string | null
    id_customer?: IntNullableFilter<"customers_addresses"> | number | null
    created_at?: DateTimeFilter<"customers_addresses"> | Date | string
    updated_at?: DateTimeFilter<"customers_addresses"> | Date | string
  }

  export type variant_ratingsUpsertWithWhereUniqueWithoutCustomersInput = {
    where: variant_ratingsWhereUniqueInput
    update: XOR<variant_ratingsUpdateWithoutCustomersInput, variant_ratingsUncheckedUpdateWithoutCustomersInput>
    create: XOR<variant_ratingsCreateWithoutCustomersInput, variant_ratingsUncheckedCreateWithoutCustomersInput>
  }

  export type variant_ratingsUpdateWithWhereUniqueWithoutCustomersInput = {
    where: variant_ratingsWhereUniqueInput
    data: XOR<variant_ratingsUpdateWithoutCustomersInput, variant_ratingsUncheckedUpdateWithoutCustomersInput>
  }

  export type variant_ratingsUpdateManyWithWhereWithoutCustomersInput = {
    where: variant_ratingsScalarWhereInput
    data: XOR<variant_ratingsUpdateManyMutationInput, variant_ratingsUncheckedUpdateManyWithoutCustomersInput>
  }

  export type variant_ratingsScalarWhereInput = {
    AND?: variant_ratingsScalarWhereInput | variant_ratingsScalarWhereInput[]
    OR?: variant_ratingsScalarWhereInput[]
    NOT?: variant_ratingsScalarWhereInput | variant_ratingsScalarWhereInput[]
    id?: IntFilter<"variant_ratings"> | number
    variant_id?: IntFilter<"variant_ratings"> | number
    customer_id?: IntFilter<"variant_ratings"> | number
    rating?: IntFilter<"variant_ratings"> | number
    review?: StringNullableFilter<"variant_ratings"> | string | null
    title?: StringNullableFilter<"variant_ratings"> | string | null
    verified_purchase?: BoolFilter<"variant_ratings"> | boolean
    created_at?: DateTimeFilter<"variant_ratings"> | Date | string
    updated_at?: DateTimeFilter<"variant_ratings"> | Date | string
  }

  export type customersCreateWithoutCustomers_addressesInput = {
    username: string
    email: string
    password: string
    address_id?: number | null
    is_active?: boolean | null
    created_at?: Date | string
    updated_at?: Date | string
    lastname: string
    photo?: string | null
    name?: string | null
    variant_ratings?: variant_ratingsCreateNestedManyWithoutCustomersInput
  }

  export type customersUncheckedCreateWithoutCustomers_addressesInput = {
    id?: number
    username: string
    email: string
    password: string
    address_id?: number | null
    is_active?: boolean | null
    created_at?: Date | string
    updated_at?: Date | string
    lastname: string
    photo?: string | null
    name?: string | null
    variant_ratings?: variant_ratingsUncheckedCreateNestedManyWithoutCustomersInput
  }

  export type customersCreateOrConnectWithoutCustomers_addressesInput = {
    where: customersWhereUniqueInput
    create: XOR<customersCreateWithoutCustomers_addressesInput, customersUncheckedCreateWithoutCustomers_addressesInput>
  }

  export type customersUpsertWithoutCustomers_addressesInput = {
    update: XOR<customersUpdateWithoutCustomers_addressesInput, customersUncheckedUpdateWithoutCustomers_addressesInput>
    create: XOR<customersCreateWithoutCustomers_addressesInput, customersUncheckedCreateWithoutCustomers_addressesInput>
    where?: customersWhereInput
  }

  export type customersUpdateToOneWithWhereWithoutCustomers_addressesInput = {
    where?: customersWhereInput
    data: XOR<customersUpdateWithoutCustomers_addressesInput, customersUncheckedUpdateWithoutCustomers_addressesInput>
  }

  export type customersUpdateWithoutCustomers_addressesInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    lastname?: StringFieldUpdateOperationsInput | string
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    variant_ratings?: variant_ratingsUpdateManyWithoutCustomersNestedInput
  }

  export type customersUncheckedUpdateWithoutCustomers_addressesInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    lastname?: StringFieldUpdateOperationsInput | string
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    variant_ratings?: variant_ratingsUncheckedUpdateManyWithoutCustomersNestedInput
  }

  export type productsCreateWithoutProduct_variantsInput = {
    name: string
    description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    base_price?: Decimal | DecimalJsLike | number | string | null
    brands?: brandsCreateNestedOneWithoutProductsInput
  }

  export type productsUncheckedCreateWithoutProduct_variantsInput = {
    id?: number
    name: string
    description?: string | null
    brand_id?: number | null
    created_at?: Date | string
    updated_at?: Date | string
    base_price?: Decimal | DecimalJsLike | number | string | null
  }

  export type productsCreateOrConnectWithoutProduct_variantsInput = {
    where: productsWhereUniqueInput
    create: XOR<productsCreateWithoutProduct_variantsInput, productsUncheckedCreateWithoutProduct_variantsInput>
  }

  export type promotion_variantsCreateWithoutProduct_variantsInput = {
    promotion_price?: Decimal | DecimalJsLike | number | string | null
    stock_limit?: number | null
    created_at?: Date | string
    promotions: promotionsCreateNestedOneWithoutPromotion_variantsInput
  }

  export type promotion_variantsUncheckedCreateWithoutProduct_variantsInput = {
    promotion_id: number
    promotion_price?: Decimal | DecimalJsLike | number | string | null
    stock_limit?: number | null
    created_at?: Date | string
  }

  export type promotion_variantsCreateOrConnectWithoutProduct_variantsInput = {
    where: promotion_variantsWhereUniqueInput
    create: XOR<promotion_variantsCreateWithoutProduct_variantsInput, promotion_variantsUncheckedCreateWithoutProduct_variantsInput>
  }

  export type promotion_variantsCreateManyProduct_variantsInputEnvelope = {
    data: promotion_variantsCreateManyProduct_variantsInput | promotion_variantsCreateManyProduct_variantsInput[]
    skipDuplicates?: boolean
  }

  export type variant_attribute_optionsCreateWithoutProduct_variantsInput = {
    attribute_options: attribute_optionsCreateNestedOneWithoutVariant_attribute_optionsInput
  }

  export type variant_attribute_optionsUncheckedCreateWithoutProduct_variantsInput = {
    attribute_option_id: number
  }

  export type variant_attribute_optionsCreateOrConnectWithoutProduct_variantsInput = {
    where: variant_attribute_optionsWhereUniqueInput
    create: XOR<variant_attribute_optionsCreateWithoutProduct_variantsInput, variant_attribute_optionsUncheckedCreateWithoutProduct_variantsInput>
  }

  export type variant_attribute_optionsCreateManyProduct_variantsInputEnvelope = {
    data: variant_attribute_optionsCreateManyProduct_variantsInput | variant_attribute_optionsCreateManyProduct_variantsInput[]
    skipDuplicates?: boolean
  }

  export type variant_imagesCreateWithoutProduct_variantsInput = {
    image_type?: $Enums.variant_images_image_type
    image_url_thumb: string
    image_url_normal: string
    image_url_zoom: string
    is_primary?: boolean | null
    display_order?: number | null
    alt_text?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type variant_imagesUncheckedCreateWithoutProduct_variantsInput = {
    id?: number
    image_type?: $Enums.variant_images_image_type
    image_url_thumb: string
    image_url_normal: string
    image_url_zoom: string
    is_primary?: boolean | null
    display_order?: number | null
    alt_text?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type variant_imagesCreateOrConnectWithoutProduct_variantsInput = {
    where: variant_imagesWhereUniqueInput
    create: XOR<variant_imagesCreateWithoutProduct_variantsInput, variant_imagesUncheckedCreateWithoutProduct_variantsInput>
  }

  export type variant_imagesCreateManyProduct_variantsInputEnvelope = {
    data: variant_imagesCreateManyProduct_variantsInput | variant_imagesCreateManyProduct_variantsInput[]
    skipDuplicates?: boolean
  }

  export type variant_ratingsCreateWithoutProduct_variantsInput = {
    rating?: number
    review?: string | null
    title?: string | null
    verified_purchase?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    rating_images?: rating_imagesCreateNestedManyWithoutVariant_ratingsInput
    customers: customersCreateNestedOneWithoutVariant_ratingsInput
  }

  export type variant_ratingsUncheckedCreateWithoutProduct_variantsInput = {
    id?: number
    customer_id: number
    rating?: number
    review?: string | null
    title?: string | null
    verified_purchase?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    rating_images?: rating_imagesUncheckedCreateNestedManyWithoutVariant_ratingsInput
  }

  export type variant_ratingsCreateOrConnectWithoutProduct_variantsInput = {
    where: variant_ratingsWhereUniqueInput
    create: XOR<variant_ratingsCreateWithoutProduct_variantsInput, variant_ratingsUncheckedCreateWithoutProduct_variantsInput>
  }

  export type variant_ratingsCreateManyProduct_variantsInputEnvelope = {
    data: variant_ratingsCreateManyProduct_variantsInput | variant_ratingsCreateManyProduct_variantsInput[]
    skipDuplicates?: boolean
  }

  export type productsUpsertWithoutProduct_variantsInput = {
    update: XOR<productsUpdateWithoutProduct_variantsInput, productsUncheckedUpdateWithoutProduct_variantsInput>
    create: XOR<productsCreateWithoutProduct_variantsInput, productsUncheckedCreateWithoutProduct_variantsInput>
    where?: productsWhereInput
  }

  export type productsUpdateToOneWithWhereWithoutProduct_variantsInput = {
    where?: productsWhereInput
    data: XOR<productsUpdateWithoutProduct_variantsInput, productsUncheckedUpdateWithoutProduct_variantsInput>
  }

  export type productsUpdateWithoutProduct_variantsInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    base_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    brands?: brandsUpdateOneWithoutProductsNestedInput
  }

  export type productsUncheckedUpdateWithoutProduct_variantsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    brand_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    base_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type promotion_variantsUpsertWithWhereUniqueWithoutProduct_variantsInput = {
    where: promotion_variantsWhereUniqueInput
    update: XOR<promotion_variantsUpdateWithoutProduct_variantsInput, promotion_variantsUncheckedUpdateWithoutProduct_variantsInput>
    create: XOR<promotion_variantsCreateWithoutProduct_variantsInput, promotion_variantsUncheckedCreateWithoutProduct_variantsInput>
  }

  export type promotion_variantsUpdateWithWhereUniqueWithoutProduct_variantsInput = {
    where: promotion_variantsWhereUniqueInput
    data: XOR<promotion_variantsUpdateWithoutProduct_variantsInput, promotion_variantsUncheckedUpdateWithoutProduct_variantsInput>
  }

  export type promotion_variantsUpdateManyWithWhereWithoutProduct_variantsInput = {
    where: promotion_variantsScalarWhereInput
    data: XOR<promotion_variantsUpdateManyMutationInput, promotion_variantsUncheckedUpdateManyWithoutProduct_variantsInput>
  }

  export type promotion_variantsScalarWhereInput = {
    AND?: promotion_variantsScalarWhereInput | promotion_variantsScalarWhereInput[]
    OR?: promotion_variantsScalarWhereInput[]
    NOT?: promotion_variantsScalarWhereInput | promotion_variantsScalarWhereInput[]
    promotion_id?: IntFilter<"promotion_variants"> | number
    variant_id?: IntFilter<"promotion_variants"> | number
    promotion_price?: DecimalNullableFilter<"promotion_variants"> | Decimal | DecimalJsLike | number | string | null
    stock_limit?: IntNullableFilter<"promotion_variants"> | number | null
    created_at?: DateTimeFilter<"promotion_variants"> | Date | string
  }

  export type variant_attribute_optionsUpsertWithWhereUniqueWithoutProduct_variantsInput = {
    where: variant_attribute_optionsWhereUniqueInput
    update: XOR<variant_attribute_optionsUpdateWithoutProduct_variantsInput, variant_attribute_optionsUncheckedUpdateWithoutProduct_variantsInput>
    create: XOR<variant_attribute_optionsCreateWithoutProduct_variantsInput, variant_attribute_optionsUncheckedCreateWithoutProduct_variantsInput>
  }

  export type variant_attribute_optionsUpdateWithWhereUniqueWithoutProduct_variantsInput = {
    where: variant_attribute_optionsWhereUniqueInput
    data: XOR<variant_attribute_optionsUpdateWithoutProduct_variantsInput, variant_attribute_optionsUncheckedUpdateWithoutProduct_variantsInput>
  }

  export type variant_attribute_optionsUpdateManyWithWhereWithoutProduct_variantsInput = {
    where: variant_attribute_optionsScalarWhereInput
    data: XOR<variant_attribute_optionsUpdateManyMutationInput, variant_attribute_optionsUncheckedUpdateManyWithoutProduct_variantsInput>
  }

  export type variant_imagesUpsertWithWhereUniqueWithoutProduct_variantsInput = {
    where: variant_imagesWhereUniqueInput
    update: XOR<variant_imagesUpdateWithoutProduct_variantsInput, variant_imagesUncheckedUpdateWithoutProduct_variantsInput>
    create: XOR<variant_imagesCreateWithoutProduct_variantsInput, variant_imagesUncheckedCreateWithoutProduct_variantsInput>
  }

  export type variant_imagesUpdateWithWhereUniqueWithoutProduct_variantsInput = {
    where: variant_imagesWhereUniqueInput
    data: XOR<variant_imagesUpdateWithoutProduct_variantsInput, variant_imagesUncheckedUpdateWithoutProduct_variantsInput>
  }

  export type variant_imagesUpdateManyWithWhereWithoutProduct_variantsInput = {
    where: variant_imagesScalarWhereInput
    data: XOR<variant_imagesUpdateManyMutationInput, variant_imagesUncheckedUpdateManyWithoutProduct_variantsInput>
  }

  export type variant_imagesScalarWhereInput = {
    AND?: variant_imagesScalarWhereInput | variant_imagesScalarWhereInput[]
    OR?: variant_imagesScalarWhereInput[]
    NOT?: variant_imagesScalarWhereInput | variant_imagesScalarWhereInput[]
    id?: IntFilter<"variant_images"> | number
    variant_id?: IntFilter<"variant_images"> | number
    image_type?: Enumvariant_images_image_typeFilter<"variant_images"> | $Enums.variant_images_image_type
    image_url_thumb?: StringFilter<"variant_images"> | string
    image_url_normal?: StringFilter<"variant_images"> | string
    image_url_zoom?: StringFilter<"variant_images"> | string
    is_primary?: BoolNullableFilter<"variant_images"> | boolean | null
    display_order?: IntNullableFilter<"variant_images"> | number | null
    alt_text?: StringNullableFilter<"variant_images"> | string | null
    created_at?: DateTimeFilter<"variant_images"> | Date | string
    updated_at?: DateTimeFilter<"variant_images"> | Date | string
  }

  export type variant_ratingsUpsertWithWhereUniqueWithoutProduct_variantsInput = {
    where: variant_ratingsWhereUniqueInput
    update: XOR<variant_ratingsUpdateWithoutProduct_variantsInput, variant_ratingsUncheckedUpdateWithoutProduct_variantsInput>
    create: XOR<variant_ratingsCreateWithoutProduct_variantsInput, variant_ratingsUncheckedCreateWithoutProduct_variantsInput>
  }

  export type variant_ratingsUpdateWithWhereUniqueWithoutProduct_variantsInput = {
    where: variant_ratingsWhereUniqueInput
    data: XOR<variant_ratingsUpdateWithoutProduct_variantsInput, variant_ratingsUncheckedUpdateWithoutProduct_variantsInput>
  }

  export type variant_ratingsUpdateManyWithWhereWithoutProduct_variantsInput = {
    where: variant_ratingsScalarWhereInput
    data: XOR<variant_ratingsUpdateManyMutationInput, variant_ratingsUncheckedUpdateManyWithoutProduct_variantsInput>
  }

  export type product_variantsCreateWithoutProductsInput = {
    sku: string
    price: Decimal | DecimalJsLike | number | string
    stock?: number
    created_at?: Date | string
    updated_at?: Date | string
    promotion_variants?: promotion_variantsCreateNestedManyWithoutProduct_variantsInput
    variant_attribute_options?: variant_attribute_optionsCreateNestedManyWithoutProduct_variantsInput
    variant_images?: variant_imagesCreateNestedManyWithoutProduct_variantsInput
    variant_ratings?: variant_ratingsCreateNestedManyWithoutProduct_variantsInput
  }

  export type product_variantsUncheckedCreateWithoutProductsInput = {
    id?: number
    sku: string
    price: Decimal | DecimalJsLike | number | string
    stock?: number
    created_at?: Date | string
    updated_at?: Date | string
    promotion_variants?: promotion_variantsUncheckedCreateNestedManyWithoutProduct_variantsInput
    variant_attribute_options?: variant_attribute_optionsUncheckedCreateNestedManyWithoutProduct_variantsInput
    variant_images?: variant_imagesUncheckedCreateNestedManyWithoutProduct_variantsInput
    variant_ratings?: variant_ratingsUncheckedCreateNestedManyWithoutProduct_variantsInput
  }

  export type product_variantsCreateOrConnectWithoutProductsInput = {
    where: product_variantsWhereUniqueInput
    create: XOR<product_variantsCreateWithoutProductsInput, product_variantsUncheckedCreateWithoutProductsInput>
  }

  export type product_variantsCreateManyProductsInputEnvelope = {
    data: product_variantsCreateManyProductsInput | product_variantsCreateManyProductsInput[]
    skipDuplicates?: boolean
  }

  export type brandsCreateWithoutProductsInput = {
    name: string
  }

  export type brandsUncheckedCreateWithoutProductsInput = {
    id?: number
    name: string
  }

  export type brandsCreateOrConnectWithoutProductsInput = {
    where: brandsWhereUniqueInput
    create: XOR<brandsCreateWithoutProductsInput, brandsUncheckedCreateWithoutProductsInput>
  }

  export type product_variantsUpsertWithWhereUniqueWithoutProductsInput = {
    where: product_variantsWhereUniqueInput
    update: XOR<product_variantsUpdateWithoutProductsInput, product_variantsUncheckedUpdateWithoutProductsInput>
    create: XOR<product_variantsCreateWithoutProductsInput, product_variantsUncheckedCreateWithoutProductsInput>
  }

  export type product_variantsUpdateWithWhereUniqueWithoutProductsInput = {
    where: product_variantsWhereUniqueInput
    data: XOR<product_variantsUpdateWithoutProductsInput, product_variantsUncheckedUpdateWithoutProductsInput>
  }

  export type product_variantsUpdateManyWithWhereWithoutProductsInput = {
    where: product_variantsScalarWhereInput
    data: XOR<product_variantsUpdateManyMutationInput, product_variantsUncheckedUpdateManyWithoutProductsInput>
  }

  export type product_variantsScalarWhereInput = {
    AND?: product_variantsScalarWhereInput | product_variantsScalarWhereInput[]
    OR?: product_variantsScalarWhereInput[]
    NOT?: product_variantsScalarWhereInput | product_variantsScalarWhereInput[]
    id?: IntFilter<"product_variants"> | number
    product_id?: IntFilter<"product_variants"> | number
    sku?: StringFilter<"product_variants"> | string
    price?: DecimalFilter<"product_variants"> | Decimal | DecimalJsLike | number | string
    stock?: IntFilter<"product_variants"> | number
    created_at?: DateTimeFilter<"product_variants"> | Date | string
    updated_at?: DateTimeFilter<"product_variants"> | Date | string
  }

  export type brandsUpsertWithoutProductsInput = {
    update: XOR<brandsUpdateWithoutProductsInput, brandsUncheckedUpdateWithoutProductsInput>
    create: XOR<brandsCreateWithoutProductsInput, brandsUncheckedCreateWithoutProductsInput>
    where?: brandsWhereInput
  }

  export type brandsUpdateToOneWithWhereWithoutProductsInput = {
    where?: brandsWhereInput
    data: XOR<brandsUpdateWithoutProductsInput, brandsUncheckedUpdateWithoutProductsInput>
  }

  export type brandsUpdateWithoutProductsInput = {
    name?: StringFieldUpdateOperationsInput | string
  }

  export type brandsUncheckedUpdateWithoutProductsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
  }

  export type promotionsCreateWithoutPromotion_variantsInput = {
    name: string
    description?: string | null
    start_date: Date | string
    end_date: Date | string
    discount_type?: $Enums.promotions_discount_type
    discount_value: Decimal | DecimalJsLike | number | string
    min_purchase_amount?: Decimal | DecimalJsLike | number | string | null
    is_active?: boolean | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type promotionsUncheckedCreateWithoutPromotion_variantsInput = {
    id?: number
    name: string
    description?: string | null
    start_date: Date | string
    end_date: Date | string
    discount_type?: $Enums.promotions_discount_type
    discount_value: Decimal | DecimalJsLike | number | string
    min_purchase_amount?: Decimal | DecimalJsLike | number | string | null
    is_active?: boolean | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type promotionsCreateOrConnectWithoutPromotion_variantsInput = {
    where: promotionsWhereUniqueInput
    create: XOR<promotionsCreateWithoutPromotion_variantsInput, promotionsUncheckedCreateWithoutPromotion_variantsInput>
  }

  export type product_variantsCreateWithoutPromotion_variantsInput = {
    sku: string
    price: Decimal | DecimalJsLike | number | string
    stock?: number
    created_at?: Date | string
    updated_at?: Date | string
    products: productsCreateNestedOneWithoutProduct_variantsInput
    variant_attribute_options?: variant_attribute_optionsCreateNestedManyWithoutProduct_variantsInput
    variant_images?: variant_imagesCreateNestedManyWithoutProduct_variantsInput
    variant_ratings?: variant_ratingsCreateNestedManyWithoutProduct_variantsInput
  }

  export type product_variantsUncheckedCreateWithoutPromotion_variantsInput = {
    id?: number
    product_id: number
    sku: string
    price: Decimal | DecimalJsLike | number | string
    stock?: number
    created_at?: Date | string
    updated_at?: Date | string
    variant_attribute_options?: variant_attribute_optionsUncheckedCreateNestedManyWithoutProduct_variantsInput
    variant_images?: variant_imagesUncheckedCreateNestedManyWithoutProduct_variantsInput
    variant_ratings?: variant_ratingsUncheckedCreateNestedManyWithoutProduct_variantsInput
  }

  export type product_variantsCreateOrConnectWithoutPromotion_variantsInput = {
    where: product_variantsWhereUniqueInput
    create: XOR<product_variantsCreateWithoutPromotion_variantsInput, product_variantsUncheckedCreateWithoutPromotion_variantsInput>
  }

  export type promotionsUpsertWithoutPromotion_variantsInput = {
    update: XOR<promotionsUpdateWithoutPromotion_variantsInput, promotionsUncheckedUpdateWithoutPromotion_variantsInput>
    create: XOR<promotionsCreateWithoutPromotion_variantsInput, promotionsUncheckedCreateWithoutPromotion_variantsInput>
    where?: promotionsWhereInput
  }

  export type promotionsUpdateToOneWithWhereWithoutPromotion_variantsInput = {
    where?: promotionsWhereInput
    data: XOR<promotionsUpdateWithoutPromotion_variantsInput, promotionsUncheckedUpdateWithoutPromotion_variantsInput>
  }

  export type promotionsUpdateWithoutPromotion_variantsInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    discount_type?: Enumpromotions_discount_typeFieldUpdateOperationsInput | $Enums.promotions_discount_type
    discount_value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    min_purchase_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type promotionsUncheckedUpdateWithoutPromotion_variantsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    discount_type?: Enumpromotions_discount_typeFieldUpdateOperationsInput | $Enums.promotions_discount_type
    discount_value?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    min_purchase_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type product_variantsUpsertWithoutPromotion_variantsInput = {
    update: XOR<product_variantsUpdateWithoutPromotion_variantsInput, product_variantsUncheckedUpdateWithoutPromotion_variantsInput>
    create: XOR<product_variantsCreateWithoutPromotion_variantsInput, product_variantsUncheckedCreateWithoutPromotion_variantsInput>
    where?: product_variantsWhereInput
  }

  export type product_variantsUpdateToOneWithWhereWithoutPromotion_variantsInput = {
    where?: product_variantsWhereInput
    data: XOR<product_variantsUpdateWithoutPromotion_variantsInput, product_variantsUncheckedUpdateWithoutPromotion_variantsInput>
  }

  export type product_variantsUpdateWithoutPromotion_variantsInput = {
    sku?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: productsUpdateOneRequiredWithoutProduct_variantsNestedInput
    variant_attribute_options?: variant_attribute_optionsUpdateManyWithoutProduct_variantsNestedInput
    variant_images?: variant_imagesUpdateManyWithoutProduct_variantsNestedInput
    variant_ratings?: variant_ratingsUpdateManyWithoutProduct_variantsNestedInput
  }

  export type product_variantsUncheckedUpdateWithoutPromotion_variantsInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_id?: IntFieldUpdateOperationsInput | number
    sku?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    variant_attribute_options?: variant_attribute_optionsUncheckedUpdateManyWithoutProduct_variantsNestedInput
    variant_images?: variant_imagesUncheckedUpdateManyWithoutProduct_variantsNestedInput
    variant_ratings?: variant_ratingsUncheckedUpdateManyWithoutProduct_variantsNestedInput
  }

  export type promotion_variantsCreateWithoutPromotionsInput = {
    promotion_price?: Decimal | DecimalJsLike | number | string | null
    stock_limit?: number | null
    created_at?: Date | string
    product_variants: product_variantsCreateNestedOneWithoutPromotion_variantsInput
  }

  export type promotion_variantsUncheckedCreateWithoutPromotionsInput = {
    variant_id: number
    promotion_price?: Decimal | DecimalJsLike | number | string | null
    stock_limit?: number | null
    created_at?: Date | string
  }

  export type promotion_variantsCreateOrConnectWithoutPromotionsInput = {
    where: promotion_variantsWhereUniqueInput
    create: XOR<promotion_variantsCreateWithoutPromotionsInput, promotion_variantsUncheckedCreateWithoutPromotionsInput>
  }

  export type promotion_variantsCreateManyPromotionsInputEnvelope = {
    data: promotion_variantsCreateManyPromotionsInput | promotion_variantsCreateManyPromotionsInput[]
    skipDuplicates?: boolean
  }

  export type promotion_variantsUpsertWithWhereUniqueWithoutPromotionsInput = {
    where: promotion_variantsWhereUniqueInput
    update: XOR<promotion_variantsUpdateWithoutPromotionsInput, promotion_variantsUncheckedUpdateWithoutPromotionsInput>
    create: XOR<promotion_variantsCreateWithoutPromotionsInput, promotion_variantsUncheckedCreateWithoutPromotionsInput>
  }

  export type promotion_variantsUpdateWithWhereUniqueWithoutPromotionsInput = {
    where: promotion_variantsWhereUniqueInput
    data: XOR<promotion_variantsUpdateWithoutPromotionsInput, promotion_variantsUncheckedUpdateWithoutPromotionsInput>
  }

  export type promotion_variantsUpdateManyWithWhereWithoutPromotionsInput = {
    where: promotion_variantsScalarWhereInput
    data: XOR<promotion_variantsUpdateManyMutationInput, promotion_variantsUncheckedUpdateManyWithoutPromotionsInput>
  }

  export type variant_ratingsCreateWithoutRating_imagesInput = {
    rating?: number
    review?: string | null
    title?: string | null
    verified_purchase?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    customers: customersCreateNestedOneWithoutVariant_ratingsInput
    product_variants: product_variantsCreateNestedOneWithoutVariant_ratingsInput
  }

  export type variant_ratingsUncheckedCreateWithoutRating_imagesInput = {
    id?: number
    variant_id: number
    customer_id: number
    rating?: number
    review?: string | null
    title?: string | null
    verified_purchase?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type variant_ratingsCreateOrConnectWithoutRating_imagesInput = {
    where: variant_ratingsWhereUniqueInput
    create: XOR<variant_ratingsCreateWithoutRating_imagesInput, variant_ratingsUncheckedCreateWithoutRating_imagesInput>
  }

  export type variant_ratingsUpsertWithoutRating_imagesInput = {
    update: XOR<variant_ratingsUpdateWithoutRating_imagesInput, variant_ratingsUncheckedUpdateWithoutRating_imagesInput>
    create: XOR<variant_ratingsCreateWithoutRating_imagesInput, variant_ratingsUncheckedCreateWithoutRating_imagesInput>
    where?: variant_ratingsWhereInput
  }

  export type variant_ratingsUpdateToOneWithWhereWithoutRating_imagesInput = {
    where?: variant_ratingsWhereInput
    data: XOR<variant_ratingsUpdateWithoutRating_imagesInput, variant_ratingsUncheckedUpdateWithoutRating_imagesInput>
  }

  export type variant_ratingsUpdateWithoutRating_imagesInput = {
    rating?: IntFieldUpdateOperationsInput | number
    review?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    verified_purchase?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    customers?: customersUpdateOneRequiredWithoutVariant_ratingsNestedInput
    product_variants?: product_variantsUpdateOneRequiredWithoutVariant_ratingsNestedInput
  }

  export type variant_ratingsUncheckedUpdateWithoutRating_imagesInput = {
    id?: IntFieldUpdateOperationsInput | number
    variant_id?: IntFieldUpdateOperationsInput | number
    customer_id?: IntFieldUpdateOperationsInput | number
    rating?: IntFieldUpdateOperationsInput | number
    review?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    verified_purchase?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type roles_sectionsCreateWithoutRolesInput = {
    sections?: sectionsCreateNestedOneWithoutRoles_sectionsInput
  }

  export type roles_sectionsUncheckedCreateWithoutRolesInput = {
    id?: number
    id_section?: number | null
  }

  export type roles_sectionsCreateOrConnectWithoutRolesInput = {
    where: roles_sectionsWhereUniqueInput
    create: XOR<roles_sectionsCreateWithoutRolesInput, roles_sectionsUncheckedCreateWithoutRolesInput>
  }

  export type roles_sectionsCreateManyRolesInputEnvelope = {
    data: roles_sectionsCreateManyRolesInput | roles_sectionsCreateManyRolesInput[]
    skipDuplicates?: boolean
  }

  export type usersCreateWithoutRolesInput = {
    username: string
    email: string
    password: string
    is_active?: boolean | null
    created_at?: Date | string
    updated_at?: Date | string
    lastname: string
    photo?: string | null
  }

  export type usersUncheckedCreateWithoutRolesInput = {
    id?: number
    username: string
    email: string
    password: string
    is_active?: boolean | null
    created_at?: Date | string
    updated_at?: Date | string
    lastname: string
    photo?: string | null
  }

  export type usersCreateOrConnectWithoutRolesInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutRolesInput, usersUncheckedCreateWithoutRolesInput>
  }

  export type usersCreateManyRolesInputEnvelope = {
    data: usersCreateManyRolesInput | usersCreateManyRolesInput[]
    skipDuplicates?: boolean
  }

  export type roles_sectionsUpsertWithWhereUniqueWithoutRolesInput = {
    where: roles_sectionsWhereUniqueInput
    update: XOR<roles_sectionsUpdateWithoutRolesInput, roles_sectionsUncheckedUpdateWithoutRolesInput>
    create: XOR<roles_sectionsCreateWithoutRolesInput, roles_sectionsUncheckedCreateWithoutRolesInput>
  }

  export type roles_sectionsUpdateWithWhereUniqueWithoutRolesInput = {
    where: roles_sectionsWhereUniqueInput
    data: XOR<roles_sectionsUpdateWithoutRolesInput, roles_sectionsUncheckedUpdateWithoutRolesInput>
  }

  export type roles_sectionsUpdateManyWithWhereWithoutRolesInput = {
    where: roles_sectionsScalarWhereInput
    data: XOR<roles_sectionsUpdateManyMutationInput, roles_sectionsUncheckedUpdateManyWithoutRolesInput>
  }

  export type roles_sectionsScalarWhereInput = {
    AND?: roles_sectionsScalarWhereInput | roles_sectionsScalarWhereInput[]
    OR?: roles_sectionsScalarWhereInput[]
    NOT?: roles_sectionsScalarWhereInput | roles_sectionsScalarWhereInput[]
    id?: IntFilter<"roles_sections"> | number
    id_section?: IntNullableFilter<"roles_sections"> | number | null
    id_rol?: IntNullableFilter<"roles_sections"> | number | null
  }

  export type usersUpsertWithWhereUniqueWithoutRolesInput = {
    where: usersWhereUniqueInput
    update: XOR<usersUpdateWithoutRolesInput, usersUncheckedUpdateWithoutRolesInput>
    create: XOR<usersCreateWithoutRolesInput, usersUncheckedCreateWithoutRolesInput>
  }

  export type usersUpdateWithWhereUniqueWithoutRolesInput = {
    where: usersWhereUniqueInput
    data: XOR<usersUpdateWithoutRolesInput, usersUncheckedUpdateWithoutRolesInput>
  }

  export type usersUpdateManyWithWhereWithoutRolesInput = {
    where: usersScalarWhereInput
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyWithoutRolesInput>
  }

  export type usersScalarWhereInput = {
    AND?: usersScalarWhereInput | usersScalarWhereInput[]
    OR?: usersScalarWhereInput[]
    NOT?: usersScalarWhereInput | usersScalarWhereInput[]
    id?: IntFilter<"users"> | number
    username?: StringFilter<"users"> | string
    email?: StringFilter<"users"> | string
    password?: StringFilter<"users"> | string
    role_id?: IntFilter<"users"> | number
    is_active?: BoolNullableFilter<"users"> | boolean | null
    created_at?: DateTimeFilter<"users"> | Date | string
    updated_at?: DateTimeFilter<"users"> | Date | string
    lastname?: StringFilter<"users"> | string
    photo?: StringNullableFilter<"users"> | string | null
  }

  export type sectionsCreateWithoutRoles_sectionsInput = {
    name?: string | null
    url?: string | null
    image?: string | null
    display_order?: number | null
  }

  export type sectionsUncheckedCreateWithoutRoles_sectionsInput = {
    id?: number
    name?: string | null
    url?: string | null
    image?: string | null
    display_order?: number | null
  }

  export type sectionsCreateOrConnectWithoutRoles_sectionsInput = {
    where: sectionsWhereUniqueInput
    create: XOR<sectionsCreateWithoutRoles_sectionsInput, sectionsUncheckedCreateWithoutRoles_sectionsInput>
  }

  export type rolesCreateWithoutRoles_sectionsInput = {
    name: string
    created_at?: Date | string
    updated_at?: Date | string
    users?: usersCreateNestedManyWithoutRolesInput
  }

  export type rolesUncheckedCreateWithoutRoles_sectionsInput = {
    id?: number
    name: string
    created_at?: Date | string
    updated_at?: Date | string
    users?: usersUncheckedCreateNestedManyWithoutRolesInput
  }

  export type rolesCreateOrConnectWithoutRoles_sectionsInput = {
    where: rolesWhereUniqueInput
    create: XOR<rolesCreateWithoutRoles_sectionsInput, rolesUncheckedCreateWithoutRoles_sectionsInput>
  }

  export type sectionsUpsertWithoutRoles_sectionsInput = {
    update: XOR<sectionsUpdateWithoutRoles_sectionsInput, sectionsUncheckedUpdateWithoutRoles_sectionsInput>
    create: XOR<sectionsCreateWithoutRoles_sectionsInput, sectionsUncheckedCreateWithoutRoles_sectionsInput>
    where?: sectionsWhereInput
  }

  export type sectionsUpdateToOneWithWhereWithoutRoles_sectionsInput = {
    where?: sectionsWhereInput
    data: XOR<sectionsUpdateWithoutRoles_sectionsInput, sectionsUncheckedUpdateWithoutRoles_sectionsInput>
  }

  export type sectionsUpdateWithoutRoles_sectionsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    display_order?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type sectionsUncheckedUpdateWithoutRoles_sectionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    display_order?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type rolesUpsertWithoutRoles_sectionsInput = {
    update: XOR<rolesUpdateWithoutRoles_sectionsInput, rolesUncheckedUpdateWithoutRoles_sectionsInput>
    create: XOR<rolesCreateWithoutRoles_sectionsInput, rolesUncheckedCreateWithoutRoles_sectionsInput>
    where?: rolesWhereInput
  }

  export type rolesUpdateToOneWithWhereWithoutRoles_sectionsInput = {
    where?: rolesWhereInput
    data: XOR<rolesUpdateWithoutRoles_sectionsInput, rolesUncheckedUpdateWithoutRoles_sectionsInput>
  }

  export type rolesUpdateWithoutRoles_sectionsInput = {
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUpdateManyWithoutRolesNestedInput
  }

  export type rolesUncheckedUpdateWithoutRoles_sectionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUncheckedUpdateManyWithoutRolesNestedInput
  }

  export type roles_sectionsCreateWithoutSectionsInput = {
    roles?: rolesCreateNestedOneWithoutRoles_sectionsInput
  }

  export type roles_sectionsUncheckedCreateWithoutSectionsInput = {
    id?: number
    id_rol?: number | null
  }

  export type roles_sectionsCreateOrConnectWithoutSectionsInput = {
    where: roles_sectionsWhereUniqueInput
    create: XOR<roles_sectionsCreateWithoutSectionsInput, roles_sectionsUncheckedCreateWithoutSectionsInput>
  }

  export type roles_sectionsCreateManySectionsInputEnvelope = {
    data: roles_sectionsCreateManySectionsInput | roles_sectionsCreateManySectionsInput[]
    skipDuplicates?: boolean
  }

  export type roles_sectionsUpsertWithWhereUniqueWithoutSectionsInput = {
    where: roles_sectionsWhereUniqueInput
    update: XOR<roles_sectionsUpdateWithoutSectionsInput, roles_sectionsUncheckedUpdateWithoutSectionsInput>
    create: XOR<roles_sectionsCreateWithoutSectionsInput, roles_sectionsUncheckedCreateWithoutSectionsInput>
  }

  export type roles_sectionsUpdateWithWhereUniqueWithoutSectionsInput = {
    where: roles_sectionsWhereUniqueInput
    data: XOR<roles_sectionsUpdateWithoutSectionsInput, roles_sectionsUncheckedUpdateWithoutSectionsInput>
  }

  export type roles_sectionsUpdateManyWithWhereWithoutSectionsInput = {
    where: roles_sectionsScalarWhereInput
    data: XOR<roles_sectionsUpdateManyMutationInput, roles_sectionsUncheckedUpdateManyWithoutSectionsInput>
  }

  export type services_imagesCreateWithoutServicesInput = {
    title?: string | null
    subtitle?: string | null
    description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    display_order?: number | null
    image_url?: string | null
  }

  export type services_imagesUncheckedCreateWithoutServicesInput = {
    id?: number
    title?: string | null
    subtitle?: string | null
    description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    display_order?: number | null
    image_url?: string | null
  }

  export type services_imagesCreateOrConnectWithoutServicesInput = {
    where: services_imagesWhereUniqueInput
    create: XOR<services_imagesCreateWithoutServicesInput, services_imagesUncheckedCreateWithoutServicesInput>
  }

  export type services_imagesCreateManyServicesInputEnvelope = {
    data: services_imagesCreateManyServicesInput | services_imagesCreateManyServicesInput[]
    skipDuplicates?: boolean
  }

  export type services_imagesUpsertWithWhereUniqueWithoutServicesInput = {
    where: services_imagesWhereUniqueInput
    update: XOR<services_imagesUpdateWithoutServicesInput, services_imagesUncheckedUpdateWithoutServicesInput>
    create: XOR<services_imagesCreateWithoutServicesInput, services_imagesUncheckedCreateWithoutServicesInput>
  }

  export type services_imagesUpdateWithWhereUniqueWithoutServicesInput = {
    where: services_imagesWhereUniqueInput
    data: XOR<services_imagesUpdateWithoutServicesInput, services_imagesUncheckedUpdateWithoutServicesInput>
  }

  export type services_imagesUpdateManyWithWhereWithoutServicesInput = {
    where: services_imagesScalarWhereInput
    data: XOR<services_imagesUpdateManyMutationInput, services_imagesUncheckedUpdateManyWithoutServicesInput>
  }

  export type services_imagesScalarWhereInput = {
    AND?: services_imagesScalarWhereInput | services_imagesScalarWhereInput[]
    OR?: services_imagesScalarWhereInput[]
    NOT?: services_imagesScalarWhereInput | services_imagesScalarWhereInput[]
    id?: IntFilter<"services_images"> | number
    title?: StringNullableFilter<"services_images"> | string | null
    subtitle?: StringNullableFilter<"services_images"> | string | null
    description?: StringNullableFilter<"services_images"> | string | null
    created_at?: DateTimeFilter<"services_images"> | Date | string
    updated_at?: DateTimeFilter<"services_images"> | Date | string
    display_order?: IntNullableFilter<"services_images"> | number | null
    id_service?: IntNullableFilter<"services_images"> | number | null
    image_url?: StringNullableFilter<"services_images"> | string | null
  }

  export type servicesCreateWithoutServices_imagesInput = {
    title: string
    subtitle?: string | null
    image_url?: string | null
    slug?: string | null
    description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    display_order?: number | null
  }

  export type servicesUncheckedCreateWithoutServices_imagesInput = {
    id?: number
    title: string
    subtitle?: string | null
    image_url?: string | null
    slug?: string | null
    description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    display_order?: number | null
  }

  export type servicesCreateOrConnectWithoutServices_imagesInput = {
    where: servicesWhereUniqueInput
    create: XOR<servicesCreateWithoutServices_imagesInput, servicesUncheckedCreateWithoutServices_imagesInput>
  }

  export type servicesUpsertWithoutServices_imagesInput = {
    update: XOR<servicesUpdateWithoutServices_imagesInput, servicesUncheckedUpdateWithoutServices_imagesInput>
    create: XOR<servicesCreateWithoutServices_imagesInput, servicesUncheckedCreateWithoutServices_imagesInput>
    where?: servicesWhereInput
  }

  export type servicesUpdateToOneWithWhereWithoutServices_imagesInput = {
    where?: servicesWhereInput
    data: XOR<servicesUpdateWithoutServices_imagesInput, servicesUncheckedUpdateWithoutServices_imagesInput>
  }

  export type servicesUpdateWithoutServices_imagesInput = {
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    display_order?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type servicesUncheckedUpdateWithoutServices_imagesInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    display_order?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type rolesCreateWithoutUsersInput = {
    name: string
    created_at?: Date | string
    updated_at?: Date | string
    roles_sections?: roles_sectionsCreateNestedManyWithoutRolesInput
  }

  export type rolesUncheckedCreateWithoutUsersInput = {
    id?: number
    name: string
    created_at?: Date | string
    updated_at?: Date | string
    roles_sections?: roles_sectionsUncheckedCreateNestedManyWithoutRolesInput
  }

  export type rolesCreateOrConnectWithoutUsersInput = {
    where: rolesWhereUniqueInput
    create: XOR<rolesCreateWithoutUsersInput, rolesUncheckedCreateWithoutUsersInput>
  }

  export type rolesUpsertWithoutUsersInput = {
    update: XOR<rolesUpdateWithoutUsersInput, rolesUncheckedUpdateWithoutUsersInput>
    create: XOR<rolesCreateWithoutUsersInput, rolesUncheckedCreateWithoutUsersInput>
    where?: rolesWhereInput
  }

  export type rolesUpdateToOneWithWhereWithoutUsersInput = {
    where?: rolesWhereInput
    data: XOR<rolesUpdateWithoutUsersInput, rolesUncheckedUpdateWithoutUsersInput>
  }

  export type rolesUpdateWithoutUsersInput = {
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    roles_sections?: roles_sectionsUpdateManyWithoutRolesNestedInput
  }

  export type rolesUncheckedUpdateWithoutUsersInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    roles_sections?: roles_sectionsUncheckedUpdateManyWithoutRolesNestedInput
  }

  export type attribute_optionsCreateWithoutVariant_attribute_optionsInput = {
    attribute_id: number
    value: string
    additional_cost?: Decimal | DecimalJsLike | number | string | null
    attribute_option_images?: attribute_option_imagesCreateNestedManyWithoutAttribute_optionsInput
  }

  export type attribute_optionsUncheckedCreateWithoutVariant_attribute_optionsInput = {
    id?: number
    attribute_id: number
    value: string
    additional_cost?: Decimal | DecimalJsLike | number | string | null
    attribute_option_images?: attribute_option_imagesUncheckedCreateNestedManyWithoutAttribute_optionsInput
  }

  export type attribute_optionsCreateOrConnectWithoutVariant_attribute_optionsInput = {
    where: attribute_optionsWhereUniqueInput
    create: XOR<attribute_optionsCreateWithoutVariant_attribute_optionsInput, attribute_optionsUncheckedCreateWithoutVariant_attribute_optionsInput>
  }

  export type product_variantsCreateWithoutVariant_attribute_optionsInput = {
    sku: string
    price: Decimal | DecimalJsLike | number | string
    stock?: number
    created_at?: Date | string
    updated_at?: Date | string
    products: productsCreateNestedOneWithoutProduct_variantsInput
    promotion_variants?: promotion_variantsCreateNestedManyWithoutProduct_variantsInput
    variant_images?: variant_imagesCreateNestedManyWithoutProduct_variantsInput
    variant_ratings?: variant_ratingsCreateNestedManyWithoutProduct_variantsInput
  }

  export type product_variantsUncheckedCreateWithoutVariant_attribute_optionsInput = {
    id?: number
    product_id: number
    sku: string
    price: Decimal | DecimalJsLike | number | string
    stock?: number
    created_at?: Date | string
    updated_at?: Date | string
    promotion_variants?: promotion_variantsUncheckedCreateNestedManyWithoutProduct_variantsInput
    variant_images?: variant_imagesUncheckedCreateNestedManyWithoutProduct_variantsInput
    variant_ratings?: variant_ratingsUncheckedCreateNestedManyWithoutProduct_variantsInput
  }

  export type product_variantsCreateOrConnectWithoutVariant_attribute_optionsInput = {
    where: product_variantsWhereUniqueInput
    create: XOR<product_variantsCreateWithoutVariant_attribute_optionsInput, product_variantsUncheckedCreateWithoutVariant_attribute_optionsInput>
  }

  export type attribute_optionsUpsertWithoutVariant_attribute_optionsInput = {
    update: XOR<attribute_optionsUpdateWithoutVariant_attribute_optionsInput, attribute_optionsUncheckedUpdateWithoutVariant_attribute_optionsInput>
    create: XOR<attribute_optionsCreateWithoutVariant_attribute_optionsInput, attribute_optionsUncheckedCreateWithoutVariant_attribute_optionsInput>
    where?: attribute_optionsWhereInput
  }

  export type attribute_optionsUpdateToOneWithWhereWithoutVariant_attribute_optionsInput = {
    where?: attribute_optionsWhereInput
    data: XOR<attribute_optionsUpdateWithoutVariant_attribute_optionsInput, attribute_optionsUncheckedUpdateWithoutVariant_attribute_optionsInput>
  }

  export type attribute_optionsUpdateWithoutVariant_attribute_optionsInput = {
    attribute_id?: IntFieldUpdateOperationsInput | number
    value?: StringFieldUpdateOperationsInput | string
    additional_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    attribute_option_images?: attribute_option_imagesUpdateManyWithoutAttribute_optionsNestedInput
  }

  export type attribute_optionsUncheckedUpdateWithoutVariant_attribute_optionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    attribute_id?: IntFieldUpdateOperationsInput | number
    value?: StringFieldUpdateOperationsInput | string
    additional_cost?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    attribute_option_images?: attribute_option_imagesUncheckedUpdateManyWithoutAttribute_optionsNestedInput
  }

  export type product_variantsUpsertWithoutVariant_attribute_optionsInput = {
    update: XOR<product_variantsUpdateWithoutVariant_attribute_optionsInput, product_variantsUncheckedUpdateWithoutVariant_attribute_optionsInput>
    create: XOR<product_variantsCreateWithoutVariant_attribute_optionsInput, product_variantsUncheckedCreateWithoutVariant_attribute_optionsInput>
    where?: product_variantsWhereInput
  }

  export type product_variantsUpdateToOneWithWhereWithoutVariant_attribute_optionsInput = {
    where?: product_variantsWhereInput
    data: XOR<product_variantsUpdateWithoutVariant_attribute_optionsInput, product_variantsUncheckedUpdateWithoutVariant_attribute_optionsInput>
  }

  export type product_variantsUpdateWithoutVariant_attribute_optionsInput = {
    sku?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: productsUpdateOneRequiredWithoutProduct_variantsNestedInput
    promotion_variants?: promotion_variantsUpdateManyWithoutProduct_variantsNestedInput
    variant_images?: variant_imagesUpdateManyWithoutProduct_variantsNestedInput
    variant_ratings?: variant_ratingsUpdateManyWithoutProduct_variantsNestedInput
  }

  export type product_variantsUncheckedUpdateWithoutVariant_attribute_optionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_id?: IntFieldUpdateOperationsInput | number
    sku?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    promotion_variants?: promotion_variantsUncheckedUpdateManyWithoutProduct_variantsNestedInput
    variant_images?: variant_imagesUncheckedUpdateManyWithoutProduct_variantsNestedInput
    variant_ratings?: variant_ratingsUncheckedUpdateManyWithoutProduct_variantsNestedInput
  }

  export type product_variantsCreateWithoutVariant_imagesInput = {
    sku: string
    price: Decimal | DecimalJsLike | number | string
    stock?: number
    created_at?: Date | string
    updated_at?: Date | string
    products: productsCreateNestedOneWithoutProduct_variantsInput
    promotion_variants?: promotion_variantsCreateNestedManyWithoutProduct_variantsInput
    variant_attribute_options?: variant_attribute_optionsCreateNestedManyWithoutProduct_variantsInput
    variant_ratings?: variant_ratingsCreateNestedManyWithoutProduct_variantsInput
  }

  export type product_variantsUncheckedCreateWithoutVariant_imagesInput = {
    id?: number
    product_id: number
    sku: string
    price: Decimal | DecimalJsLike | number | string
    stock?: number
    created_at?: Date | string
    updated_at?: Date | string
    promotion_variants?: promotion_variantsUncheckedCreateNestedManyWithoutProduct_variantsInput
    variant_attribute_options?: variant_attribute_optionsUncheckedCreateNestedManyWithoutProduct_variantsInput
    variant_ratings?: variant_ratingsUncheckedCreateNestedManyWithoutProduct_variantsInput
  }

  export type product_variantsCreateOrConnectWithoutVariant_imagesInput = {
    where: product_variantsWhereUniqueInput
    create: XOR<product_variantsCreateWithoutVariant_imagesInput, product_variantsUncheckedCreateWithoutVariant_imagesInput>
  }

  export type product_variantsUpsertWithoutVariant_imagesInput = {
    update: XOR<product_variantsUpdateWithoutVariant_imagesInput, product_variantsUncheckedUpdateWithoutVariant_imagesInput>
    create: XOR<product_variantsCreateWithoutVariant_imagesInput, product_variantsUncheckedCreateWithoutVariant_imagesInput>
    where?: product_variantsWhereInput
  }

  export type product_variantsUpdateToOneWithWhereWithoutVariant_imagesInput = {
    where?: product_variantsWhereInput
    data: XOR<product_variantsUpdateWithoutVariant_imagesInput, product_variantsUncheckedUpdateWithoutVariant_imagesInput>
  }

  export type product_variantsUpdateWithoutVariant_imagesInput = {
    sku?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: productsUpdateOneRequiredWithoutProduct_variantsNestedInput
    promotion_variants?: promotion_variantsUpdateManyWithoutProduct_variantsNestedInput
    variant_attribute_options?: variant_attribute_optionsUpdateManyWithoutProduct_variantsNestedInput
    variant_ratings?: variant_ratingsUpdateManyWithoutProduct_variantsNestedInput
  }

  export type product_variantsUncheckedUpdateWithoutVariant_imagesInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_id?: IntFieldUpdateOperationsInput | number
    sku?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    promotion_variants?: promotion_variantsUncheckedUpdateManyWithoutProduct_variantsNestedInput
    variant_attribute_options?: variant_attribute_optionsUncheckedUpdateManyWithoutProduct_variantsNestedInput
    variant_ratings?: variant_ratingsUncheckedUpdateManyWithoutProduct_variantsNestedInput
  }

  export type rating_imagesCreateWithoutVariant_ratingsInput = {
    image_url: string
    created_at?: Date | string
  }

  export type rating_imagesUncheckedCreateWithoutVariant_ratingsInput = {
    id?: number
    image_url: string
    created_at?: Date | string
  }

  export type rating_imagesCreateOrConnectWithoutVariant_ratingsInput = {
    where: rating_imagesWhereUniqueInput
    create: XOR<rating_imagesCreateWithoutVariant_ratingsInput, rating_imagesUncheckedCreateWithoutVariant_ratingsInput>
  }

  export type rating_imagesCreateManyVariant_ratingsInputEnvelope = {
    data: rating_imagesCreateManyVariant_ratingsInput | rating_imagesCreateManyVariant_ratingsInput[]
    skipDuplicates?: boolean
  }

  export type customersCreateWithoutVariant_ratingsInput = {
    username: string
    email: string
    password: string
    address_id?: number | null
    is_active?: boolean | null
    created_at?: Date | string
    updated_at?: Date | string
    lastname: string
    photo?: string | null
    name?: string | null
    customers_addresses?: customers_addressesCreateNestedManyWithoutCustomersInput
  }

  export type customersUncheckedCreateWithoutVariant_ratingsInput = {
    id?: number
    username: string
    email: string
    password: string
    address_id?: number | null
    is_active?: boolean | null
    created_at?: Date | string
    updated_at?: Date | string
    lastname: string
    photo?: string | null
    name?: string | null
    customers_addresses?: customers_addressesUncheckedCreateNestedManyWithoutCustomersInput
  }

  export type customersCreateOrConnectWithoutVariant_ratingsInput = {
    where: customersWhereUniqueInput
    create: XOR<customersCreateWithoutVariant_ratingsInput, customersUncheckedCreateWithoutVariant_ratingsInput>
  }

  export type product_variantsCreateWithoutVariant_ratingsInput = {
    sku: string
    price: Decimal | DecimalJsLike | number | string
    stock?: number
    created_at?: Date | string
    updated_at?: Date | string
    products: productsCreateNestedOneWithoutProduct_variantsInput
    promotion_variants?: promotion_variantsCreateNestedManyWithoutProduct_variantsInput
    variant_attribute_options?: variant_attribute_optionsCreateNestedManyWithoutProduct_variantsInput
    variant_images?: variant_imagesCreateNestedManyWithoutProduct_variantsInput
  }

  export type product_variantsUncheckedCreateWithoutVariant_ratingsInput = {
    id?: number
    product_id: number
    sku: string
    price: Decimal | DecimalJsLike | number | string
    stock?: number
    created_at?: Date | string
    updated_at?: Date | string
    promotion_variants?: promotion_variantsUncheckedCreateNestedManyWithoutProduct_variantsInput
    variant_attribute_options?: variant_attribute_optionsUncheckedCreateNestedManyWithoutProduct_variantsInput
    variant_images?: variant_imagesUncheckedCreateNestedManyWithoutProduct_variantsInput
  }

  export type product_variantsCreateOrConnectWithoutVariant_ratingsInput = {
    where: product_variantsWhereUniqueInput
    create: XOR<product_variantsCreateWithoutVariant_ratingsInput, product_variantsUncheckedCreateWithoutVariant_ratingsInput>
  }

  export type rating_imagesUpsertWithWhereUniqueWithoutVariant_ratingsInput = {
    where: rating_imagesWhereUniqueInput
    update: XOR<rating_imagesUpdateWithoutVariant_ratingsInput, rating_imagesUncheckedUpdateWithoutVariant_ratingsInput>
    create: XOR<rating_imagesCreateWithoutVariant_ratingsInput, rating_imagesUncheckedCreateWithoutVariant_ratingsInput>
  }

  export type rating_imagesUpdateWithWhereUniqueWithoutVariant_ratingsInput = {
    where: rating_imagesWhereUniqueInput
    data: XOR<rating_imagesUpdateWithoutVariant_ratingsInput, rating_imagesUncheckedUpdateWithoutVariant_ratingsInput>
  }

  export type rating_imagesUpdateManyWithWhereWithoutVariant_ratingsInput = {
    where: rating_imagesScalarWhereInput
    data: XOR<rating_imagesUpdateManyMutationInput, rating_imagesUncheckedUpdateManyWithoutVariant_ratingsInput>
  }

  export type rating_imagesScalarWhereInput = {
    AND?: rating_imagesScalarWhereInput | rating_imagesScalarWhereInput[]
    OR?: rating_imagesScalarWhereInput[]
    NOT?: rating_imagesScalarWhereInput | rating_imagesScalarWhereInput[]
    id?: IntFilter<"rating_images"> | number
    rating_id?: IntFilter<"rating_images"> | number
    image_url?: StringFilter<"rating_images"> | string
    created_at?: DateTimeFilter<"rating_images"> | Date | string
  }

  export type customersUpsertWithoutVariant_ratingsInput = {
    update: XOR<customersUpdateWithoutVariant_ratingsInput, customersUncheckedUpdateWithoutVariant_ratingsInput>
    create: XOR<customersCreateWithoutVariant_ratingsInput, customersUncheckedCreateWithoutVariant_ratingsInput>
    where?: customersWhereInput
  }

  export type customersUpdateToOneWithWhereWithoutVariant_ratingsInput = {
    where?: customersWhereInput
    data: XOR<customersUpdateWithoutVariant_ratingsInput, customersUncheckedUpdateWithoutVariant_ratingsInput>
  }

  export type customersUpdateWithoutVariant_ratingsInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    lastname?: StringFieldUpdateOperationsInput | string
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    customers_addresses?: customers_addressesUpdateManyWithoutCustomersNestedInput
  }

  export type customersUncheckedUpdateWithoutVariant_ratingsInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    address_id?: NullableIntFieldUpdateOperationsInput | number | null
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    lastname?: StringFieldUpdateOperationsInput | string
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    customers_addresses?: customers_addressesUncheckedUpdateManyWithoutCustomersNestedInput
  }

  export type product_variantsUpsertWithoutVariant_ratingsInput = {
    update: XOR<product_variantsUpdateWithoutVariant_ratingsInput, product_variantsUncheckedUpdateWithoutVariant_ratingsInput>
    create: XOR<product_variantsCreateWithoutVariant_ratingsInput, product_variantsUncheckedCreateWithoutVariant_ratingsInput>
    where?: product_variantsWhereInput
  }

  export type product_variantsUpdateToOneWithWhereWithoutVariant_ratingsInput = {
    where?: product_variantsWhereInput
    data: XOR<product_variantsUpdateWithoutVariant_ratingsInput, product_variantsUncheckedUpdateWithoutVariant_ratingsInput>
  }

  export type product_variantsUpdateWithoutVariant_ratingsInput = {
    sku?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: productsUpdateOneRequiredWithoutProduct_variantsNestedInput
    promotion_variants?: promotion_variantsUpdateManyWithoutProduct_variantsNestedInput
    variant_attribute_options?: variant_attribute_optionsUpdateManyWithoutProduct_variantsNestedInput
    variant_images?: variant_imagesUpdateManyWithoutProduct_variantsNestedInput
  }

  export type product_variantsUncheckedUpdateWithoutVariant_ratingsInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_id?: IntFieldUpdateOperationsInput | number
    sku?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    promotion_variants?: promotion_variantsUncheckedUpdateManyWithoutProduct_variantsNestedInput
    variant_attribute_options?: variant_attribute_optionsUncheckedUpdateManyWithoutProduct_variantsNestedInput
    variant_images?: variant_imagesUncheckedUpdateManyWithoutProduct_variantsNestedInput
  }

  export type attribute_option_imagesCreateManyAttribute_optionsInput = {
    id?: number
    image_type?: $Enums.attribute_option_images_image_type
    display_order?: number | null
    image_url_thumb: string
    image_url_normal?: string | null
    image_url_zoom?: string | null
    alt_text?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type variant_attribute_optionsCreateManyAttribute_optionsInput = {
    variant_id: number
  }

  export type attribute_option_imagesUpdateWithoutAttribute_optionsInput = {
    image_type?: Enumattribute_option_images_image_typeFieldUpdateOperationsInput | $Enums.attribute_option_images_image_type
    display_order?: NullableIntFieldUpdateOperationsInput | number | null
    image_url_thumb?: StringFieldUpdateOperationsInput | string
    image_url_normal?: NullableStringFieldUpdateOperationsInput | string | null
    image_url_zoom?: NullableStringFieldUpdateOperationsInput | string | null
    alt_text?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type attribute_option_imagesUncheckedUpdateWithoutAttribute_optionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    image_type?: Enumattribute_option_images_image_typeFieldUpdateOperationsInput | $Enums.attribute_option_images_image_type
    display_order?: NullableIntFieldUpdateOperationsInput | number | null
    image_url_thumb?: StringFieldUpdateOperationsInput | string
    image_url_normal?: NullableStringFieldUpdateOperationsInput | string | null
    image_url_zoom?: NullableStringFieldUpdateOperationsInput | string | null
    alt_text?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type attribute_option_imagesUncheckedUpdateManyWithoutAttribute_optionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    image_type?: Enumattribute_option_images_image_typeFieldUpdateOperationsInput | $Enums.attribute_option_images_image_type
    display_order?: NullableIntFieldUpdateOperationsInput | number | null
    image_url_thumb?: StringFieldUpdateOperationsInput | string
    image_url_normal?: NullableStringFieldUpdateOperationsInput | string | null
    image_url_zoom?: NullableStringFieldUpdateOperationsInput | string | null
    alt_text?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type variant_attribute_optionsUpdateWithoutAttribute_optionsInput = {
    product_variants?: product_variantsUpdateOneRequiredWithoutVariant_attribute_optionsNestedInput
  }

  export type variant_attribute_optionsUncheckedUpdateWithoutAttribute_optionsInput = {
    variant_id?: IntFieldUpdateOperationsInput | number
  }

  export type variant_attribute_optionsUncheckedUpdateManyWithoutAttribute_optionsInput = {
    variant_id?: IntFieldUpdateOperationsInput | number
  }

  export type productsCreateManyBrandsInput = {
    id?: number
    name: string
    description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    base_price?: Decimal | DecimalJsLike | number | string | null
  }

  export type productsUpdateWithoutBrandsInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    base_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    product_variants?: product_variantsUpdateManyWithoutProductsNestedInput
  }

  export type productsUncheckedUpdateWithoutBrandsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    base_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    product_variants?: product_variantsUncheckedUpdateManyWithoutProductsNestedInput
  }

  export type productsUncheckedUpdateManyWithoutBrandsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    base_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type customers_addressesCreateManyCustomersInput = {
    id?: number
    name?: string | null
    description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type variant_ratingsCreateManyCustomersInput = {
    id?: number
    variant_id: number
    rating?: number
    review?: string | null
    title?: string | null
    verified_purchase?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type customers_addressesUpdateWithoutCustomersInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type customers_addressesUncheckedUpdateWithoutCustomersInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type customers_addressesUncheckedUpdateManyWithoutCustomersInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type variant_ratingsUpdateWithoutCustomersInput = {
    rating?: IntFieldUpdateOperationsInput | number
    review?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    verified_purchase?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    rating_images?: rating_imagesUpdateManyWithoutVariant_ratingsNestedInput
    product_variants?: product_variantsUpdateOneRequiredWithoutVariant_ratingsNestedInput
  }

  export type variant_ratingsUncheckedUpdateWithoutCustomersInput = {
    id?: IntFieldUpdateOperationsInput | number
    variant_id?: IntFieldUpdateOperationsInput | number
    rating?: IntFieldUpdateOperationsInput | number
    review?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    verified_purchase?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    rating_images?: rating_imagesUncheckedUpdateManyWithoutVariant_ratingsNestedInput
  }

  export type variant_ratingsUncheckedUpdateManyWithoutCustomersInput = {
    id?: IntFieldUpdateOperationsInput | number
    variant_id?: IntFieldUpdateOperationsInput | number
    rating?: IntFieldUpdateOperationsInput | number
    review?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    verified_purchase?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type promotion_variantsCreateManyProduct_variantsInput = {
    promotion_id: number
    promotion_price?: Decimal | DecimalJsLike | number | string | null
    stock_limit?: number | null
    created_at?: Date | string
  }

  export type variant_attribute_optionsCreateManyProduct_variantsInput = {
    attribute_option_id: number
  }

  export type variant_imagesCreateManyProduct_variantsInput = {
    id?: number
    image_type?: $Enums.variant_images_image_type
    image_url_thumb: string
    image_url_normal: string
    image_url_zoom: string
    is_primary?: boolean | null
    display_order?: number | null
    alt_text?: string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type variant_ratingsCreateManyProduct_variantsInput = {
    id?: number
    customer_id: number
    rating?: number
    review?: string | null
    title?: string | null
    verified_purchase?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type promotion_variantsUpdateWithoutProduct_variantsInput = {
    promotion_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    stock_limit?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    promotions?: promotionsUpdateOneRequiredWithoutPromotion_variantsNestedInput
  }

  export type promotion_variantsUncheckedUpdateWithoutProduct_variantsInput = {
    promotion_id?: IntFieldUpdateOperationsInput | number
    promotion_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    stock_limit?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type promotion_variantsUncheckedUpdateManyWithoutProduct_variantsInput = {
    promotion_id?: IntFieldUpdateOperationsInput | number
    promotion_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    stock_limit?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type variant_attribute_optionsUpdateWithoutProduct_variantsInput = {
    attribute_options?: attribute_optionsUpdateOneRequiredWithoutVariant_attribute_optionsNestedInput
  }

  export type variant_attribute_optionsUncheckedUpdateWithoutProduct_variantsInput = {
    attribute_option_id?: IntFieldUpdateOperationsInput | number
  }

  export type variant_attribute_optionsUncheckedUpdateManyWithoutProduct_variantsInput = {
    attribute_option_id?: IntFieldUpdateOperationsInput | number
  }

  export type variant_imagesUpdateWithoutProduct_variantsInput = {
    image_type?: Enumvariant_images_image_typeFieldUpdateOperationsInput | $Enums.variant_images_image_type
    image_url_thumb?: StringFieldUpdateOperationsInput | string
    image_url_normal?: StringFieldUpdateOperationsInput | string
    image_url_zoom?: StringFieldUpdateOperationsInput | string
    is_primary?: NullableBoolFieldUpdateOperationsInput | boolean | null
    display_order?: NullableIntFieldUpdateOperationsInput | number | null
    alt_text?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type variant_imagesUncheckedUpdateWithoutProduct_variantsInput = {
    id?: IntFieldUpdateOperationsInput | number
    image_type?: Enumvariant_images_image_typeFieldUpdateOperationsInput | $Enums.variant_images_image_type
    image_url_thumb?: StringFieldUpdateOperationsInput | string
    image_url_normal?: StringFieldUpdateOperationsInput | string
    image_url_zoom?: StringFieldUpdateOperationsInput | string
    is_primary?: NullableBoolFieldUpdateOperationsInput | boolean | null
    display_order?: NullableIntFieldUpdateOperationsInput | number | null
    alt_text?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type variant_imagesUncheckedUpdateManyWithoutProduct_variantsInput = {
    id?: IntFieldUpdateOperationsInput | number
    image_type?: Enumvariant_images_image_typeFieldUpdateOperationsInput | $Enums.variant_images_image_type
    image_url_thumb?: StringFieldUpdateOperationsInput | string
    image_url_normal?: StringFieldUpdateOperationsInput | string
    image_url_zoom?: StringFieldUpdateOperationsInput | string
    is_primary?: NullableBoolFieldUpdateOperationsInput | boolean | null
    display_order?: NullableIntFieldUpdateOperationsInput | number | null
    alt_text?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type variant_ratingsUpdateWithoutProduct_variantsInput = {
    rating?: IntFieldUpdateOperationsInput | number
    review?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    verified_purchase?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    rating_images?: rating_imagesUpdateManyWithoutVariant_ratingsNestedInput
    customers?: customersUpdateOneRequiredWithoutVariant_ratingsNestedInput
  }

  export type variant_ratingsUncheckedUpdateWithoutProduct_variantsInput = {
    id?: IntFieldUpdateOperationsInput | number
    customer_id?: IntFieldUpdateOperationsInput | number
    rating?: IntFieldUpdateOperationsInput | number
    review?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    verified_purchase?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    rating_images?: rating_imagesUncheckedUpdateManyWithoutVariant_ratingsNestedInput
  }

  export type variant_ratingsUncheckedUpdateManyWithoutProduct_variantsInput = {
    id?: IntFieldUpdateOperationsInput | number
    customer_id?: IntFieldUpdateOperationsInput | number
    rating?: IntFieldUpdateOperationsInput | number
    review?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    verified_purchase?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type product_variantsCreateManyProductsInput = {
    id?: number
    sku: string
    price: Decimal | DecimalJsLike | number | string
    stock?: number
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type product_variantsUpdateWithoutProductsInput = {
    sku?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    promotion_variants?: promotion_variantsUpdateManyWithoutProduct_variantsNestedInput
    variant_attribute_options?: variant_attribute_optionsUpdateManyWithoutProduct_variantsNestedInput
    variant_images?: variant_imagesUpdateManyWithoutProduct_variantsNestedInput
    variant_ratings?: variant_ratingsUpdateManyWithoutProduct_variantsNestedInput
  }

  export type product_variantsUncheckedUpdateWithoutProductsInput = {
    id?: IntFieldUpdateOperationsInput | number
    sku?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    promotion_variants?: promotion_variantsUncheckedUpdateManyWithoutProduct_variantsNestedInput
    variant_attribute_options?: variant_attribute_optionsUncheckedUpdateManyWithoutProduct_variantsNestedInput
    variant_images?: variant_imagesUncheckedUpdateManyWithoutProduct_variantsNestedInput
    variant_ratings?: variant_ratingsUncheckedUpdateManyWithoutProduct_variantsNestedInput
  }

  export type product_variantsUncheckedUpdateManyWithoutProductsInput = {
    id?: IntFieldUpdateOperationsInput | number
    sku?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type promotion_variantsCreateManyPromotionsInput = {
    variant_id: number
    promotion_price?: Decimal | DecimalJsLike | number | string | null
    stock_limit?: number | null
    created_at?: Date | string
  }

  export type promotion_variantsUpdateWithoutPromotionsInput = {
    promotion_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    stock_limit?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product_variants?: product_variantsUpdateOneRequiredWithoutPromotion_variantsNestedInput
  }

  export type promotion_variantsUncheckedUpdateWithoutPromotionsInput = {
    variant_id?: IntFieldUpdateOperationsInput | number
    promotion_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    stock_limit?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type promotion_variantsUncheckedUpdateManyWithoutPromotionsInput = {
    variant_id?: IntFieldUpdateOperationsInput | number
    promotion_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    stock_limit?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type roles_sectionsCreateManyRolesInput = {
    id?: number
    id_section?: number | null
  }

  export type usersCreateManyRolesInput = {
    id?: number
    username: string
    email: string
    password: string
    is_active?: boolean | null
    created_at?: Date | string
    updated_at?: Date | string
    lastname: string
    photo?: string | null
  }

  export type roles_sectionsUpdateWithoutRolesInput = {
    sections?: sectionsUpdateOneWithoutRoles_sectionsNestedInput
  }

  export type roles_sectionsUncheckedUpdateWithoutRolesInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_section?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type roles_sectionsUncheckedUpdateManyWithoutRolesInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_section?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type usersUpdateWithoutRolesInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    lastname?: StringFieldUpdateOperationsInput | string
    photo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type usersUncheckedUpdateWithoutRolesInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    lastname?: StringFieldUpdateOperationsInput | string
    photo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type usersUncheckedUpdateManyWithoutRolesInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    lastname?: StringFieldUpdateOperationsInput | string
    photo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type roles_sectionsCreateManySectionsInput = {
    id?: number
    id_rol?: number | null
  }

  export type roles_sectionsUpdateWithoutSectionsInput = {
    roles?: rolesUpdateOneWithoutRoles_sectionsNestedInput
  }

  export type roles_sectionsUncheckedUpdateWithoutSectionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_rol?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type roles_sectionsUncheckedUpdateManyWithoutSectionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_rol?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type services_imagesCreateManyServicesInput = {
    id?: number
    title?: string | null
    subtitle?: string | null
    description?: string | null
    created_at?: Date | string
    updated_at?: Date | string
    display_order?: number | null
    image_url?: string | null
  }

  export type services_imagesUpdateWithoutServicesInput = {
    title?: NullableStringFieldUpdateOperationsInput | string | null
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    display_order?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type services_imagesUncheckedUpdateWithoutServicesInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    display_order?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type services_imagesUncheckedUpdateManyWithoutServicesInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    display_order?: NullableIntFieldUpdateOperationsInput | number | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type rating_imagesCreateManyVariant_ratingsInput = {
    id?: number
    image_url: string
    created_at?: Date | string
  }

  export type rating_imagesUpdateWithoutVariant_ratingsInput = {
    image_url?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type rating_imagesUncheckedUpdateWithoutVariant_ratingsInput = {
    id?: IntFieldUpdateOperationsInput | number
    image_url?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type rating_imagesUncheckedUpdateManyWithoutVariant_ratingsInput = {
    id?: IntFieldUpdateOperationsInput | number
    image_url?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}